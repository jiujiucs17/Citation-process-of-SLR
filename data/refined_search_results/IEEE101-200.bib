@INPROCEEDINGS{5471926,
author={Rodríguez-Covili, Juan and Ochoa, Sergio F. and Pino, José A. and Messeguer, Roc and Medina, Esunly and Royo, Dolors},
booktitle={The 2010 14th International Conference on Computer Supported Cooperative Work in Design},
title={HLMP API: A software library to support the development of mobile collaborative applications},
year={2010},
volume={},
number={},
pages={479-484},
abstract={Mobile collaborative applications are usually deployed in work scenarios where the existence of fixed communication infrastructure is hard to predict. For that reason, these applications use Mobile Ad hoc Networks (MANETs) to support communication between mobile users. The complexity involved in such communication infrastructures make that developers avoid developing software for mobile work scenarios. However, it is possible to provide a reusable abstraction of such communication mechanisms, in order to avoid that developers have to deal with low-level programming. This article presents HLMP API, which is an application programming interface that provides access to a HLMP implementation. This API is organized as a fully distributed mobile communication infrastructure, able to run on MANETs. This infrastructure provides an important set of services, which are required to support mobile collaboration. The reuse of these services allows developers to reduce the complexity, times and cost of these development projects.},
keywords={Software libraries;Collaborative software;Application software;Collaborative work;Mobile communication;Mobile ad hoc networks;Routing protocols;International collaboration;Computer architecture;Costs;MANET;mobile collaborative work;mobile collaborative applications;communication support;collaborative systems development},
doi={10.1109/CSCWD.2010.5471926},
ISSN={},
month={April},}
@INPROCEEDINGS{9172756,
author={Müller, Sascha and Höflinger, Kilian and Smisek, Michal and Gerndt, Andreas},
booktitle={2020 IEEE Aerospace Conference},
title={Towards an FDIR Software Fault Tree Library for Onboard Computers},
year={2020},
volume={},
number={},
pages={1-10},
abstract={The increasing complexity of space missions, their software architectures, and hardware that has to meet the demands for those missions, imposes numerous new challenges for many engineering disciplines such as reliability engineering. Affected by the ever growing demand for more onboard computation power are the onboard computers. They in return require Fault Detection, Isolation, and Recovery (FDIR) architectures to support their fault tolerant operation in the harsh environment of space. Especially high performance commercial processing units face the challenge of dealing with negative radiation effects, which may significantly degrade their operation. To design performant and fault tolerant onboard computers, it is of high interest to assess the effectiveness of the FDIR architecture in the early phase of system design. This can be achieved using Fault Tree Analysis (FTA). However, to create complete fault trees manually is an error prone and labor intensive task. In this paper, the methodology for assessing the FDIR design of onboard computers in space systems, presented in [1], is refined by introducing a library of FDIR routines. The routines are modeled using fault trees and are composed into a software system fault tree using a basic fault model and a design configuration chosen by the reliability engineer. To assess the configurations, we give a heuristic based on a factor-criteria-metric model. We demonstrate the feasability of our approach on the basis of a case study on the rover of the Martian Moons eXploration (MMX) mission. Several FDIR configurations are studied and fault trees are generated for them. For the chosen case study, we obtain a reduction of up to 80% in terms of modeling effort.},
keywords={},
doi={10.1109/AERO47225.2020.9172756},
ISSN={1095-323X},
month={March},}
@INPROCEEDINGS{8555777,
author={Rebaya, Asma and Gasmi, Kaouther and Hasnaoui, Salem},
booktitle={2018 26th International Conference on Software, Telecommunications and Computer Networks (SoftCOM)},
title={A Simulink-Based Rapid Prototyping Workflow for Optimizing Software/Hardware Programming},
year={2018},
volume={},
number={},
pages={1-6},
abstract={The increasing complexity of programming embedded applications, such as signal processing and telecommunications, is accompanied by a rapid increase of multi- cores requirements in terms of speedup and computational power. Further, the software package Simulink is widely used in modeling and validating embedded applications. However, it is well-known that Simulink applications programming into multi- cores is a challenge. In this paper, in order to pass from Simulink applications to an efficient multi-cores implementation, we propose a rapid prototyping workflow starting from Simulink models to code generation. Our proposal allows to automatically transforming Simulink to Synchronous Dataflow (SDF) graph followed by an optimal schedule. The scheduler permits to determine the optimal number of cores and to schedule/map application tasks into the obtained architecture. Hence, an efficient and optimal code C is generated. To show the efficiency of our proposal, we use as case study the orthogonal frequency division multiplexing (OFDM) application. We prove that our proposal is efficient and optimal in terms of speedup and code generation results.},
keywords={Software packages;Task analysis;Multicore processing;Optimal scheduling;Solid modeling;Rapid prototyping;hardware/software system;multi-cores architecture;OFDM;rapid prototyping workflow;SDF;Simulink;speedup},
doi={10.23919/SOFTCOM.2018.8555777},
ISSN={1847-358X},
month={Sep.},}
@INPROCEEDINGS{4782533,
author={Rousseaux, Francis and Lhoste, Kevin},
booktitle={2009 Second International Conferences on Advances in Computer-Human Interactions},
title={Rapid Software Prototyping Using Ajax and Google Map API},
year={2009},
volume={},
number={},
pages={317-323},
abstract={Nowadays, when the evolution of IT tools is faster than ever, the user's needs are evolving even faster. For a software company such a context is difficult to be handled because, within a classical development cycle, the development of an application takes several months or years delivery. A rapid software prototyping could be very useful in those cases helping the user to rethink its needs in terms of functionalities and interfaces. We study how the emergence of new web tools, which allow developers to use a large predefined set of data and functionalities through free public APIs (e.g., Google maps) can help to achieve rapid software prototyping.This article will use a real-time example of rapid software prototyping for military applications. In the first part, we show past difficulties for designing such systems. In the second part, we show how the rapid prototyping strategy becomes relevant with the emergence of web tools. In the third part we present the technical implementation of the project. Finally we conclude about perspectives and limitations of this method.},
keywords={Software prototyping;Crisis management;Application software;Geographic Information Systems;Software tools;Management information systems;Java;Prototypes;Computer architecture;Database systems;Rapid software prototyping;Ajax;GIS;Geopolitical risk and crisis management;Collections},
doi={10.1109/ACHI.2009.68},
ISSN={},
month={Feb},}
@INPROCEEDINGS{1462675,
author={Hatlo, M. and James, F. and Mato, P. and Moneta, L. and Winkler, M. and Zsenei, A.},
booktitle={IEEE Symposium Conference Record Nuclear Science 2004.},
title={Developments of mathematical software libraries for the LHC experiments},
year={2004},
volume={4},
number={},
pages={2091-2094 Vol. 4},
abstract={This paper describes the activities performed by a working group formed with the objective to support and develop mathematical software for the LHC experiments. The goal is to share common mathematical libraries between the experiments and the LCG application area projects. We present the various library components and their design, with particular emphasis on fitting and minimization, describing the new object oriented implementation in C++ of the MINUIT minimization package.},
keywords={Software libraries;Large Hadron Collider;Packaging;Software packages;Random number generation;Collaborative software;Software performance;Application software;Grid computing;Seals},
doi={10.1109/NSSMIC.2004.1462675},
ISSN={1082-3654},
month={Oct},}
@INPROCEEDINGS{8289984,
author={Jiang, Boya and Lau, S S Y and Zhang, Qianning},
booktitle={2017 IEEE International Conference on Industrial Engineering and Engineering Management (IEEM)},
title={An integrated approach for automatic execution of BIM-based assemblies using light-framed constructions},
year={2017},
volume={},
number={},
pages={715-719},
abstract={This research suggests that the construction operation logic of industrialization is simulated by setting the family hierarchy to establish a BIM-based process simulation model for light-framed prefabs. Besides, Revit API technology and c# advanced programming language technology are used as means of implementation to develop an interface program of Revit Software for data statistics.},
keywords={Production facilities;Data models;Periodic structures;Standards;Software;Computer architecture;Solar panels;Prefabs;Building information modeling (BIM);Work Breakdown Structure (WBS);Process simulation model;Data statistics},
doi={10.1109/IEEM.2017.8289984},
ISSN={2157-362X},
month={Dec},}
@INPROCEEDINGS{5746011,
author={Hun, O Chang and Jeon, Yong-Hee},
booktitle={13th International Conference on Advanced Communication Technology (ICACT2011)},
title={Design, implementation and performance evaluation of a novel PESS (Performance Enhanced Software Streaming) technology},
year={2011},
volume={},
number={},
pages={1156-1161},
abstract={In order to prevent illegal copies of software and make consumers be able to use the software more conveniently, we propose a novel PESS (Performance Enhanced Software Streaming) technology. This technology is a service method which can support several applications software via streaming in networks. In this paper, we first describe both the design and implementation aspects of the technology. The main features in the implemented system are both a platform to be used in multiple operating systems in addition to Windows system and enhanced performance. We then compare the proposed system with some existing related systems and analyze several characteristics, and carry out the performance evaluation. Based on the performance evaluation, it is revealed that the ratio of CPU usage, memory utilization, and response ratio are greatly reduced. It is also shown that each application performance is much improved compared to that of general streaming technology.},
keywords={Servers;Software;Containers;Computers;Protocols;Performance evaluation;Central Processing Unit;Software Streaming;Software Library;Streaming Technology;Performance Evaluation;Cloud Computing},
doi={},
ISSN={1738-9445},
month={Feb},}
@INPROCEEDINGS{1016001,
author={Bazylevych, R. and Podolskyy, I.},
booktitle={Modern Problems of Radio Engineering, Telecommunications and Computer Science (IEEE Cat. No.02EX542)},
title={Features of the implementation of software package for circuits hierarchical clustering},
year={2002},
volume={},
number={},
pages={369-371},
abstract={The high-speed implementation of the algorithm of hierarchical clustering for very large-scale circuits is considered in this issue. It proposes effective date structures and program implementation with optimal utilization of computation expenses and storage budgets.},
keywords={Software packages;Circuits;Clustering algorithms;Large-scale systems;Merging;Data structures;Optical character recognition software;Very large scale integration;Computer science;Information technology},
doi={10.1109/TCSET.2002.1016001},
ISSN={},
month={Feb},}
@INPROCEEDINGS{1299196,
author={Allan, B.A. and Lefantzi, S. and Ray, J.},
booktitle={Ninth International Workshop on High-Level Parallel Programming Models and Supportive Environments, 2004. Proceedings.},
title={ODEPACK++: refactoring the LSODE Fortran library for use in the CCA high performance component software architecture},
year={2004},
volume={},
number={},
pages={109-119},
abstract={We present a case study of the alternatives and design trade-offs encountered when adapting an established numerical library into a form compatible with modern component-software implementation practices. Our study will help scientific software users, authors, and maintainers develop their own roadmaps for shifting to component-oriented software. The primary library studied, LSODE, and the issues involved in the adaptation are typical of many commonly used numerical libraries. We examine the adaptation of a related library, CVODE, and compare the impact on applications of the two different designs. The LSODE-derived components solve models composed with CCA components developed independently at the Argonne and Oak Ridge National Laboratories. The resulting applications run in the Ccaffeine framework implementation of the common component architecture specification. We provide CCA-style interface specifications appropriate to linear equations, ordinary differential equations (ODE), and differential algebraic equations (DAE) solvers.},
keywords={Software libraries;Software architecture;Application software;Software maintenance;Differential equations;Parallel programming;Component architectures;Differential algebraic equations;Software design;Object oriented modeling},
doi={10.1109/HIPS.2004.1299196},
ISSN={},
month={April},}
@INPROCEEDINGS{8754292,
author={Paz, Andrés and El Boussaidi, Ghizlane},
booktitle={2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC)},
title={Supporting Consistency in the Heterogeneous Design of Safety-Critical Software},
year={2019},
volume={1},
number={},
pages={37-46},
abstract={Safety-critical software are highly heterogeneous, possessing very different characteristics. These characteristics are described using diverse modelling mechanisms (e.g., MathWorks Simulink and Stateflow, UML). The different resulting models may facilitate understanding and communication, but hinder verification and certification. This is in part due to the fact that design models have to be kept consistent, specially in cases where overlaps exist. Moreover, where overlapping exists, mappings between overlapping elements are required. In particular, the regulated nature of these systems, along with the size and complexity of their design models requires well-defined guidelines for ensuring model consistency. This paper presents a model-driven approach for verifying consistency between UML, Simulink and Stateflow design models, and for recording mappings between overlapping elements in them. The approach is intended to be part of the design standards and process of avionics companies to help them comply with DO-178C. An avionics industrial case study is used to motivate the work and demonstrate the proposed approach.},
keywords={Unified modeling language;Software packages;Guidelines;Aerospace electronics;Design standards;Mathematical model;Model-driven engineering, safety-critical software, heterogeneous design, consistency, traceability, DO-178C},
doi={10.1109/COMPSAC.2019.00015},
ISSN={0730-3157},
month={Jul},}
@INPROCEEDINGS{9529361,
author={Huang, Pei-Shu and Fahmi, Faisal and Wang, Feng-Jian},
booktitle={2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)},
title={A Model to Helping the Construction of Creative Service-Based Software},
year={2021},
volume={},
number={},
pages={1235-1242},
abstract={With the advent of the Service Oriented Architecture (SOA) in system design, various domain knowledges are included in a service-based application, such as the design of Artificial Intelligence (AI) or augmented reality (AR) systems. While merging one or multiple domains into computation systems, the computation systems can be widely applied in various domain usages with novelty, useful, and surprising properties, which are defined as systems of creative computing. In creative computing, several theoretical evaluation metrics and verification approaches have been proposed for system design in several domains. However, a solid practical design environment for creative service-based systems is rarely considered in current researches. In this paper, we propose a model for creative service software development based on semantic web, which is applied in two phases: (1) requirement specification and (2) service design. In order to bridge the knowledge gap between domain experts and software engineers, and provide a machine-readable format for creative computing, two sub-models, Requirement Specification and Service Structure Models, are constructed in both phases, sequentially. After the latter sub-model is validated, the creative service software is well-constructed based on the services definition and composition represented by the model.},
keywords={Semantic Web;Measurement;Knowledge engineering;Computational modeling;Conferences;Merging;Solids;Creative Computing;Semantic Web;Service-Oriented Architecture},
doi={10.1109/COMPSAC51774.2021.00171},
ISSN={0730-3157},
month={July},}
@INPROCEEDINGS{7167240,
author={Ziegenbein, Dirk and Hamann, Arne},
booktitle={2015 52nd ACM/EDAC/IEEE Design Automation Conference (DAC)},
title={Timing-aware control software design for automotive systems},
year={2015},
volume={},
number={},
pages={1-6},
abstract={The underlying theories of both control engineering and real-time systems engineering assume idealized system abstractions that mutually neglect central aspects of the other discipline. Control engineering theory, on the one hand, usually assumes jitter free sampling and constant input-output latencies disregarding complex real-world timing effects. Real-time engineering theory, on the other hand, uses abstract performance models that neglect the functional behavior, and derives worst-case situations that have little expressiveness for control functionalities in physically dominated automotive systems. As a consequence, there is a lot of potential for a systematic co-engineering between both disciplines, increasing design efficiency and confidence. In this paper, we discuss possible approaches for such a co-engineering and their current applicability to real world problems. In particular, we compare simulation-based and formal verification techniques for various construction principles of automotive real-time control software.},
keywords={Timing;Time factors;Real-time systems;Automotive engineering;Jitter;Software packages;Automotive software;real-time;control engineering;simulation;verification},
doi={10.1145/2744769.2747947},
ISSN={0738-100X},
month={June},}
@INPROCEEDINGS{229302,
author={Wood, R.L. and Aboody, F.},
booktitle={[1992] Record of Conference Papers Industry Applications Society 39th Annual Petroleum and Chemical Industry Conference},
title={CASE tools and interactive process modeling accelerate the software development cycle for refined petroleum storage tank vapor recovery},
year={1992},
volume={},
number={},
pages={265-270},
abstract={A petroleum storage tank vapor recovery system is described. The project involves development of many different types of software for different platforms, including multiple programmable logic controller (PLC) code development. The CASE tool allows a structured and efficient approach to the project. It makes possible the design and is useful in the area of documentation. The potential of CASE tools in this application is not fully realized, because of the inherent limitations of the PLC utilizing structured programming. The modeling utilizes very simple electronic spreadsheets and commercial software packages to interface with the PLCs.<>},
keywords={Computer aided software engineering;Acceleration;Programming;Control systems;Pipelines;Programmable control;Petroleum;Iron;Computational modeling;Atmosphere},
doi={10.1109/PCICON.1992.229302},
ISSN={},
month={},}
@INPROCEEDINGS{4752494,
author={Nakano, Masahito and He, Yingxin and Miyamoto, Toshihisa and Tatsuno, Kyoichi},
booktitle={2008 International Symposium on Micro-NanoMechatronics and Human Science},
title={Construction of Software Library for Robots},
year={2008},
volume={},
number={},
pages={447-450},
abstract={We have proposed an architecture for easily constructing a robot controller. A controller has 7 agents and 3 databases. Agents are Man-Machine Interface, Task Planner, Motion Planner, Arm Controller, Visual Vision System, and CG Display. And databases are Work Knowledge Database, Environment Database and Robot Database. We construct this controller in C language easily as a function library such an Open GL(Open Graphics Library). A feature of this controller is one which can operate by command of task level. And also, the robot can work other tasks if we add only databases. This paper shows a Robot Controller Architecture as a sample of executing a task "Pick And Place".},
keywords={Software libraries;Spatial databases;Visual databases;Robot control;Computer architecture;User interfaces;Motion control;Control systems;Machine vision;Character generation},
doi={10.1109/MHS.2008.4752494},
ISSN={},
month={Nov},}
@INPROCEEDINGS{581711,
author={Path, D. and Chandrasekaran, A.},
booktitle={Proceedings The Twenty-Ninth Southeastern Symposium on System Theory},
title={A novel approach to the design and implementation of a power electronics simulation software package},
year={1997},
volume={},
number={},
pages={473-476},
abstract={The novel approach is to interface Matlab and Simulink with a graphical user interface (GUI) developed in Visual C++. Object oriented programming is a new way of approaching the job of programming. Object oriented programming was used to create a separate class for each of the items and devices to be handled on the screen. This power electronics software can be used for designing, analyzing and simulating power electronics circuits using a modified nodal formulation. The graphical user interface has a screen to draw the circuit with drag and drop features for the power electronic network components. The simulation is performed by external software, namely, Matlab/Simulink. The modified nodal formulation is used on the backward Euler formula and results in an equation which governs the circuit simulation. The entire circuit connection information is passed on to the background simulation program in the form of a precisely formatted matrix.},
keywords={Electronics packaging;Software packages;Object oriented modeling;Circuit simulation;Power electronics;Graphical user interfaces;Switches;Object oriented programming;Computational modeling;SPICE},
doi={10.1109/SSST.1997.581711},
ISSN={0094-2898},
month={March},}
@INPROCEEDINGS{9183547,
author={Zellmann, Stefan and Wickeroth, Daniel and Lang, Ulrich},
booktitle={2017 IEEE 10th Workshop on Software Engineering and Architectures for Realtime Interactive Systems (SEARIS)},
title={Visionaray: A Cross-Platform Ray Tracing Template Library},
year={2017},
volume={},
number={},
pages={1-8},
abstract={We present the software architecture of the C++ ray tracing template library Visionaray, which provides generic algorithms and data structures as building blocks for applications that traverse rays through 3-D space. While many state of the art ray tracing libraries are vendor specific and focus only on acceleration data structure traversal, Visionaray is cross platform compatible and implements several ray tracing-related tasks such as parallel ray generation, shading, Monte Carlo integration, or texture sampling. Visionaray was developed with a strong focus on real-time and interactive rendering on high performance computing platforms. The generic programming approach allows for loose coupling of algorithms and efficient binary code that is optimized for data and instruction cache utilization. We discuss implementation details and software architecture considerations to achieve real-time performance on hardware platforms ranging from single-board mini computers to GPGPUs. We prove the effectiveness of our approach by evaluating and discussing four case studies that focus on real-time rendering, scientific visualization, and virtual reality.},
keywords={Libraries;Ray tracing;C++ languages;Data structures;Real-time systems;Rendering (computer graphics);Programming;I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism—Raytracing;I.3.7 [Computer Graphics]: Three-Dimensional Graphics and Realism—Virtual reality;D.2.13 [Software Engineering]: Reusable Software—Reusable libraries},
doi={10.1109/SEARIS41720.2017.9183547},
ISSN={2328-7829},
month={March},}
@INPROCEEDINGS{6567696,
author={Kulasza, M. A. and Annakkage, U. D.},
booktitle={2013 26th IEEE Canadian Conference on Electrical and Computer Engineering (CCECE)},
title={Design of a software framework for research in power system modeling and simulation},
year={2013},
volume={},
number={},
pages={1-5},
abstract={This paper presents and discusses the design and implementation of an open source Python programming framework for research and education in power system modeling and simulation. The framework, named the Power System Oscillations Analyzer (PSOA), focuses particularly on providing the basic requirements to encourage rapid development of custom models and simulation software. The framework includes a custom modeling API to create power system models in an intuitive manner and a fully functional GUI for interaction with model data and the framework. Test results are also provided that demonstrate the capabilities of the framework in the analysis of the one machine infinite bus system.},
keywords={Data models;Graphical user interfaces;Power system stability;Libraries;Programming;Analytical models;Open source software;power system modeling;power system analysis},
doi={10.1109/CCECE.2013.6567696},
ISSN={0840-7789},
month={May},}
@INPROCEEDINGS{234934,
author={Scarbnick, C.D. and Chang, M.C. and Schultz, M.H. and Sherman, A.B.},
booktitle={[Proceedings 1992] The Fourth Symposium on the Frontiers of Massively Parallel Computation},
title={A parallel software package for solving linear systems},
year={1992},
volume={},
number={},
pages={397-401},
abstract={A problem arising in scientific computation is the solution of Ax=b, where A is a large, sparse matrix. One of the most robust algorithms for solving the above equation is the conjugate gradient method, especially when combined with a preconditioner. The authors discuss a new software package, MP-PCGPAK2, that implements a parallel version of the conjugate gradient method for MIMD (multiple-instruction multiple-data), message passing architectures. The parallel implementation is quite general and can be applied to algorithms for nonsymmetric or indefinite systems such as GMRES, Bi-CGSTAB, and QMR. The authors present results on a 1024 processor nCUBE 2, and a 128 processor iPSC/860, for positive definite, symmetric systems ranging from one million to over 11 million variables.<>},
keywords={Software packages;Linear systems;Sparse matrices;Gradient methods;Poisson equations;Packaging;Data structures;Computer architecture;Finite difference methods;Scheduling},
doi={10.1109/FMPC.1992.234934},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1607401,
author={Jiang Guo and Yuehong Liao and Parviz, B.},
booktitle={13th Annual IEEE International Symposium and Workshop on Engineering of Computer-Based Systems (ECBS'06)},
title={A collaboration-oriented software architecture modeling system $JArchiDesigner},
year={2006},
volume={},
number={},
pages={2 pp.-482},
abstract={A critical issue for complex component-based systems design is the modeling and analysis of architecture. Architectural specifications of software systems show them as a collection of interrelated components, and constitute what has been called the software architecture level of software design. However, since most of software architecture modeling tools, such as rational software architecture (RSA), run as stand-alone programs, there are still some inconveniency and incapability in fields of team designing and data management. The JArchiDesigner System was designed as efficient, secure, and manageable networking JArchiDesigner system to support collaborative design process. With the JArchiDesigner System, multiple users are able to concurrently access and manipulate the same software architecture information stored in a server machine. This paper discusses the software architecture design and implementation of JArchiDesigner System.},
keywords={Collaborative software;Software architecture;Collaborative work;Software libraries;Computer architecture;Software design;Process design;Network servers;Software engineering;International collaboration},
doi={10.1109/ECBS.2006.5},
ISSN={},
month={March},}
@INPROCEEDINGS{6148333,
author={Nanthaamornphong, Aziz and Carver, Jeffrey C.},
booktitle={2011 Second International Workshop on Replication in Empirical Software Engineering Research},
title={Design Patterns in Software Maintenance: An Experiment Replication at University of Alabama},
year={2011},
volume={},
number={},
pages={15-24},
abstract={Design patterns are widely used within the software engineer community. Researchers claim that design patterns improve software quality. In this paper, we describe two experiments, using graduate student participants, to study whether design patterns improve the software quality, specifically maintainability and understandability. We replicated a controlled experiment to compare the maintainability of two implementations of an application, one using a design pattern and the other using a simpler alternative. The maintenance tasks in this replication experiment required the participants to answer questions about a Java program and then modify that program. Prior to the replication, we performed a preliminary exercise to investigate whether design patterns improve the understandability of software designs. We gave the participants the graphical design of the systems that would be used in the replication study. The participant received either the version of the design containing the design pattern or the version containing the simpler alternative. We asked the participants a series of questions to see how well they understood the given design. The results of two experiments revealed that the design patterns did not improve either the maintainability or the understandability of the software. We found that there was no significant correlation between the maintainability and the understandability of the software even though the participants had received the design of the systems before they performed the maintenance tasks.},
keywords={Software design;Maintenance engineering;Libraries;Software quality;Software maintenance;Java;Controlled experiment;design pattern;maintenance;software designs},
doi={10.1109/RESER.2011.11},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{4548292,
author={Wang, Ze-Sheng and Xu, Ru-Zhi and Zhang, Kang-Kang and Feng, Da-Li},
booktitle={2008 International Conference on Internet Computing in Science and Engineering},
title={Design and Implementation of RAS-Based Reusable Asset Management Tool},
year={2008},
volume={},
number={},
pages={363-366},
abstract={In order to manage asset library effectively, this paper represents an approach of RAS-based asset management. The paper firstly extends the default component profile of RAS to improve software reuse, and then present tool's architecture based on the extended RAS, which is divided into main system and assistant system according to the function of every part of the tool. Finally, the tool is implemented to show that this solution is feasible and effective.},
keywords={Asset management;Software libraries;Computer architecture;Application software;Software systems;Design engineering;Software quality;Software reusability;Pattern analysis;Software testing;Reusable asset specification;Asset library;Software reuse;Component-based software development},
doi={10.1109/ICICSE.2008.63},
ISSN={2330-9857},
month={Jan},}
@INPROCEEDINGS{5689912,
author={Liu Fagui and Li Kai and Zhang Gongsheng},
booktitle={The 2nd International Conference on Information Science and Engineering},
title={The design & implementation of IGRS-and-UPnP-based DMA-SDK & its application in digital photo frame software},
year={2010},
volume={},
number={},
pages={1-5},
abstract={With the development of the 3C integration technology and the increasing popularity of Consumer Electronics, the new products continue to emerge. In recent years, consumer electronics based on the standard of home networking are rapidly developing. IGRS and UPnP protocol have primary and deep effect on the application of family media in our country. In order to develop digital home terminal product efficiently, this article proposes the design and implementation of an IGRS-and-UPnP-based DMA-SDK. The application developers can reuse the relevant modules provided by DMA-SDK effectively, and focus on the interface development and specific need-oriented modules. Thereby, it can greatly improve the developing efficiency of DMA application, and increase the product velocity.},
keywords={Protocols;Media;Servers;Libraries;Instruction sets;Consumer electronics;IGRS;UPnP;DMA;Dual Protocol DMA-SDK;Digital Photo Frame;Software Reuse},
doi={10.1109/ICISE.2010.5689912},
ISSN={2160-1291},
month={Dec},}
@INPROCEEDINGS{5380177,
author={Xue, Jingfeng and Hu, Changzhen and Wang, Kunsheng and Ma, Rui and Leng, Bingxin},
booktitle={2009 Second International Conference on Computer and Electrical Engineering},
title={Constructing a Knowledge Base for Software Security Detection Based on Similar Call Graph},
year={2009},
volume={1},
number={},
pages={593-597},
abstract={Software structure is very important for software security. But it is very difficult to obtain software structure by software execution trace. In this paper, by researching system call sequences in the process of software execution, similar call graph is proposed. We present how to generate similar call graph by observed system call sequences. Based on this, a knowledge base for software security detection is constructed. Experiments show false alarm rate can be decreased effectively by the knowledge base and detection rate is higher by using appropriate threshold.},
keywords={Information security;Software libraries;Computer security;Aerospace engineering;Association rules;Software systems;Kernel;Data security;Software Security;Similar Call Graph;Association Rules;Knowledge Base},
doi={10.1109/ICCEE.2009.66},
ISSN={},
month={Dec},}
@INPROCEEDINGS{6334552,
author={Cornish, Matt and Jain, Anand and Brown, Malcolm and Lopes, Teresa},
booktitle={2012 IEEE AUTOTESTCON Proceedings},
title={An open source software framework for the implementation of an open systems architecture, run-time system},
year={2012},
volume={},
number={},
pages={209-214},
abstract={This paper presents the outcome of a UK MoD sponsored development effort to provide a suite of source code that will be made available to contractors employed in the provision of test system software to the MoD and coalition partners. The primary purpose of this `open source software' is to provide a working test system software framework that meets the requirements of the MoD's DEFSTAN 66-31 [1] (Open Systems Architecture); in particular, the use of IEEE 1641 [2] and ATML [3]. Using the interfaces and data exchange formats defined by both IEEE 1641 and ATML, a software framework has been written to bring together COTS tools and test information, in an application that sees ATML Test Description through to UUT test pin. Specifically, the framework is broken down into the areas of: ATML Test Description Importer - Converting test requirements into a test program implementation carrying 1641 Test Procedure Language. 1641 Signal Translator - Mapping test signal requirements onto test resource capabilities (making use of ATML Test Station Description). Signal Routing - Connecting test resources to UUT pins. 1641 Test Signal Framework IDL Generator - Generating a run-time interface from 1641 signal libraries. 1641 Run-time - Implementing a 1641 runtime interface with calls to underlying test resources. COTS tools have been chosen from three different manufacturers, encompassing test program generation, test signal allocation and switch path routing. This project is known as the Open Systems Architecture Runtime System (OSA RTS).},
keywords={Computer architecture;Runtime;Libraries;Open source software;Instruments;Open systems;Switches;Open Systems Architecture;IEEE 1641;IEEE ATML;Signal & Test Definition},
doi={10.1109/AUTEST.2012.6334552},
ISSN={1558-4550},
month={Sep.},}
@INPROCEEDINGS{8587303,
author={Stehle, Tilmann and Riebisch, Matthias},
booktitle={2018 25th Australasian Software Engineering Conference (ASWEC)},
title={Application of Design Patterns for Structural Alignment in Software Porting},
year={2018},
volume={},
number={},
pages={181-190},
abstract={When porting software to new platforms, a common goal is to align the code structures of the original implementation and the target platform implementation. This way, double work for designing and implementing changes can be avoided during the subsequent evolution of both implementations. In this paper, we analyze five open source porting projects with regard to challenges that hamper this alignment. We identify a number of design patterns that are used in these projects to address these challenges. We analyze these design patterns with regard to their impact on the specific challenges of porting projects. The evaluation is compiled into a guideline for determining which of the analyzed patterns appropriately aligns the original and target platform implementations for a concrete platform-dependent piece of code. We describe our experience with applying these guidelines successfully to a porting project that we conducted for an industrial partner.},
keywords={Software;Guidelines;Java;User interfaces;Libraries;Tools;Porting;Design Patterns;Design Alignment},
doi={10.1109/ASWEC.2018.00032},
ISSN={2377-5408},
month={Nov},}
@INPROCEEDINGS{7926531,
author={Romano, Francesco and Traversaro, Silvio and Pucci, Daniele and Eljaik, Jorhabib and Del Prete, Andrea and Nori, Francesco},
booktitle={2017 First IEEE International Conference on Robotic Computing (IRC)},
title={A whole-body software abstraction layer for control design of free-floating mechanical systems},
year={2017},
volume={},
number={},
pages={148-155},
abstract={In this paper, we propose a software abstraction layer to simplify the design and synthesis of whole-body controllers without making any preliminary assumptions on the control law to be implemented. The main advantage of the proposed library is the decoupling of the control software from implementation details, which are related to the robotic platform. Furthermore, the resulting code is more clean and concise than ad-hoc code, as it focuses only on the implementation of the control law. In addition, we present a reference implementation of the abstraction layer together with a Simulink interface to provide support to Model-Driven based development. We also show the implementation of a simple proportional-derivative plus gravity compensation control together with a more complex momentum-based bipedal balance controller.},
keywords={Libraries;Software;Robot kinematics;Robot sensing systems;Control systems;Computational modeling;whole-body control;software architecture;free-floating mechanical systems},
doi={10.1109/IRC.2017.43},
ISSN={},
month={April},}
@INPROCEEDINGS{9782948,
author={Pekhteleva, V.R. and Titova, G.R.},
booktitle={2022 VI International Conference on Information Technologies in Engineering Education (Inforino)},
title={The Role of Modern Software Systems in the Formation of Professional Competencies of Specialists in the Electric Power Industry},
year={2022},
volume={},
number={},
pages={1-4},
abstract={The article is devoted to an analytical review of modern software products used in engineering design. The authors have determined the importance of obtaining skills to work with popular software complexes at the stage of formation of educational programs. The requirements of most employers for a graduate are the ability to perform specialized parts of a project using BIM technologies.},
keywords={Industries;Educational programs;Software systems;Power systems;Information technology;Engineering education;BIM modeling;educational programs;automated software package;engineering design},
doi={10.1109/Inforino53888.2022.9782948},
ISSN={},
month={April},}
@INPROCEEDINGS{7761102,
author={Pavin, Alexander and Inzartsev, Alexander and Eliseenko, Grigory},
booktitle={OCEANS 2016 MTS/IEEE Monterey},
title={Reconfigurable distributed software platform for a group of UUVs (yet another robot platform)},
year={2016},
volume={},
number={},
pages={1-7},
abstract={This paper deals with the design principles and implementation of a reconfigurable real-time software platform designed for data exchange between software modules of unmanned underwater and surface vehicles. The aim of developing a new robotic platform was the realization of a light-weight OS-independent library that allows integrating AUVs, ROVs and surface vehicles to a single computing cluster. The advantage of the developed system is the possibility of information interaction through the low-speed and unstable acoustic channel. It should be noted that the developed platform does not require any additional tools or software modules in the robot control system. All that is needed is a single library for inter-process communication, data logging and web-based graphical user interface. The developed system is used in several autonomous and remotely operated underwater vehicles, designed at the Institute for Marine Technology Problems and Far Eastern Federal University. The graphical user interface of this platform is based on the mechanism of web sockets and is compatible with the Robot Operating System.},
keywords={Software;Robots;Computers;Graphical user interfaces;Protocols;Servers;Libraries;robot platform;distributed software;reconfigurable;group;AUV;UUV},
doi={10.1109/OCEANS.2016.7761102},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{841663,
author={Khan, H.},
booktitle={FIE'99 Frontiers in Education. 29th Annual Frontiers in Education Conference. Designing the Future of Science and Engineering Education. Conference Proceedings (IEEE Cat. No.99CH37011},
title={Integration of robust 3D modeling software into the design curriculum},
year={1999},
volume={2},
number={},
pages={12D2/24-12D2/29 vol.2},
abstract={Engineering technology design curriculum is compartmentalized, and the students are not ready for contribution to the design team. This allegation is partly true, as there is no effective means of student integration of design concept into an indusrially sound application, using an industrially robust three dimensional design and manufacturing package. This paper studies the effectiveness of an Engineering Technology Program-Design concentration, via the traditional emphasis without an industrially capable integrated CAD/CAM software. The program effectiveness is evaluated by outcome based program evaluation and review technique. Next the program is studied along a different stream with the integration of a capable and robust 3D CAD/CAM/analysis software package. The same criteria of program effectiveness is used to compare the achievement and performance of the program. This is an evaluative study of efforts to integrate the design curriculum with a comprehensive unifying design software. Twenty final year students in a capstone Machine and Tool Design course used the robust design software. At the culmination of the course they were asked about their design skill experience and the effectiveness of the course. The survey revealed that student learning and professional design development was enhanced with the use of an effective CAD/CAM integration tool that enabled students to synthesize design problems which were challenging and practical. The result of this research is crucial to the ABET-2000 outcome based evaluation criteria and its implementation.},
keywords={Robustness;Software design;Design automation;Computer aided manufacturing;CADCAM;Acoustical engineering;Manufacturing industries;Design engineering;Application software;Packaging},
doi={10.1109/FIE.1999.841663},
ISSN={0190-5848},
month={Nov},}
@INPROCEEDINGS{8358613,
author={Jayalakshmi, C. and Sarangapani, R.},
booktitle={2017 International Conference On Smart Technologies For Smart Nation (SmartTechCon)},
title={Green libraries by using smart technology},
year={2017},
volume={},
number={},
pages={1496-1499},
abstract={A green Library is designed to minimize negative impact on the natural environment and maximize in door environmental quality by means of careful site selection, use of natural construction materials and biodegradable products conservation of resources (Water, energy, paper) and responsible waste proposal (recycling etc). Green Library is a part of Green building movement. There are several reasons why library would want to build green or incorporate green features into their buildings by using Smart Technology. First, the cost of constructing green buildings has become affordable. Second, most reading available energy resources to finite resources. Smart Technology means basically monitors and analysis of the hard drives which helps the workplace to save money and Energy. In this article., how by using smart Technology in Green Libraries reduce energy consumption, smart technology revolution to the development of Green Buildings by using mobile tools for accessing digital information and modernizing Library Missions.},
keywords={Libraries;Green buildings;Tools;Information technology;Buildings;Social network services;Green Libraries;Green Information Technology;Energy;Social Media;Software & Hardware systems},
doi={10.1109/SmartTechCon.2017.8358613},
ISSN={},
month={Aug},}
@INPROCEEDINGS{7937551,
author={Rozorinov, Heorhii and Chichikalo, Nina and Vlasjuk, Anna and Trapezon, Kirill and Arkhiiereieva, Elena},
booktitle={2017 XIIIth International Conference on Perspective Technologies and Methods in MEMS Design (MEMSTECH)},
title={Implementation of opportunities of labview software package in case of design of electronic frequency synthesizer on the basis of PAAF},
year={2017},
volume={},
number={},
pages={140-142},
abstract={Identified features that need to be considered when developing virtual appliances in a Lab VIEW environment. The simplest system of phase-locked loop with the indication of its disadvantages is given. Based on the software package Elanix SystemView complex LabVIEW built a model of frequency synthesizer based on PLL and for the given parameters and the division ratio of 5000 (the synthesized frequency is 2500 MHz), the system model was simulated on a time interval of 500 μs and at 3,075,782 sampling points. It was found that the spectrum of the signal in the region of the synthesized frequency as a whole approaches the spectrum of the harmonic signal, but it should be noted that parasitic harmonics are multiples of 50 kHz, and a low relative level of the useful signal is slightly more than 38 dBm.},
keywords={Frequency synthesizers;Frequency modulation;Phase locked loops;Generators;Synthesizers;Frequency conversion;Software packages;Frequency;simulation;range;filter;frequency synthesizer},
doi={10.1109/MEMSTECH.2017.7937551},
ISSN={},
month={April},}
@INPROCEEDINGS{6384402,
author={Muresan, Marius and Pitica, Dan},
booktitle={2012 IEEE 18th International Symposium for Design and Technology in Electronic Packaging (SIITME)},
title={Software in the Loop environment reliability for testing embedded code},
year={2012},
volume={},
number={},
pages={325-328},
abstract={This paper makes an analysis of the Software in the Loop (SiL) environment reliability for testing embedded system algorithms. The embedded system used during this analysis was developed around a C167CR microcontroller and based on a real-time (RT) operating system (OS). The main function of the control algorithm implemented into the embedded system is to control the speed of a DC motor. The embedded system software was wrapped into a SiL environment where the real-time operating system and the low level drivers where emulated. The obtained results where compared with the ones from Hardware in the Loop (HiL) testing system. Several aspects were followed during analysis: accuracy of the obtained results, proper functioning of the emulated RT OS, the possibility of using the same tools over product life cycle and implementation of automated.},
keywords={Mathematical model;Testing;Embedded systems;Real-time systems;DC motors;Software packages;embedded system;Software in the Loop;testing;life cycle},
doi={10.1109/SIITME.2012.6384402},
ISSN={},
month={Oct},}
@INPROCEEDINGS{6389402,
author={de Assis, Fabio Henrique and Takase, Fabio Kawaoka and Maruyama, Newton and Miyagi, Paulo Eigi},
booktitle={IECON 2012 - 38th Annual Conference on IEEE Industrial Electronics Society},
title={Developing an ROV software control architecture: A formal specification approach},
year={2012},
volume={},
number={},
pages={3107-3112},
abstract={The software development of control architectures for Remotely Operated Vehicles (ROVs) is a complex task. The use of formal specifications for critical systems can improve both correctness and completeness of specifications and implementations. In this work, a new method for developing control architectures based on formal specifications is introduced. The chosen formal specification language is the CSP-OZ, a combination of the CSP language for behavioral model and the Object-Z language for data model. At first, the CSP parts of specifications are verified using the FDR2 model checker. Then, CSP-OZ model specifications are coded using the ADA language. More specifically, the ADA language profile Ravenscar for concurrency and the SPARK language with its annotations for data modelling are used. The SPARK annotations give support for the Object-Z specifications. Later, the SPARK examiner can be used to statically check the code against the annotations. In order to illustrate the application of the method, the development of the software control architecture of the LAURS ROV is introduced. The embedded system is based on a PC104 Intel x86 running the real time operating system Vxworks.},
keywords={Sparks;Programming;Chip scale packaging;System recovery},
doi={10.1109/IECON.2012.6389402},
ISSN={1553-572X},
month={Oct},}
@INPROCEEDINGS{8729660,
author={Kondrashov, Mikhail and Pankratov, Aleksey and Batseva, Natalia},
booktitle={2019 International Siberian Conference on Control and Communications (SIBCON)},
title={The Architecture and Functionality of the Software to Identify the Actual Voltage Static Load Characteristics of Large Consumers},
year={2019},
volume={},
number={},
pages={1-5},
abstract={The correct voltage static load characteristics are required for efficient and reliable dispatching control in power systems and for stability simulation studies. Nowadays, one of the key problems is updating available static load characteristics due to the lack of special software for voltage and power measurement data processing. This article proposes the algorithm and architecture of special software and their implementation to computerize the process of correct voltage static load characteristics obtaining. The developed algorithm is based on data mining methods, and the results of calculations can be used in software packages that support the Common Information Model standard.},
keywords={Software;Load modeling;Clustering algorithms;Databases;Voltage measurement;Regression analysis;Reactive power;voltage static load characteristics;ZIP model;software;common information model;data mining;cluster analysis;regression analysis;anomaly detection},
doi={10.1109/SIBCON.2019.8729660},
ISSN={2380-6516},
month={April},}
@INPROCEEDINGS{9255544,
author={Shugailo, Yuriu and Levchenko, Andrii and Bercov, Yurii},
booktitle={2020 IEEE 6th International Conference on Methods and Systems of Navigation and Motion Control (MSNMC)},
title={Software of Numerical Analysis which is used in Teaching the Creation of Electronic Circuits},
year={2020},
volume={},
number={},
pages={77-80},
abstract={The paper proposes an approach to the choice of professional software products. The approach takes into account the influence of the multilevel organization of a modern computer on the correctness of the results. The approach is based on a preliminary study of a subject area relationships calculated and the estimation of a dimension of the variables numerical values. The implementation of the proposed approach to the selection of software products is demonstrated by the example of programs for a electronic circuits synthesis. The use of the proposed approach in various fields is due to the need to take into account different representations of the numerical values of variables. A different representation is implemented by the translator during the transition of computations to binary code at the level of the processor instruction architecture, which is normal for the operating system, but not obvious to the user. It is proposed to choose a software product that, along with the declared capabilities, excludes the risks of incorrect calculations in terms of relationships in the subject area. For calculating electronic circuits in laboratory classes, the MATLAB package was selected. In MATLAB, the indicated risks of incorrect calculations are maximally excluded.},
keywords={Digital filters;Nonlinear filters;Maximum likelihood detection;Matlab;Band-pass filters;Prototypes;Training;digit;numerical value;electronic circuit;software products;laboratory lesson;structure of practical work;numerical values of variables;reliability of calculations},
doi={10.1109/MSNMC50359.2020.9255544},
ISSN={},
month={Oct},}
@INPROCEEDINGS{558899,
author={Chase, M.P. and Harris, D.R. and Roberts, S.N. and Yeh, A.S.},
booktitle={Proceedings of WCRE '96: 4rd Working Conference on Reverse Engineering},
title={Analysis and presentation of recovered software architectures},
year={1996},
volume={},
number={},
pages={153-162},
abstract={Since architecture descriptions support multiple software engineering tasks, software architecture recovery tools must attend to accompanying secondary analysis and presentation issues. The authors describe the secondary analysis and presentation capabilities of ManSART, a software architecture recovery tool. As a central part of its design, ManSART contains operators and presentation generators. The operators simplify or combine "as-built" architectural views producing hierarchies, hybrids, and abstractions. Presentation generators create the representations that are necessary for supporting end-user software understanding and external tool input.},
keywords={Computer architecture;Software maintenance;Software tools;Documentation;Software engineering;Reverse engineering;Packaging;Feature extraction;Connectors;Laboratories},
doi={10.1109/WCRE.1996.558899},
ISSN={},
month={Nov},}
@INPROCEEDINGS{6140714,
author={Adnan, Md. Nasim and Islam, Md. Rashedul and Hossain, Sazzad},
booktitle={2011 Malaysian Conference in Software Engineering},
title={Clustering software systems to identify subsystem structures using knowledgebase},
year={2011},
volume={},
number={},
pages={445-450},
abstract={The structure of a software system deteriorates as a result of continuous maintenance activity. For the purpose of software reengineering or reverse engineering, software engineers often get the original source code as the most updated source of information due to lack of current documentation and limited or nonexistent availability of the original designers. The application of clustering techniques to software systems aiming to discover feature-oriented and meaningful subsystems can help software engineers involved in software reengineering or reverse engineering to understand high-level features provided by those subsystems. Continuous research is going on in the recent years - addressing different issues in the software clustering problem. Our software clustering approach introduces the use of Knowledgebase, which leads to considerable improvement than the existing approaches. Similarity measurement is the key to perform successful clustering. Similarity measurement in the existing approaches has a common drawback that they do not incorporate the diversity of software systems. Our approach uses Knowledgebase which acts as a repository of information about the internal structure of the generic types of the software systems to provide guidelines on similarity measurement criteria and their respective weightages. The final clustering is done by populating automatically generated subsystems along with the known subsystems (provided by Knowledgebase). In our research, we have developed a tool named “ULAB Cluster 1.0” which implements our new clustering approach. This clustering tool has been evaluated by using a benchmark named “MoJo distance” for different well-known software systems. The experimental results show that our approach generates more appropriate subsystems than the other existing clustering approaches and outperforms others in different dimensions of software clustering quality.},
keywords={Software systems;Software measurement;Weight measurement;Software algorithms;Libraries;Clustering algorithms;Knowledgebase;software engineering;reverse engineering;reengineering;software clustering},
doi={10.1109/MySEC.2011.6140714},
ISSN={},
month={Dec},}
@INPROCEEDINGS{9852830,
author={Bainbridge, David},
booktitle={2022 ACM/IEEE Joint Conference on Digital Libraries (JCDL)},
title={Building Digital Library Collections with Greenstone 3 Tutorial},
year={2022},
volume={},
number={},
pages={1-2},
abstract={This tutorial is designed for those who want an introduction to building a digital library using an open source software program. The tutorial will focus on the Greenstone digital library software. In particular, participants will work with the Greenstone Librarian Interface, a flexible graphical user interface designed for developing and managing digital library collections. Attendees do not require programming expertise, however they should be familiar with HTML and the Web, and be aware of representation standards such as Unicode, Dublin Core and XML.The Greenstone software has a pedigree of more than two decades, with over 1 million downloads from SourceForge. This tutorial will introduce users to Greenstone 3—a version of the software designed to take better advantage of newer standards and web technologies that have been developed since the previous implementation of Greenstone. Written in Java, the software is more modular in design to increase the flexibility and extensibility of the software. Emphasis in the tutorial is placed on where Greenstone 3 goes beyond what Greenstone 2 can do.CCS CONCEPTS • Information systems $\rightarrow$ Digital libraries and archives;• Human-centered computing $\rightarrow$ Interactive systems and tools.},
keywords={Java;Green buildings;Interactive systems;Buildings;XML;Tutorials;Programming;Digital Libraries;Open Source Software;Tutorial},
doi={},
ISSN={},
month={June},}
@ARTICLE{970582,
author={Chang, C.K. and Cleland-Huang, J. and Shiyan Hua and Kuntzmann-Combelles, A.},
journal={Computer},
title={Function-class decomposition: a hybrid software engineering method},
year={2001},
volume={34},
number={12},
pages={87-93},
abstract={In addition to offering a simple yet powerful method for decomposing a system, function-class decomposition (FCD) produces an architecture that is more supportive than traditional object-oriented decomposition for several software engineering tasks. A hybrid method that integrates structured analysis with an OO approach, FCD identifies classes in parallel with decomposing the system into a hierarchy of functional modules. Recently, developers extended FCD to integrate UML concepts. Useful for partitioning a system for distribution, the FCD hierarchy provides a framework for controlling development in a distributed software engineering environment. It also helps identify and integrate components in component-based development and supports the system life-cycle maintenance phase. Further, FCD addresses many of the initial analysis and design problems inherent in large and complex OO systems. The authors' experience with testing FCD on several applications validates its compatibility with OO methodologies and modeling techniques.},
keywords={Software engineering;Object oriented modeling;Software systems;Computer architecture;Guidelines;Application software;Collaboration;Software packages;Packaging;Programming},
doi={10.1109/2.970582},
ISSN={1558-0814},
month={Dec},}
@INPROCEEDINGS{6915557,
author={Messina, Fabrizio and Pappalardo, Giuseppe and Rosaci, Domenico and Sarné, Giuseppe M.L.},
booktitle={2014 Eighth International Conference on Complex, Intelligent and Software Intensive Systems},
title={An Agent Based Architecture for VM Software Tracking in Cloud Federations},
year={2014},
volume={},
number={},
pages={463-468},
abstract={Cloud Computing is the reference model for IT specialists offering high quality services in a pay-per-use fashion. Architectures and protocols for Cloud Federations have been designed to meet emerging requirements of Cloud infrastructure. In such a context IT providers can mutually rent virtual resources and exchange metadata in order to get more opportunity. In this paper we define VST - Virtual machine Software Tracking - as the process of extracting detailed information about software running in virtual machines in a transparent manner. Coupling VST data with those of resource consumption can help IaaS providers to be more precise when assigning resources to VMs. Moreover, sharing VST information across the cloud federation can help IaaS providers to get decision about VM placement in time. For this aim we provide an agent based architecture for collecting and sharing VST data in a Cloud Federation, together with a skeleton implementation by which the architecture has been tested.},
keywords={Virtual machining;Computer architecture;Monitoring;Resource management;Cloud computing;Libraries;Cloud;software architecture;software agents;VST;VRC;IaaS;XaaS;SaaS;PaaS;computing resources;performance;pay-per-use;providers;protocols;introspection;virtual machine;resource consumption},
doi={10.1109/CISIS.2014.66},
ISSN={},
month={July},}
@INPROCEEDINGS{5548530,
author={de Beer, R. and van Ormondt, D. and Di Cesare, F. and Graveron-Demilly, D. and Karras, D.A. and Starcuk, Z.},
booktitle={2010 IEEE International Conference on Imaging Systems and Techniques},
title={Accelerating batched 1D-FFT with a CUDA-capable computer},
year={2010},
volume={},
number={},
pages={446-451},
abstract={Summarizing we like to make the following concluding remarks: • We have assembled a low-cost CUDA-capable desktop PC, reflecting the PC state-of-the-art of about 1 1 over 2 years ago. • Via the Ubuntu 9.10 Linux operating system we could enable CUDA by installing a recent Linux NVIDIA driver and the CUDA software (version 2.3). • By applying the Java-bindings based JCuda software package we could call CUFFT library functions from a Java environment. • We could easily perform batched (multiple) 1D-FFT in a parallel fashion by exploiting the batch facility of CUFFT 1D-FFT for a CUDA-enabled GPU device. In this way we could avoid for statement looping, needed for the (CPU-based) reference method. • We could speed up the batched 1D-FFT execution time by about a factor of 20 by applying the GPU-based rather than the CPU-based approach. • Easy comparison of Java-based and ‘C for CUDA’-based benchmarking appeared to be hindered by the choices made for the JCuda implementation. • The CUDA-based benchmark results, reported in this work, seemed to be limited by the data-transfer bandwidth of the computer PCI Express 2.0×16 bus. • If data-transfer speed indeed is the limiting factor, significant computational accelerations can only be achieved if major parts of the numerical calculations can be carried out in the CUDA GPUs. • In the context of the latter, enhanced double-precision and amount of local memory of recent/future CUDA devices will become important. • Using CUDA-based batched 1D-FFT, we could carry out a sample user-guided exhaustive-search in MRS parameter space.},
keywords={Acceleration;Java;Linux;Software packages;Software libraries;Application software;Graphics;Magnetic resonance;Hardware;Assembly;Batched 1D-FFT;CUDA-enabled GPU;CUFFT library;Java bindings;home-assembled PC;jMRUI software package;exhaustive search in MRS},
doi={10.1109/IST.2010.5548530},
ISSN={1558-2809},
month={July},}
@INPROCEEDINGS{5718315,
author={Xu, Zheping and Cui, Jinzhong and Wang, Zhaogai and Liu, Fenghong and Liu, Guojun},
booktitle={2010 Second World Congress on Software Engineering},
title={The Architecture and Implementation of Biodiversity Digital Library in China},
year={2010},
volume={1},
number={},
pages={291-294},
abstract={Digital library is the trend of current traditional library. However, many problems, such as data collection, sharing, cooperation among different libraries and the copyright, disturb the development of digital library. Based on previous work and the cooperation with BHL (Biodiversity Heritage Library), this paper gives a description on lots of affairs in the construction of digital library in biodiversity: the hardware and software, the workflow with IA (Internet Archive), database basis, the architecture and the function. Some development works and future work are also demonstrated in the paper. The application of digital library in biodiversity will largely improve the service of related resources in traditional libraries and also have a pilot effect for many libraries in other disciplines.},
keywords={Libraries;Biodiversity;Internet;Books;Databases;Communities;Informatics;Digital library;Biodiversity Informatics;Biodiversity heritage Library;Scientific Community},
doi={10.1109/WCSE.2010.167},
ISSN={},
month={Dec},}
@INPROCEEDINGS{4062128,
author={Koval, Valeriy N. and Savyak, Volodymyr V. and Serhienko, Ivan V.},
booktitle={2005 IEEE Intelligent Data Acquisition and Advanced Computing Systems: Technology and Applications},
title={SCIT - First Supercomputer Cluster in Ukraine, Hardware Architecture and Software},
year={2005},
volume={},
number={},
pages={237-240},
abstract={The paper describes a first supercomputer cluster project in Ukraine, its hardware architecture and a software. There are described main ideas used to choose an architecture, components and an analyzes of competing solutions. The paper shows the performance results received on systems that were built. There are also described software packages made for cluster users support and their task performance by our cluster team.},
keywords={Supercomputers;Hardware;Computer architecture;Cybernetics;Performance analysis;Conferences;Data acquisition;Application software;Software packages;Europe;high-performance cluster supercomputer architecture implementation},
doi={10.1109/IDAACS.2005.282977},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{766623,
author={Arnold, E.C. and Brown, D.W.},
booktitle={International Symposium on Switching},
title={Object oriented software technologies applied to switching system architectures and software development processes},
year={1990},
volume={2},
number={},
pages={97-106},
abstract={This paper describes a switching system architecture and an associated software development process that establishes a foundation for increased software productivity and quality. The soft ware architecture is based on plug-compatible software com ponents that can be inoemented independent ofone another. The degree of independence between components is such that an individual component can be e4bted, compiled, and loaded on a target system independent of all other components. To achieve AW independence the system runtime environment is designed to make components insensitive to runtime data in other com ponents and to eliminate the need for a compile time definition of component interfaces. This was accomplished by using a Lisp language environment with object oriented wensions (Flavors) and a distributed processor operating system that is capable of routing messages to components addressed by symbolic names. Improvements in software productivity are based upon the premise that the Wistics required to produce large software products with conventional software development environments are a major obstacle to softwareproductivity. We observe that the time required to build large software products, the number of changes incorporated into these products, and the management overhead required to coordinate system changes are unaccept ably large. These limitations severely restrict our capacity to evolve and iterate system designs, and arisefrom our inability to make independent incremental changes to the system. A software development environment (SDE) that provides a very rapid edit-compile-test cycle is essentialfor supporting the evolution of switching system software architectures. We have determined that such an SDE (originally built for artificial intel ligence research) can be usedto design afullyfunctional switch ing system An indqpendenr trial of this process for a medium sized system (200K C source lines) indicates a possible factor of two increase in productivity for the complete software develop ment Cycle. A functionally distributed prototype switching system was built using this approach. It encompassesIMN local office calls, interoffice calls, processor recovery, recent change, and a system maintenance console. Initial performance measurements indi cate that performance acceptable for switching applications can be achievedwith a realtime-efficient Lisp implementation hosted on processors customized to the language environment},
keywords={Switching systems;Computer architecture;Software systems;Programming;Costs;Software packages;Packaging;Application software;Hardware;Productivity},
doi={10.1109/ISS.1990.766623},
ISSN={},
month={May},}
@INPROCEEDINGS{9505065,
author={Bhat, Koustubha and Kouwe, Erik van der and Bos, Herbert and Giuffrida, Cristiano},
booktitle={2021 51st Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
title={FIRestarter: Practical Software Crash Recovery with Targeted Library-level Fault Injection},
year={2021},
volume={},
number={},
pages={363-375},
abstract={Despite advances in software testing, many bugs still plague deployed software, leading to crashes and thus service disruption in high-availability production applications. Existing crash recovery solutions are either limited to transient faults or require manual annotations to target predetermined persistent bugs. Moreover, existing solutions are generally inefficient, hindering practical deployment.In this paper, we present FIRestarter (Fault Injection-based Restarter), an efficient and automatic crash recovery solution for commodity user applications. To eliminate the need for manual annotations, FIRestarter injects targeted software faults at the library interface to automatically trigger error handling code for standard library calls already part of the application. In particular, when a crash occurs, we roll back the application state before the last recoverable library call, inject a fault, and restart execution forcing the call to immediately return a predetermined error code. This strategy allows the application to automatically bypass the crashing code upon such a restart and exploits existing error-handling code to recover from even persistent bugs. Moreover, since library calls lie pervasively throughout the code, our design provides a large recovery surface despite the automated approach. Finally, FIRestarter's recovery windows are small and frequent compared to traditional checkpoint-restart, which enables new optimizations such as the ability to support rollback by means of hybrid hardware/software transactional memory instrumentation and improve performance. We apply FIRestarter to a number of event-driven server applications and show our solution achieves near-instantaneous, state-preserving crash recovery in the face of even persistent crashes. On popular web servers, our evaluation results show a recovery surface of at least 77%, with low performance overhead of at most 17%.},
keywords={Software testing;Annotations;Computer bugs;Manuals;Libraries;Software;Web servers;Crash Recovery;Adaptive Transactions;Persistent Fault Recovery;Recoverability;Survivability;Reliability;Persistent Faults;Transactional Memory},
doi={10.1109/DSN48987.2021.00048},
ISSN={2158-3927},
month={June},}
@INPROCEEDINGS{5649620,
author={Levillain, Roland and Géraud, Thierry and Najman, Laurent},
booktitle={2010 IEEE International Conference on Image Processing},
title={Why and howto design a generic and efficient image processing framework: The case of the Milena library},
year={2010},
volume={},
number={},
pages={1941-1944},
abstract={Most image processing frameworks are not generic enough to provide true reusability of data structures and algorithms. In fact, genericity allows users to write and experiment virtually any method on any compatible input(s). In this paper, we advocate the use of generic programming in the design of image processing software, while preserving performances close to dedicated code. The implementation of our proposal, Milena, a generic and efficient library, illustrates the benefits of our approach.},
keywords={IP networks;Image processing;Libraries;Algorithm design and analysis;Programming;Heuristic algorithms;Software;Genericity;Image Processing;Software Design;Reusability;Efficiency},
doi={10.1109/ICIP.2010.5649620},
ISSN={2381-8549},
month={Sep.},}
@INPROCEEDINGS{7226675,
author={Silva Filho, Roberto S. and Tewari, Anuj},
booktitle={2015 IEEE International Conference on Mobile Services},
title={Distributed Architecture for Mobile Contextual Integrated Field Work Applications},
year={2015},
volume={},
number={},
pages={81-88},
abstract={The current generation of corporate software tools & applications were not designed to support the unique needs of industrial field service work. Business software applications such as project management and time keeping, for example, are typically designed for traditional desktop computing office environments. As such, they assume low user mobility, high network availability and WIMP (Windows, Icons, Menus, and Pointer) user interfaces. These are also agnostic to physical environment context and are loosely integrated with one another, often requiring users to maintain duplicated information records. As a result, Field Services Personnel as Engineers, Superintendents and Craftsmen end up spending significant amount of their work time dealing with the consequences of these inefficiencies. In this paper, we describe a distributed architecture for mobile, contextual and integrated fieldwork software applications (or MCI) designed for mobile and wearable computing platforms. This software architecture defines a contextual and mobility-aware client side API, a flexible integration middleware, and instrumented backend services. We show how MCI can enable the construction of portable, mobile, context-aware and integrated software applications discussing its use in the implementation of Smart Outage, a mobile app used for automating common tasks in Field Engineering work.},
keywords={Mobile communication;Context;Middleware;Mobile handsets;Synchronization;Computer architecture;Distributed Software Architecture;Mobile & Contextual Computing;Application Integration;Field Engineering Automation},
doi={10.1109/MobServ.2015.21},
ISSN={2329-6453},
month={June},}
@INPROCEEDINGS{714421,
author={Jameson, K.W.},
booktitle={11th International Conference on Software Engineering},
title={A Model For The Reuse Of Software Design Information},
year={1989},
volume={},
number={},
pages={205-216},
abstract={This paper presents a general model for the representation and manipulation of module level software design information, leading to the effective reuse of software design information across different programming languages. Language independent design documents are represented as ASCII files containing tagged design information sufficient for the construction of a compilable program architecture. The resulting architecture is composed of documented module stubs which describe calling relationships, parameters, functional descriptions, and algorithms characteristic of the architecture. No executable code is included in the compilable modules. Frameworks of tagged locations in language dependent standard module templates are matched against corresponding tags in the ASCII design files, effectively blending language dependent and independent information into a compilable stub architecture. The process is reversible in that a language independent design file can be generated from am architecture in the standard tagged format, thus supporting the movement of design information across different programming languages.},
keywords={Software design;Computer architecture;Algorithm design and analysis;Computer languages;Permission;Handicapped aids;Software libraries;Marine vehicles;Programming;Costs},
doi={10.1109/ICSE.1989.714421},
ISSN={0270-5257},
month={May},}
@INPROCEEDINGS{9095618,
author={Joanna Santos, C. S. and Moshtari, Sara and Mirakhorli, Mehdi},
booktitle={2020 IEEE International Conference on Software Architecture Companion (ICSA-C)},
title={An Automated Approach to Recover the Use-case View of an Architecture},
year={2020},
volume={},
number={},
pages={63-66},
abstract={Many tools and techniques were described in the literature for automated recovery of software architecture from software artifacts, such as code. These approaches generate models of software architecture at different levels of granularity and notations. Whereas there is a vast literature in recovering components, packages, and interactions between them, we lack automated approaches for recovering the use-case view of an architecture. In the 4+1 view of the architecture, use-case view or scenarios represents a view of the architecture in terms of the systems' core functionalities provided to end-users. This view is essential in understanding the system and its underlying architectural decisions. Manually recovering and documenting the application's scenarios from source code is time-consuming, as large-scale enterprise systems can have a large number of scenarios. In this NEMI paper, we present a novel automated approach for recovering the scenarios from Web applications source code. These scenarios are shown in use case diagrams alongside with sequence diagrams that further describe how each use case is implemented in the system. Our approach works under the assumption that the URLs (endpoints) of a Web application can give us clues to the system's use cases. Therefore, our technique combines a set of heuristics and static analysis in order to detect the endpoints in a Java Web application as well as the backend classes and methods that will process the request. Subsequently, it uses Natural Language Processing (NLP) techniques to extract use cases from these identified endpoints and uses the computed program slices to generate sequence diagrams for each identified use case. We conducted an initial evaluation of our approach by detecting endpoints in Sagan, an existing open-source Web application. We then demonstrate the use cases generated and how their implementation looks like through sequence diagrams.},
keywords={Computer architecture;Uniform resource locators;Java;Metadata;XML;Software architecture;Software;Architecture recovery;Use case view;Web applications endpoints},
doi={10.1109/ICSA-C50368.2020.00020},
ISSN={},
month={March},}
@INPROCEEDINGS{9292259,
author={Visan, Daniel Alexandru and Jurian, Mariana and Lita, Ioan and Ionescu, Laurentiu Mihai and Mazare, Alin Gheorghita},
booktitle={2020 IEEE 26th International Symposium for Design and Technology in Electronic Packaging (SIITME)},
title={Software Controlled Radio Receiver for Versatile Wireless Communications},
year={2020},
volume={},
number={},
pages={132-135},
abstract={In this paper is presented the design and the implementation of a software controlled reconfigurable receiver that is intended to be used for wireless communications using analogue or digital modulation techniques. The hardware part of the system is realized around the specialized circuits RTL2832U and R820T2 which together forms a wideband radio receiver with an extended frequency domain of operation, ranging from 42MHz to 1000MHz. The versatility of the proposed equipment is achieved by using a novel architecture based on the software defined radio technology. The digital signal processing of the received signals is realized with a sampling frequency of 2,56Ms/s at a resolution of 8 bits. Through the USB interface, the receiver module is controlled by a computer that runs a proprietary Labview application. By using a very flexible configuration based on high performance circuits and software defined radio architecture, the proposed receiver represents a reliable solution for many applications including data transmission in wireless sensor networks or personal communications.},
keywords={Receivers;Tuners;Software radio;Software;Radio frequency;Hardware;Frequency synthesizers;receiver;software control;wireless communications},
doi={10.1109/SIITME50350.2020.9292259},
ISSN={2642-7036},
month={Oct},}
@INPROCEEDINGS{5952279,
author={Brunmayr, Peter and Haase, Jan and Grimm, Christoph},
booktitle={2011 Electronic System Level Synthesis Conference (ESLsyn)},
title={A hardware/software codesign template library for design space exploration},
year={2011},
volume={},
number={},
pages={1-6},
abstract={The ability to map a high level algorithm either to hardware or software simplifies design space exploration of cyber-physical systems. Thereby, low level tools can be utilized for accurate design parameter estimation, which helps to evaluate the effect of system level design decisions. Especially complex data structures pose a problem in this context. The different structure of memory in hardware and software requires different data structure implementations. With the presented data structure library a consistent design flow from a high level system model to either a hardware or software implementation is enabled. The concept extends the idea of abstract data types across the hardware/software boundary. Container adapters with appertaining implementations for system level simulation, hardware and software implementation support the designer throughout the whole design process. The benefit of the presented library is demonstrated and evaluated by a case study. With very little effort seven different hardware solutions were generated and compared concerning their power consumption and their resource usage.},
keywords={Containers;Hardware;Data structures;Software;Libraries;Random access memory;Computational modeling},
doi={10.1109/ESLsyn.2011.5952279},
ISSN={},
month={June},}
@INPROCEEDINGS{276216,
author={Meyer, D.},
booktitle={Proceedings 1992 IEEE International Conference on Computer Design: VLSI in Computers & Processors},
title={Alpha architecture: Hardware implementation and software programming implications},
year={1992},
volume={},
number={},
pages={4-5},
abstract={A description is given of Alpha, a 64-bit RISC architecture designed with emphasis on clock speed, multiple instruction issues and multiple processors. The author discusses byte manipulation, arithmetic traps, shared memory, the Privileged Architecture Library (PALcode), and Alpha's attractiveness for compiling a large variety of programming languages.<>},
keywords={Computer architecture;Hardware;Registers;Pipeline processing;Arithmetic;Reduced instruction set computing;Read-write memory;Logic;Delay;Buildings},
doi={10.1109/ICCD.1992.276216},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1194214,
author={De Turck, F. and Vanhastel, S. and Vlaeminck, K. and Dhoedt, B. and Demeester, P. and Vandermeulen, F. and De Backer, F. and Depuydt, F.},
booktitle={IFIP/IEEE Eighth International Symposium on Integrated Network Management, 2003.},
title={Design and implementation of a generic software architecture for the management of next-generation residential services},
year={2003},
volume={},
number={},
pages={605-618},
abstract={We address the design of a generic architecture for the management of residential services. The architecture consists of components both at the customers' side as well as at the service provider's side. The key features of the architecture are service modularity, the concept of service sessions, service packaging and subscription. The architecture allows service providers and telecom operators to rapidly provide new integrated value-added services to their customers. Layer-based design ensures that the architecture is independent of the particular service and service realization technology. The architecture provides generic access session management, service session management, subscription management and billing. Its implementation is based on J2EE (Java 2 Enterprise Edition). The various components of the architecture are discussed, together with the implementation issues.},
keywords={Software architecture;Subscriptions;Access protocols;IP networks;Home appliances;Telephony;Service oriented architecture;Packaging;Telecommunications;Virtual private networks},
doi={10.1109/INM.2003.1194214},
ISSN={},
month={March},}
@INPROCEEDINGS{9869233,
author={Santos, Max S. and Silva, Nilo E.M. and Bessa, Andrey R.R. and Santos, Andrew M. and Santos, Adriel V. and Amoedo, Diego A. and Mattos, Edma V.C.U. and Pereira, Antônio M.C. and M.N., Valney and Torres, Gustavo M. and Silva, Agemilson P. and Cruz, Caio F.S. and S.F., Rômulo and Belem, Ruan J.S. and Bezerra, Thiago B. and S.S., Waldir and Carvalho, Celso B.},
booktitle={2022 IEEE International Conference on Consumer Electronics - Taiwan},
title={Design and Implementation of a Software Library for Industrial IoT Sensor/Actuator Nodes},
year={2022},
volume={},
number={},
pages={515-516},
abstract={In this paper, conducted by two partners, called UFAM/CETELI and, Envision (TPV Group), we developed a software library that integrates the STM32L4+/ESP8266 micro-controllers, creating an IoT node that performs its functions concurrently with other processes, namely the MQTT/WiFi persistent communication functions, the publication and subscription of MQTT topics from the broker and, actuator functions, which is not found in the literature.},
keywords={Actuators;Software libraries;Software;Task analysis;Consumer electronics;Industrial Internet of Things},
doi={10.1109/ICCE-Taiwan55306.2022.9869233},
ISSN={2575-8284},
month={July},}
@INPROCEEDINGS{8253116,
author={Nedovodeev, Konstantin},
booktitle={2012 11th Conference of Open Innovations Association (FRUCT)},
title={Adaptive libraries for multicore architectures with explicitly-managed memory hierarchies},
year={2012},
volume={},
number={},
pages={126-135},
abstract={Programming of commodity multicore processors is a challenging task and it becomes even harder when the processor has an explicitly-managed memory hierarchy (EMMA). Software libraries in the field of matrix algebra try to keep pace with this challenge by using the dataflow model of computation and constructing tiled algorithms. A new approach to high-performance software library construction is proposed, which moves scheduling decisions to compile-time and is portable between different EMMA platforms. Performance and scalability analyses both demonstrate promising results. Experiments demonstrate near linear speedup on a synthetic multicore architecture, incorporating up to 16 working computational cores. Performance of a generated code is competitive with vendor BLAS implementations for the Cell processor.},
keywords={Program processors;Multicore processing;Computational modeling;Processor scheduling;Microprocessors;explicitly-managed memory hierarchy;adaptive library;BLAS},
doi={10.23919/FRUCT.2012.8253116},
ISSN={2305-7254},
month={April},}
@INPROCEEDINGS{9912118,
author={Dörr, Tobias and Schade, Florian and Masing, Leonard and Becker, Jürgen and Keramidas, Georgios and Antonopoulos, Christos P. and Mavropoulos, Michail and Kelefouras, Vasilios and Voros, Nikolaos},
booktitle={2022 IEEE Computer Society Annual Symposium on VLSI (ISVLSI)},
title={Safety by Construction: Pattern-Based Application of Safety Mechanisms in XANDAR},
year={2022},
volume={},
number={},
pages={369-370},
abstract={Considering the design of safety-critical embedded systems for future mobility solutions, the XANDAR project employs the X-by-Construction paradigm to meet non-functional requirements in an automated manner. This paper introduces the pattern library concept developed as part of the project and analyzes three state-of-the-art safety mechanisms for their compatibility with the approach.},
keywords={Embedded systems;Software architecture;Design methodology;Very large scale integration;Libraries;Safety;X-by-Construction;model-based design;multi-processor system-on-chip;embedded software;safety},
doi={10.1109/ISVLSI54635.2022.00081},
ISSN={2159-3477},
month={July},}
@INPROCEEDINGS{6674908,
author={Ding, Qian and Reece, Trey and Robinson, William H.},
booktitle={2013 IEEE 56th International Midwest Symposium on Circuits and Systems (MWSCAS)},
title={Timing analysis in software and hardware to implement NIST elliptic curves over prime fields},
year={2013},
volume={},
number={},
pages={1358-1362},
abstract={This paper presents an extensive study of the timing results for a software implementation of the NIST-recommended elliptic curves over prime fields. We have designed and simulated the important field operations and point operations on NIST-recommended elliptic curves over prime fields in C++ based on the MIRACL library for the purpose of optimized speed and efficiency. Specific experiments are conducted to study the data dependency relationship between input parameters (i.e., plaintext to encode) and output results (i.e., encoded message), and we found that the timing output is only contingent on the bit length of the input, regardless of the randomicity (random or fixed) of the input. We believe the work of this paper can provide more accurate and comprehensive information when we compare the performance of a software implementation of NIST prime elliptic curves with the corresponding hardware implementation under different circumstances, such as worst-case scenario or average-case scenario. We also compare the timing results of field and point operations to the critical path delay when implemented using a 90-nm cell library.},
keywords={Elliptic curve cryptography;Elliptic curves;Timing;Software;NIST;Hardware;Libraries;Elliptic Curve Cryptography;Modular Arithmetic;MIRACL;hardware/software co-design},
doi={10.1109/MWSCAS.2013.6674908},
ISSN={1558-3899},
month={Aug},}
@INPROCEEDINGS{501156,
author={Finkelstein, A. and Spanoudakis, G. and Ryan, M.},
booktitle={Proceedings of the 8th International Workshop on Software Specification and Design},
title={Software package requirements and procurement},
year={1996},
volume={},
number={},
pages={141-145},
abstract={The paper outlines the problems of specifying requirements and deploying these requirements in the procurement of software packages. Despite the fact that software construction de novo is the exception rather than the rule, little or no support for the task of formulating requirements to support assessment and selection among existing software packages has been developed. We analyse the problems arising in this process and review related work. We outline the key components of a programme of research in this area.},
keywords={Software packages;Procurement},
doi={10.1109/IWSSD.1996.501156},
ISSN={},
month={March},}
@INPROCEEDINGS{715961,
author={Dennis, J.B.},
booktitle={Proceedings. Third Working Conference on Massively Parallel Programming Models (Cat. No.97TB100228)},
title={A parallel program execution model supporting modular software construction},
year={1997},
volume={},
number={},
pages={50-60},
abstract={A watershed is near in the architecture of computer systems. There is overwhelming demand for systems that support a universal format for computer programs and software components so users may benefit from their use on a wide variety of computing platforms. At present this demand is being met by commodity microprocessors together with standard operating system interfaces. However current systems do not offer a standard API (application program interface) for parallel programming, and the popular interfaces for parallel computing violate essential principles of modular or component-based software construction. Moreover microprocessor architecture is reaching the limit of what can be done usefully within the framework of superscalar and VLIW processor models. The next step is to put several processors (or the equivalent) on a single chip. This paper presents a set of principles for modular software construction and describes a program execution model based on functional programming that satisfies the set of principles. The implications of the principles for computer system architecture are discussed together with a sketch of the architecture of a multithread processing chip which promises to provide efficient execution of parallel computations while providing a sound base for modular software construction.},
keywords={Computer architecture;Modular construction;Microprocessors;Concurrent computing;Operating systems;Software standards;Application software;Parallel programming;Parallel processing;VLIW},
doi={10.1109/MPPM.1997.715961},
ISSN={},
month={Nov},}
@INPROCEEDINGS{9936291,
author={Song, Yuming and Wang, Yaqin and Fang, Jian and Wang, Heng},
booktitle={2022 International Conference on Edge Computing and Applications (ICECAA)},
title={SaaS Service Architecture of Online System Platform for Engineering Project Management Teaching based on Computer Data Monitoring Algorithm},
year={2022},
volume={},
number={},
pages={71-74},
abstract={This paper proposes a data layer architecture based on mass customization for SaaS software services, and analyzes and compares three data architecture design schemes. A dynamic data expansion model is proposed for the engineering project management teaching course and shared Schema structure. The composition structure and functional modules of the computer basic course teaching resource library are expounded, and the construction and use of the cloud computing-based computer basic course teaching resource library are analyzed with effective ways. Manage the data access of the open SaaS service platform and conduct simulation analysis. The combination of open SaaS service architecture and LRU-RSIZE algorithm can effectively solve the problem of on-demand storage and management of user data.},
keywords={Mass customization;Computational modeling;Software as a service;Education;Software algorithms;Project management;Computer architecture;SaaS Service Architecture;Online System Platform;Engineering Project Management;Computer Data Monitoring Algorithm},
doi={10.1109/ICECAA55415.2022.9936291},
ISSN={},
month={Oct},}
@INPROCEEDINGS{9700354,
author={Filippone, Gianluca and Autili, Marco and Rossi, Fabrizio and Tivoli, Massimo},
booktitle={2021 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
title={Migration of Monoliths through the Synthesis of Microservices using Combinatorial Optimization},
year={2021},
volume={},
number={},
pages={144-147},
abstract={Microservices are an emerging architectural style that is gaining a growing interest from companies and research. They are small, distributed, autonomous and loosely coupled services that are deployed independently and work together by communicating through lightweight protocols. Microservices are easy to update, scale, deploy, and reduce the time-to-market thanks to continuous delivery and DevOps. Several existing systems, in contrast, are difficult to maintain, evolve, and scale. For these reasons, microservices are the ideal candidates for the refactoring and modernization of long-lived monolithic systems. However, the migration process is a complex, time-consuming and error-prone task that needs the support of appropriate tools to assist software designers and programmers from the extraction of a proper architecture to the implementation of the novel microservices. This paper proposes a possible solution for the automated decomposition of a monolithic system into microservices, which exploits combinatorial optimization techniques to manage the decomposition. Our proposal covers the whole decomposition process, from the microservice architecture definition to the generation of the code of the microservices and their APIs, in order to assist developers and ensure by construction the correct behavior of the refactored system.},
keywords={Protocols;Conferences;Microservice architectures;Computer architecture;Companies;Software;Software reliability;microservices;system decomposition;microservices architecure;software synthesis},
doi={10.1109/ISSREW53611.2021.00056},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1504170,
author={Yu Xiong and Ji Liu and Fitzgerald, P. and Daizhong Su},
booktitle={Proceedings of the Ninth International Conference on Computer Supported Cooperative Work in Design, 2005.},
title={Service oriented software package bank},
year={2005},
volume={2},
number={},
pages={661-666 Vol. 2},
abstract={A service-oriented framework has been developed to enable geographically dispersed team members to share programmes online over the Internet. The advanced technique of Web services has been utilized for the users to provide and to request the services, the new system can satisfy the requirements of copyright problem, maintenance and other issues. The user of the software can get description files and build their own client application to access the shared application via Internet. The layout and concrete implementation is also discussed in this paper.},
keywords={Software packages;Application software;Web services;Logic;Computer aided manufacturing;Design engineering;Concrete;Computer science;Web and internet services;Fires},
doi={10.1109/CSCWD.2005.194263},
ISSN={},
month={May},}
@INPROCEEDINGS{1275835,
author={Kovacshazy, T. and Samu, G. and Peceli, G.},
booktitle={IEEE International Symposium on Intelligent Signal Processing, 2003},
title={Simulink block library for fast prototyping of reconfigurable DSP systems},
year={2003},
volume={},
number={},
pages={179-184},
abstract={We present a block library for Matlab/Simulink that allows fast prototyping of reconfigurable DSP systems. Up till now no similar software package was available. The block library supports the construction of reconfigurable discrete time linear and nonlinear systems from reconfigurable digital filters using various filter structures, state-space form implementations, polynomial filters, and PID controllers. We list the requirements for the block library and introduce the main implementation related decisions that allows the block library to meet these requirements. An example illustrates the usage of the block library.},
keywords={Prototypes;Digital signal processing;Software libraries;Digital filters;Software prototyping;Nonlinear filters;Software packages;Nonlinear systems;Polynomials;Three-term control},
doi={10.1109/ISP.2003.1275835},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{8217699,
author={Ahmed, Nauman and Mushtaq, Hamid and Bertels, Koen and Al-Ars, Zaid},
booktitle={2017 IEEE International Conference on Bioinformatics and Biomedicine (BIBM)},
title={GPU accelerated API for alignment of genomics sequencing data},
year={2017},
volume={},
number={},
pages={510-515},
abstract={Sequence alignment is a core step in the processing of DNA and RNA sequencing data. In this paper, we present a high performance GPU accelerated set of APIs (GASAL) for pairwise sequence alignment of DNA and RNA sequences. The GASAL APIs provide accelerated kernels for local, global as well as semi-global alignment, allowing the computation of the alignment score, and optionally the start and end positions of the alignment. GASAL outperforms the fastest CPU-optimized SIMD implementations such as SSW and Parasail. It also outperforms NVBIO, NVIDIA's own CUDA library for sequence analysis of high-throughput sequencing data. GASAL uses the unique approach of also performing the sequence packing on GPU, which is over 200× faster than the NVBIO approach. Overall on Tesla K40c GASAL is 10-14× faster than 28 Intel Xeon cores and 3-4× faster than NVBIO with a query length of 100 bases. The APIs are included in an easy to use library to allow integration into various bioinformatics tools.},
keywords={Graphics processing units;DNA;Acceleration;Libraries;Sequential analysis;RNA;Databases;sequence alignment;GPU acceleration;software API;NGS},
doi={10.1109/BIBM.2017.8217699},
ISSN={},
month={Nov},}
@INPROCEEDINGS{1607172,
author={Cheng, Y.C. and Chien-Tsun Chen and Jung-Sing Jwo},
booktitle={12th Asia-Pacific Software Engineering Conference (APSEC'05)},
title={Exception handling: an architecture model and utility support},
year={2005},
volume={},
number={},
pages={8 pp.-},
abstract={Exception handling design is an important but difficult subject in software development. In Java software development, the use of checked exceptions exacerbates the difficulty. In this paper, through the use of an architectural model, we show that an application can benefit from a separation of exceptions in terms of recoverability beyond distinguishing checked and unchecked exceptions. The architectural model helps evaluate and balance conflicting quality requirements such as modifiability, readability, and fault tolerance. Facilitated by object-oriented utility libraries, the architecture model guides the design from early stage of the development; an example is given to illustrate its use.},
keywords={Object oriented modeling;Java;Fault tolerance;Computer architecture;Computer science;Design engineering;Programming;Application software;Libraries;Connectors},
doi={10.1109/APSEC.2005.66},
ISSN={1530-1362},
month={Dec},}
@INPROCEEDINGS{5541775,
author={Mejías, Boris and Gutiérrez, Gustavo and Roy, Peter Van and Thomson, John and Trezentos, Paulo},
booktitle={2010 19th IEEE International Workshops on Enabling Technologies: Infrastructures for Collaborative Enterprises},
title={Lock-Free Decentralized Storage for Transactional Upgrade Rollback},
year={2010},
volume={},
number={},
pages={229-234},
abstract={Installing and upgrading software may introduce conflicts and errors into a system. Transactional Rollback allows the system to return back to a previous, stable and known state. However, to perform such a rollback, it is necessary to store a large amount of information including configuration and installation logs, as well as different versions of software packages. Nevertheless, much of this information is common to several users using the same software and performing the same operations. We can reduce the total amount of storage by having a decentralized architecture using a Distributed Hash Table (DHT) to localise shared resources. We propose a lock-free key/value-set protocol to add and remove data from the DHT. The lock-free protocol is not limited to transactional rollback, and it can be used by other applications that also need value-sets as part of their stored data.},
keywords={Packaging;Protocols;Open source software;Collaborative software;Software packages;Application software;Operating systems;Linux;Software performance;Dynamic programming;software distribution;transactinoal rollback;decentralized storage;peer-to-peer;lock-free protocols},
doi={10.1109/WETICE.2010.43},
ISSN={1524-4547},
month={June},}
@INPROCEEDINGS{584583,
author={Vahid, F. and Tauro, L.},
booktitle={Proceedings of 5th International Workshop on Hardware/Software Co Design. Codes/CASHE '97},
title={An object-oriented communication library for hardware-software codesign},
year={1997},
volume={},
number={},
pages={81-86},
abstract={Implementing communication between hardware and software components can be a time-consuming task. Numerous communication protocols are available, differing greatly in their implementation details. Designers must spend much time focusing on those details. Even when libraries are available to encapsulate communication into C or VHDL routines, these routines are not consistent across protocols, making it difficult to switch to other protocols. We propose an object-oriented communication library, which provides pre-implemented channel-based send/receive communication primitives, allowing easy implementation and seamless migration across protocols and components.},
keywords={Field programmable gate arrays;Signal processing;Software libraries;Hardware;Switches;Microcontrollers;Message passing;Testing;Access protocols;Computer science},
doi={10.1109/HSC.1997.584583},
ISSN={1092-6100},
month={March},}
@ARTICLE{7305768,
author={Song, William J. and Mukhopadhyay, Saibal and Yalamanchili, Sudhakar},
journal={IEEE Transactions on Components, Packaging and Manufacturing Technology},
title={KitFox: Multiphysics Libraries for Integrated Power, Thermal, and Reliability Simulations of Multicore Microarchitecture},
year={2015},
volume={5},
number={11},
pages={1590-1601},
abstract={With continued technology scaling and increased power and thermal densities, processor operation and performance are increasingly dominated by physical phenomena. Microarchitectural approaches to mitigate these effects must be based on a profound understanding of how the physics is manifested in microarchitectural executions and system-level properties, such as performance, energy efficiency, or lifetime reliability. This requires a modeling and simulation environment that incorporates multiple physical phenomena and their concurrent interactions with microarchitecture. In this paper, we introduce an integrated power, thermal, and reliability modeling framework, KitFox. The goal of KitFox framework is to facilitate research explorations at the intersection of applications, microarchitectures, and various physical phenomena, including energy, power, thermal, cooling, and reliability. The KitFox framework implements a standard interface to bridge multiple physical models, where individual models are encapsulated into libraries and are interchangeable. This paper describes the design methodology of the library framework that orchestrates various implementations of physical models and standardized interface to cycle-level microarchitecture simulators. Several use cases are presented to demonstrate the range of modeling capabilities of KitFox.},
keywords={Libraries;Microarchitecture;Solid modeling;Reliability;Computational modeling;Integrated circuit modeling;Data models;Computer architecture;design methodology;software engineering.;Computer architecture;design methodology;software engineering},
doi={10.1109/TCPMT.2015.2485158},
ISSN={2156-3985},
month={Nov},}
@INPROCEEDINGS{4341506,
author={Baronti, F. and Lenzi, F. and Roncella, R. and Saletti, R.},
booktitle={10th Euromicro Conference on Digital System Design Architectures, Methods and Tools (DSD 2007)},
title={A Hardware-Software Platform for Design and Verification of In-Motorcycle Electronic Systems},
year={2007},
volume={},
number={},
pages={440-443},
abstract={This paper describes a hardware-software platform suitable for rapid prototyping of electronic systems for in-motorcycle applications. The hardware platform architecture is characterized by two programmable components consisting of an 8-bit microcontroller and a PC-like device, such as a portable PC or a PDA, which communicate by means of a Bluetooth wireless link or a CAN bus. The application can dynamically be partitioned on the two processors, during the design and verification phases. This allows the hardware-in- the-loop simulation and the fine-tuning of the control algorithm before porting the application to the embedded processor. Two application examples for motorcycles are presented. They demonstrate that the designed hardware/software platform leads to rapid and low-cost implementations of innovative in- motorcycle electronic systems.},
keywords={Hardware;Consumer electronics;Vehicles;Application software;Costs;Design methodology;Computer architecture;Libraries;Voltage;Prototypes},
doi={10.1109/DSD.2007.4341506},
ISSN={},
month={Aug},}
@ARTICLE{1003457,
author={Komi-Sirvio, S. and Mantyniemi, A. and Seppanen, V.},
journal={IEEE Software},
title={Toward a practical solution for capturing knowledge for software projects},
year={2002},
volume={19},
number={3},
pages={60-62},
abstract={Rarely has a professional field evolved as quickly as software development. Software organizations are continuously struggling to keep abreast of new technologies frequently changing customer requirements; and increasingly complex software architectures, methods, and tools. Recently, many organizations have come to understand that to succeed in the future, they must manage and use knowledge more effectively at individual, team, and organizational levels. Efficient creation, distribution, and reuse of up-to-date knowledge are critical success factors that unfortunately remain difficult to achieve in practice. Knowledge-sharing events between group members have proven to be a better way of sharing knowledge than the database, but the results of these events could never be packaged and reused for future projects. One company's solution was to develop a needs-based approach that would deliver knowledge just in time.},
keywords={Databases;Project management;Packaging;Knowledge management;Software tools;Software architecture;Data analysis;Face;Humans;Guidelines},
doi={10.1109/MS.2002.1003457},
ISSN={1937-4194},
month={May},}
@INPROCEEDINGS{9817183,
author={Popescu, George-Vlăduţ and Bîră, Călin},
booktitle={2022 14th International Conference on Communications (COMM)},
title={Python-Based Programming Framework for a Heterogeneous MapReduce Architecture},
year={2022},
volume={},
number={},
pages={1-6},
abstract={This paper presents a low-maintenance, short development-cycle programming framework (MRAFW) which allows writing and running software for a custom heterogeneous pseudo-reconfigurable computing system integrating a MapReduce Accelerator. The target system implementation is based on AMD/Xilinx's Zynq SoC hardware platform. The programming framework uses the PYNQ software package to enable access to the system resources and to manage CPU-FPGA program and data transfers. Furthermore, we provide a library of optimized low-level functions that offer support for executing some basic linear algebra operations.},
keywords={Software packages;Linear algebra;Computer architecture;Programming;Writing;Data transfer;Libraries;Heterogeneous computing;MapReduce Accelerator;ARM-FPGA;software library;framework},
doi={10.1109/COMM54429.2022.9817183},
ISSN={},
month={June},}
@INPROCEEDINGS{7991584,
author={Darch, Peter T. and Sands, Ashley E.},
booktitle={2017 ACM/IEEE Joint Conference on Digital Libraries (JCDL)},
title={Uncertainty about the Long-Term: Digital Libraries, Astronomy Data, and Open Source Software},
year={2017},
volume={},
number={},
pages={1-4},
abstract={Digital library developers make critical design and implementation decisions in the face of uncertainties about the future. We present a qualitative case study of the Large Synoptic Survey Telescope (LSST), a major astronomy project that will collect and make available large-scale datasets. LSST developers make decisions now, while facing uncertainties about its period of operations (2022-2032). Uncertainties we identify include topics researchers will seek to address, tools and expertise, and availability of other infrastructures to exploit LSST observations. LSST is using an open source approach to developing and releasing its data management software. We evaluate benefits and burdens of this approach as a strategy for addressing uncertainty. Benefits include: enabling software to adapt to researchers' changing needs; embedding LSST standards and tools in community practices; and promoting interoperability with other infrastructures. Burdens include: open source community management; documentation requirements; and trade-offs between software speed and accessibility.},
keywords={Libraries;Uncertainty;Instruments;Tools;Astronomy;Open source software},
doi={10.1109/JCDL.2017.7991584},
ISSN={},
month={June},}
@INPROCEEDINGS{9945752,
author={Dolhopolov, Serhii and Honcharenko, Tetyana and Dolhopolova, Svitlana Anastasiia and Riabchun, Olena and Delembovskyi, Maksym and Omelianenko, Oksana},
booktitle={2022 International Conference on Smart Information Systems and Technologies (SIST)},
title={Use of Artificial Intelligence Systems for Determining the Career Guidance of Future University Student},
year={2022},
volume={},
number={},
pages={1-6},
abstract={This study is devoted to solving the problem of determining the career guidance of future university student using artificial intelligence systems. It is proposed Fully Connected Feed-Forward Neural Network (FNN) architecture and performed empirical modeling to create a Data Set. Model of artificial intelligence system allows evaluating the processes in an FNN during the execution of multi-label classification of professional areas. A method has been developed for the training process of a machine learning model, which reflects the internal connections between the components of an artificial intelligence system that allow it to “learn” from training data. To train the neural network, a data set of 29 input parameters and 23 output parameters was used; the amount of data in the set is 936 data lines. The software product was developed by Python and uses Keras, Numpy and Pandas libraries. Results of this research can be used to further improve the knowledge and skills necessary for successful professional realization.},
keywords={Training;Engineering profession;Training data;Computer architecture;Data models;Software;Biological neural networks;artificial intelligence;multi-label classification;FNN model;career guidance},
doi={10.1109/SIST54437.2022.9945752},
ISSN={},
month={April},}
@INPROCEEDINGS{1032831,
author={Gray, R.F. and Giammatteo, L.C. and Lubell, J.I. and Scott, W.J.},
booktitle={2002 IEEE International Symposium on Electromagnetic Compatibility},
title={Development of the unified EM design software package},
year={2002},
volume={2},
number={},
pages={993-998 vol.2},
abstract={This paper presents an overview of the unified EM protection methodology and details of the unified EM design software development effort. Included are discussions of the architecture chosen to support the implementation and the general method of accessing and presenting the varied information needed by the user. Special attention is given to the analytical and numerical descriptions used to characterize the environments, immunities, margins and transfer functions associated with the process, because of their importance to the performance of the software package.},
keywords={Software design;Software packages;Protection;Stress;Programming;Performance analysis;Immunity testing;Transfer functions;Costs;Electromagnetic fields},
doi={10.1109/ISEMC.2002.1032831},
ISSN={},
month={Aug},}
@INPROCEEDINGS{710019,
author={Giannini, L.A. and Chien, A.A.},
booktitle={Proceedings. The Seventh International Symposium on High Performance Distributed Computing (Cat. No.98TB100244)},
title={A software architecture for global address space communication on clusters: put/get on fast messages},
year={1998},
volume={},
number={},
pages={330-337},
abstract={Global address space parallel programming models can be an effective alternative to send/receive style communication, simplifying programming or code generation and increasing performance for certain application types. Traditionally, global address space mechanisms have been implemented in hardware in order to provide the necessary communication performance and responsiveness. However new high performance cluster messaging systems now allow global address space mechanisms to be realized efficiently in software. We describe a high performance one sided communication model that is implemented as a software layer on top of the Illinois Fast Messages (FM) system. We evaluate several different software implementation architectures for the remote agent, characterizing their differing performance characteristics. Our Put/Get FM implementation achieves peak bandwidths for put/get operations of 67 MBytes/s, overheads of a few microseconds, and remote read latencies as low as 26 microseconds on a Myrinet connected PC cluster. This implementation was released publicly as part of HPVM 1.0 in August 1997, and is receiving significant usage. It has been used for an implementation of the Global Arrays library and also serves as a back-end target for PGI's commercial HPF compiler.},
keywords={Software architecture;Software performance;Parallel programming;Delay;Application software;Hardware;Communication system software;Computer architecture;Bandwidth;Libraries},
doi={10.1109/HPDC.1998.710019},
ISSN={1082-8907},
month={July},}
@INPROCEEDINGS{4597656,
author={Hou Shuping and Yang Qingxin and Yan Rongge and Chen Haiyan and Yang Wenrong},
booktitle={2008 Chinese Control and Decision Conference},
title={Design and implementation of numerical calculation software package for new high performance materials applied to electrical engineering},
year={2008},
volume={},
number={},
pages={1905-1908},
abstract={A software package, modeling for new high performance materials applied to electrical engineering, for one, two or three dimensional electrostatic and magnetostatic field analysis has been developed. This software package is designed based on the FEM method, element-free method, boundary element method and so on for the solution of 2D or 3D electromagnetic problems. The package allows us to solve many kinds of problems such as static and dynamic characteristics application characteristics, weak and strong coupling, etc. The package includes three parts: the pre-processing for generating mesh automatically and displaying it, computing 2D or 3D electromagnetic field with the method of the vector potential and the two scalar potentials based on isoparametric elements, the post-processing. In this paper, application of electro-rheological technology on electro-hydraulic braking control system is taken as an example given to show how the program helps the designer to improve the design of the product. The results show the software package could bring advantages to the producers and designers.},
keywords={new high performance materials applied to electrical engineering;application characteristics;electro-hydraulic braking control system;electro-rheological valve;bridge structure},
doi={10.1109/CCDC.2008.4597656},
ISSN={1948-9447},
month={July},}
@INPROCEEDINGS{1628200,
author={Juan del Cuvillo and Weirong Zhu and Ziang Hu and Guang R. Gao},
booktitle={20th International Symposium on High-Performance Computing in an Advanced Collaborative Environment (HPCS'06)},
title={Toward a Software Infrastructure for the Cyclops-64 Cellular Architecture},
year={2006},
volume={},
number={},
pages={9-9},
abstract={This paper presents the initial design of the Cyclops-64 (C64) system software infrastructure and tools under development as a joint effort between IBM T.J. Watson Research Center, ETI Inc. and the University of Delaware. The C64 system is the latest version of the Cyclops cellular architecture that consists of a large number of compute nodes each employs a multiprocessor-on-a-chip architecture with 160 hardware thread units. The first version of the C64 system software has been developed and is now under evaluation. The current version of the C64 software infrastructure includes a C64 toolchain (compiler, linker, functionally accurate simulator, runtime thread library, etc.) and other tools for system control (system initialization, diagnostics and recovery, job scheduler, program launching, etc.) This paper focuses on the following aspects of the C64 system software: (1) the C64 software toolchain; (2) the C64 Thread Virtual Machine (C64 TVM) with emphasis on TiNy ThreadsTM, the implementation of the C64 TVM; (3) the system software for host control. In addition, we illustrate, through two case studies, what an application developer can expect from the C64 architecture as well as some advantages of this architecture, in particular, how it provides a cost-effective solution. A C64 chip’s performance varies across different applications from 5 to 35 times faster than common off-the-self microprocessors.},
keywords={Computer architecture;System software;Yarn;Software tools;Application software;Hardware;Program processors;Computational modeling;Runtime library;Software libraries},
doi={10.1109/HPCS.2006.48},
ISSN={1550-5243},
month={May},}
@INPROCEEDINGS{890419,
author={Taylor, P.},
booktitle={Proceedings International Conference on Software Methods and Tools. SMT 2000},
title={Adhocism in software architecture - perspectives from design theory},
year={2000},
volume={},
number={},
pages={41-50},
abstract={A brief survey of the software architecture literature indicates that the practice - as opposed to the theory - is at best a discipline in its infancy and at worst an informal and unrepeatable craft, driven by unlikely forces, including opinionated sponsors, opinionated developers, misuse of methods and unmanaged change. Language and technology constraints barely feature, implying that the origin of the apparent informality might be people, practice and design approaches. This paper examines some of the pragmatic factors that shape the structure and design of object-oriented software architecture in contemporary software systems in industry. In the absence of a formal model of software architecture and design, a classification of design heuristics is borrowed from architectural and industrial design to elucidate the heuristics that designers implicitly or tacitly draw on in the absence of formal processes to shape their artefacts. These include anthropometric analogy, literal analogy, environmental relations, typology and formal design languages. The paper concludes that ad-hoc software architecture may be addressed by a greater problem space orientation during software system analysis, design and implementation, and one such classification is examined in detail - Jackson's problem frames - a set of generic problem structural patterns.},
keywords={Software design;Software architecture;Computer architecture;Computer industry;Software systems;Industrial relations;Software quality;Software libraries;Computer science;Software engineering},
doi={10.1109/SWMT.2000.890419},
ISSN={},
month={Nov},}
@INPROCEEDINGS{5163796,
author={Zhou, Qinian and Li, Wei and Yang, Jihui},
booktitle={2008 Seventh International Conference on Web-based Learning},
title={A Study of Construction and Share Digital Resources in an Higher Education District in China},
year={2008},
volume={},
number={},
pages={73-75},
abstract={This article includes the digital library experience in Xiasha education district of Hangzhou city in China. The first part is the necessity to construct the digital library center in the changing trends of the higher education in China. It appears that the traditional library could not follow the trends of the higher education in China. The second part is the technology experience for building up the digital library. It introduces the theory structure and construction steps of digital library and resource. In this section, we introduce all levels of the structure theory. Meanwhile, we show the steps of constructing the digital library including organization of the committee, connection of Internet and the hardware of computers, standard and development of software and preservation and building up of digital resource.},
keywords={Educational institutions;Software libraries;Educational technology;Government;Databases;Informatics;Cities and towns;Internet;Hardware;Software standards;digital resources},
doi={10.1109/ICWL.2008.18},
ISSN={},
month={Aug},}
@INPROCEEDINGS{6507886,
author={Su, Yen-Fu and Yang, Yu-Hsiang and Yang, Wen-Kun and Chiang, Kuo-Ning},
booktitle={2012 14th International Conference on Electronic Materials and Packaging (EMAP)},
title={A thermal performance assessment of panel type packaging (PTP) technology for high efficiency LED},
year={2012},
volume={},
number={},
pages={1-5},
abstract={In response to the effect of global warming, increasing number of industries have focused their attention on green technology products such as the light-emitting diode (LED), currently has been widely applied in many products because of its low pollution potential, low power consumption, and long life characteristics. Panel type packaging (PTP) technology, applicable in a wafer level packaging process, is one of the solutions for LED packaging structure. However, LED with low electro-optical conversion efficiency converts a high-percentage of the input power into redundant heat; thus, junction temperature increases. In this research, the finite element (FE) model of the PTP technology was developed by commercial software ANSYS® for high-power LED mounted on metal-core printed circuit board (MCPCB), composed of copper foil, dielectric layer, and aluminum base plate. The forward-voltage method for characterization of diodes was also employed to measure the junction temperature of PTP for LED packaging, validated with the FE results. Next, the effects of MCPCB dielectric material, MCPCB size, filler material, and black bismaleimide triazine (BT) substrate material were analyzed. In addition, the multi-chip LED module was also investigated. By adopting the design guideline determined by the FE analysis, the thermal performance of the PTP technology for LED can be improved further, enhancing its suitability for high-power LED application.},
keywords={},
doi={10.1109/EMAP.2012.6507886},
ISSN={},
month={Dec},}
@INPROCEEDINGS{1188726,
author={Hinkelbein, C. and Manner, R.},
booktitle={2002 IEEE International Conference on Field-Programmable Technology, 2002. (FPT). Proceedings.},
title={Reconfigurable hardware control software using anonymous libraries},
year={2002},
volume={},
number={},
pages={426-428},
abstract={This work extends RHCS with the capability to link to additional libraries at runtime just by specifying the libraries' filenames. The software components defined in the libraries are made available to the system by means of prototypes. By retaining the abstract interfaces from RHCS we are now able to dynamically compose a complete control framework at runtime without referring to any implementation of the components as building blocks. Also it is possible to extend and adapt the software at runtime according to the needs of reconfigured hardware, or even switch to emulation mode without recompiling the software. Additional components can be build and loaded independently of the existing runtime. This leads to the possibility to build the control software from a textual database describing the hardwares properties. Another possibility would be to use a graphical editor to compose the components to a running system. The performance overhead due to software indirection is monitored and the correctness of architecture is verified by implementing a functional prototype.},
keywords={Hardware;Software libraries;Software prototyping;Switches;Runtime library;Emulation;Databases;Software performance;Monitoring;Computer architecture},
doi={10.1109/FPT.2002.1188726},
ISSN={},
month={Dec},}
@INPROCEEDINGS{599170,
author={Patel, J.N. and Jamieson, L.H.},
booktitle={Conference Record of The Thirtieth Asilomar Conference on Signals, Systems and Computers},
title={An object-oriented framework for the Cloner software prototyping environment},
year={1996},
volume={},
number={},
pages={1354-1358 vol.2},
abstract={Cloner is a library-based prototyping environment for computer vision and image processing algorithms and tasks. It is being designed to allow users to take advantage of the computing power provided by parallel processing systems without requiring an extensive understanding of the underlying architecture. At the heart of Cloner is a library organized as families of algorithms, where an algorithm family is defined in terms of functionality. The individual algorithms that comprise a family correspond to different algorithms that reflect the effects of architecture and data set parameters. Parallel implementation decisions based on user or system-provided information are embedded in the library. Cloner helps in selecting the best algorithm and generates optimized code for the specified target parallel architecture, based on factors that include problem size, machine size, communications topology, and data characteristics. In this paper we present an object-oriented framework based on HPC++ for the Cloner library. We discuss the use of inheritance, polymorphism, function overloading and the C++ template facility to facilitate the library building and algorithm selection process.},
keywords={Software prototyping;Libraries;Prototypes;Computer vision;Image processing;Concurrent computing;Parallel processing;Computer architecture;Heart;Character generation},
doi={10.1109/ACSSC.1996.599170},
ISSN={1058-6393},
month={Nov},}
@INPROCEEDINGS{5314063,
author={Shaker, Sherif Welsen and Elramly, Salwa Hussien and Shehata, Khaled Ali},
booktitle={2009 IEEE AUTOTESTCON},
title={FPGA implementation of a configurable viterbi decoder for software radio receiver},
year={2009},
volume={},
number={},
pages={140-144},
abstract={Convolutional codes are one of the Forward Error Correction (FEC) codes that are used in every robust digital communication system. Viterbi algorithm is employed in wireless communications to decode the convolutional codes. Such decoders are complex and dissipate large amount of power. Software Defined Radio (SDR) is realized using highly configurable hardware platforms. Field Programmable Gate Array technology (FPGA) is a highly configurable option for implementing many sophisticated signal processing tasks in SDR. In this paper, a generic, configurable and low power Viterbi decoder for software defined radio is described using a VHDL code for FPGA implementation. The proposed design of the Viterbi decoder is considered to be generic so that it facilitates the prototyping of the decoder with different specifications. The proposed design is implemented on Xilinx Virtex-II Pro, XC2vp30 FPGA using the FPGA Advantage Pro package provided by Mentor Graphics and ISE 10.1 by Xilinx.},
keywords={Field programmable gate arrays;Viterbi algorithm;Decoding;Software radio;Receivers;Convolutional codes;Forward error correction;Robustness;Digital communication;Wireless communication;FPGA;Software Defined Radio;VHDL;Viterbi decoder},
doi={10.1109/AUTEST.2009.5314063},
ISSN={1558-4550},
month={Sep.},}
@INPROCEEDINGS{4505698,
author={Gan, Xin-biao and Dai, Kui and Huang, Li-bo and Shen, Li and Wang, Zhi-ying},
booktitle={2008 International Conference on Multimedia and Ubiquitous Engineering (mue 2008)},
title={A New CORDIC Algorithm and Software Implementation Based on Synchronized Data Triggering Architecture},
year={2008},
volume={},
number={},
pages={83-86},
abstract={A new CORDIC algorithm based on sign bits prediction is presented. It is an effective method for reducing arbitrary iterations of classic CORDIC to only one iteration and transforming CORDIC iterations to simple matrix multiplications. At the same time, this algorithm is implemented and experimented on based on Synchronized Data Triggering Architecture (SDTA). Experimental results show that the average speed-up of transcendental functions tested based on our CORDIC algorithm compared with mathematic library supported in gcc3.2.2 under the given Neuron microprocessor is close to 283%.},
keywords={Software algorithms;Computer architecture;Neurons;Mathematics;Algorithm design and analysis;Data engineering;Gallium nitride;Computer science;Testing;Libraries},
doi={10.1109/MUE.2008.40},
ISSN={},
month={April},}
@INPROCEEDINGS{4425856,
author={Noro, Masami and Sawada, Atsushi and Hachisu, Yoshinari and Banno, Masahide},
booktitle={14th Asia-Pacific Software Engineering Conference (APSEC'07)},
title={E-AoSAS++ and its Software Development Environment},
year={2007},
volume={},
number={},
pages={206-213},
abstract={E-AoSAS+ + is an aspect-oriented software architecture style for embedded software. It basically gives the style in which a set of state transition machines organizes a software. We have identified such concerns as state transition, concurrency, fault-tolerance, real-time, and error-handling. We categorize those concerns into two classes and found the way we call universal modularization pattern to package them in an orderly fashion. From the experience we have had through the construction of E-AoSAS++, we realized that we needed model for style construction. We defined XCC model which is construction model of architecture style. Based on E-AoSAS++, architecture centered software development environment is designed.},
keywords={Programming;Computer architecture;Software architecture;Embedded software;Application software;Software engineering;Concurrent computing;Packaging;Telecommunications;Fault diagnosis},
doi={10.1109/ASPEC.2007.32},
ISSN={1530-1362},
month={Dec},}
@INPROCEEDINGS{320008,
author={Huiqiong Lu},
booktitle={Proceedings of TENCON '93. IEEE Region 10 International Conference on Computers, Communications and Automation},
title={SYST-a synthetical tool package for software development},
year={1993},
volume={1},
number={},
pages={386-390 vol.1},
abstract={SYST is a comprehensive tool package for software development. It supports software system design, detailed design, and coding in a top down refinement way. Meanwhile, in the reverse direction, by parsing C source code, SYST may generate many kinds of design documents automatically from source code. Therefore, the design documents and source code say easily be kept consistent during the phases of implementation and maintenance. This paper discusses SYST's design goals, functions, and the experience of its use. Key techniques of its implementation are briefly depicted.<>},
keywords={Software packages;Packaging;Programming;Software systems;Skeleton;Page description languages;Software tools;Software design;Software quality;Productivity},
doi={10.1109/TENCON.1993.320008},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1252285,
author={Ghosh, S.},
booktitle={IEMC '03 Proceedings. Managing Technologically Driven Organizations: The Human Side of Innovation and Change},
title={Global implementation of ERP software - critical success factors on upgrading technical infrastructure},
year={2003},
volume={},
number={},
pages={320-324},
abstract={Implementing an Enterprise Resource planning (ERP) software in a global environment, executive sponsors face two key challenges. While business processes are to be re-engineered to align with the ERP software best practices, technical architecture and infrastructure needs to be in place globally as per specifications of the packaged software. In the legacy environment, different countries or different business units use different systems, based on local standards supported by local resources. In the new ERP world, globally all the countries must conform to same technical infrastructure. Technical managers face multiple critical issues implementing a global solution. Most of the ERP software are developed in technically advanced countries, standards are often too high for under developed or developing countries. In an effort to bring the global organization to a common platform different countries needs different levels of upgrades. In this paper the authors review key technical issues faced is a global upgrade process to support a global ERP implementation and how to resolve those. We conclude although technical infrastructure and business process reengineering both are equally important and each implementation is unique, but following some simple steps it is easy to prioritize each ones during different phases of the project. Also time lines of two sub-projects must converge after initial phase and must follow a common plan for the project to be successful. Multiple scenarios are described to facilitate the process.},
keywords={Enterprise resource planning;Business process re-engineering;Project management;Internet;USA Councils;Computer architecture;Software packages;Packaging;Life testing;Environmental management},
doi={10.1109/IEMC.2003.1252285},
ISSN={},
month={Nov},}
@INPROCEEDINGS{5070710,
author={Merchant, Craig and Tellez, Manuel and Venkatesan, Jagannathan},
booktitle={2009 Sixth International Conference on Information Technology: New Generations},
title={A Browser Agnostic Web Application UI Test Framework: Motivation, Architecture, and Design},
year={2009},
volume={},
number={},
pages={748-751},
abstract={There are several approaches available for creating Web application UI test automation. This paper describes the motivation for creating a new Web application test framework, and briefly describes the architecture and design of the framework. The framework is browser agnostic, easy to use, employs a high level programming language and development environment allowing integrated debugging and object oriented design, permits low level access to UI controls, and is resilient to UI changes in the application under test. The architecture of the framework features a two-layer design which isolates all browser specific functionality, allowing test scenario developers to focus on testing related issues rather than on implementation details. The architecture of the framework can be used with most modern operating system platforms. Early experience with the framework has been promising.},
keywords={Service oriented architecture;Automatic testing;Application software;Java;Software testing;Information technology;Design automation;Computer languages;Debugging;Computer architecture;Automatic testing;programming environments;software libraries;software quality;software testing},
doi={10.1109/ITNG.2009.97},
ISSN={},
month={April},}
@INPROCEEDINGS{7367260,
author={Werner, Stephan and Stiehle, Bernhard and Becker, Jürgen},
booktitle={2015 Conference on Design and Architectures for Signal and Image Processing (DASIP)},
title={Evaluation of analog and digital signal processing on PSoC architecture with DCT as use case: Comparison of an analog and software based implementation of the digital cosine transform on a Programmable System on Chip},
year={2015},
volume={},
number={},
pages={1-6},
abstract={One trend for signal processing hardware is the increasing integration of different functionalities in one mixed-signal chip. But the additional integration of analog components on one chip with digital components and a micro-processor like in the Programmable System on Chip (PSoC) from Cypress is accompanied with the extension of the design space and the need to explore it by evaluating different implementations with the same functionality to find a good trade-off between analog and digital signal processing. This paper evaluates different implementations of the discrete cosine transform (DCT) with different analog-digital partitioning. Therefore the DCT is integrated as software controlled analog circuit based on the switched capacitors and operational amplifiers available in the analog subsystem of the PSoC architecture. The presented analog DCT implementation scales linear and the number of simultaneously computable spectral signal components is only limited by the available on-chip resources on the currently used PSoC5LP. To evaluate the analog implementation, the DCT is also implemented as software executed on the ARM Cortex-M3 integrated in the PSoC5LP. The comparison of both solutions shows that the analog hardware available on the PSoC architecture can be used to directly process analog sensor signals with only minor additional off-chip components with a CPU load of about 8% caused by the software controlling the analog subsystem.},
keywords={Discrete cosine transforms;Software;Capacitors;Computer architecture;System-on-chip;Hardware;Electronics packaging;PSoC;DCT;discrete cosine transform;analog design;switched capacitors;analog-digital design space exploration;mixed signal processing},
doi={10.1109/DASIP.2015.7367260},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{8900965,
author={Alexandru, Carol V. and Proksch, Sebastian and Behnamghader, Pooyan and Gall, Harald C.},
booktitle={2019 Working Conference on Software Visualization (VISSOFT)},
title={Evo-Clocks: Software Evolution at a Glance},
year={2019},
volume={},
number={},
pages={12-22},
abstract={Understanding the evolution of a project is crucial in reverse-engineering, auditing and otherwise understanding existing software. Visualizing how software evolves can be challenging, as it typically abstracts a multi-dimensional graph structure where individual components undergo frequent but localized changes. Existing approaches typically consider either only a small number of revisions or they focus on one particular aspect, such as the evolution of code metrics or architecture. Approaches using a static view with a time axis (such as line charts) are limited in their expressiveness regarding structure, and approaches visualizing structure quickly become cluttered with an increasing number of revisions and components. We propose a novel trade-off between displaying global structure over a large time period with reduced accuracy and visualizing fine-grained changes of individual components with absolute accuracy. We demonstrate how our approach displays changes by blending redundant visual features (such as scales or repeating data points) where they are not expressive. We show how using this approach to explore software evolution can reveal ephemeral information when familiarizing oneself with a new project. We provide a working implementation as an extension to our open-source library for fine-grained evolution analysis, LISA.},
keywords={Software;History;Data visualization;Visualization;Clocks;Periodic structures;software visualization;software evolution visualization;graph;node link diagram},
doi={10.1109/VISSOFT.2019.00010},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{9061407,
author={Falatiuk, Hennadii and Shirokopetleva, Mariya and Dudar, Zoia},
booktitle={2019 IEEE International Scientific-Practical Conference Problems of Infocommunications, Science and Technology (PIC S&T)},
title={Investigation of Architecture and Technology Stack for e-Archive System},
year={2019},
volume={},
number={},
pages={229-235},
abstract={This work describes main concepts of architecture style and technologies selection for building distributed e-Archive system. The paper presents overall concepts, vocabulary, data models, responsibilities that an electronic archive system must fulfill, and a set of recommended functions to cover these responsibilities. The article describes the main information flows and functions. It outlines the theory of the OAIS model, illustrates an example of complex microservices architecture design and approaches to solve data consistency and application deployment challenges. The comparative analysis of software architecture styles was performed and, as result, the combination of Microservice and Event-Driven architectures was chosen as the most suitable architecture for building electronic archive system. It implies having microservices that communicate with each other via some message bus instead of direct calls. The technology stack chosen for that architecture implementation and application delivery is proven to be production-ready, has detailed documentation and large community support. The technology stack is Asp .Net Core 2.1 - framework, Rabbit MQ, Apache Tika, Elasticsearch, Mongo DB, MS SQL Server, Azure Blob Storage, Event Store, Signal R, Docker, Kubernetes.},
keywords={Computer architecture;Data models;Architecture;Task analysis;Service-oriented architecture;Authorization;Electronics packaging;microservices;e-archive;OAIS;software architecture;containers;orchestration;eventual consistency;software design patterns},
doi={10.1109/PICST47496.2019.9061407},
ISSN={},
month={Oct},}
@ARTICLE{5738704,
author={Park, Hae-woo and Jung, Hanwoong and Oh, Hyunok and Ha, Soonhoi},
journal={IEEE Transactions on Industrial Informatics},
title={Library Support in an Actor-Based Parallel Programming Platform},
year={2011},
volume={7},
number={2},
pages={340-353},
abstract={Actor model-based design is actively researched for parallel embedded SW design since the model exposes the potential parallelism explicitly in an architecture-neutral form. In most actor-oriented models, actors are self-contained and data channels are the only sharable object between actors, and they compose a system in a flat layer. In contrast, it is common to use shared library functions and construct vertically layered software for efficiency and modularity. To fill this gap between modeling and implementation, we propose a special actor, library task, with new types of ports: library master port and library slave port. It is a sharable and mappable object that defines a set of function interfaces inside. N:1 master-slave connection allows sharing a library task and the master-slave connection can specify vertically layered software and client-server applications naturally. To support the library task in our embedded software design environment, we develop an automatic mapping algorithm as well as an automatic code generator. The design environment with the library task is applied for two target platforms: IBM CELL Broad band Engine and an ARM-based multicore simulator. Preliminary experiments show that the special actor, or library task, extends the expression power of the previous actor model with efficiently generated codes.},
keywords={Libraries;Computational modeling;Programming;Motor drives;Program processors;Embedded software;Design methodology;modeling;parallel programming;software development environment},
doi={10.1109/TII.2011.2123905},
ISSN={1941-0050},
month={May},}
@INPROCEEDINGS{8317363,
author={Shikunov, Yury and Stepchenkov, Yury and Khilko, Dmitry and Orlov, George},
booktitle={2018 IEEE Conference of Russian Young Researchers in Electrical and Electronic Engineering (EIConRus)},
title={Graph-capsule construction toolset for data-flow computer architecture},
year={2018},
volume={},
number={},
pages={1419-1423},
abstract={This paper covers the technical aspects of developing elements of methodology and software for multicore recurrent data-flow architecture. Nowadays capsule programming is similar to assembler: high efficiency accompanied by high complexity and unintuitiveness. We develop specialized toolset suite for creating and debugging software for hybrid architecture for recurrent signal processing called HARSP IDE. One of the toolsets included is the specialized data-flow graph builder that constructs graph-capsules. Automatic graph-capsule construction significantly reduces development complexity by providing visual overview of computational process and resource utilization. The paper covers development stages, architecture and functionality of graph builder. We show case the tool on Viterbi algorithm debugging.},
keywords={Programming;Software;Computer architecture;Tools;Libraries;Debugging;Visualization;data-flow architecture;recurrence;capsular programming},
doi={10.1109/EIConRus.2018.8317363},
ISSN={},
month={Jan},}
@INPROCEEDINGS{4054708,
author={Tan, Xinming and Wang, Yingxu and Ngolah, Cyprian F.},
booktitle={2006 Canadian Conference on Electrical and Computer Engineering},
title={Design and Implementation of an Automatic RTPA Code Generator},
year={2006},
volume={},
number={},
pages={434-437},
abstract={Real-time process algebra (RTPA) is a mathematics-based notation system for the specification and refinement of realtime and safety-critical systems. This paper presents the work on designing and developing a set of tools that facilitate automatic generation of C++ code from RTPA specifications of system architectures and behaviors. A two-phrase strategy has been employed in the design of the toolkit. In the first phrase, an RTPA specification is lexically and syntactically analyzed and type-checked, which results in a set of abstract syntax trees. In the second phrase, C++ code is generated using the RTPA-to-C++ mapping strategies and patterns when walking down the abstract syntax trees. The RTPA-to-C++ mapping strategies specify both the traditional sequential part of RTPA mapping onto the standard C++ library and the real-time features of RTPA, such as interrupt, concurrency, duration, and event/time-driven dispatch, mapping onto the RTPA run-time library, which provides real-time support and is implemented using real-time kernel techniques. The toolkit implemented includes an RTPA lexer, an RTPA parser, an RTPA type-checker, and an RTPA code-generator. The experimental results show that RTPA specifications can be rigorously checked and corresponding C++ code can be automatically generated from RTPA specifications using the toolkit. The automatically generated code is executable and effective under the support of the standard C++ library and the specially developed RTPA run-time library},
keywords={Runtime library;Real time systems;Software engineering;Algebra;Legged locomotion;Concurrent computing;Kernel;Code standards;Standards development;Software libraries;Software engineering;formal methods;RTPA;code generator;descriptive mathematics},
doi={10.1109/CCECE.2006.277743},
ISSN={0840-7789},
month={May},}
@INPROCEEDINGS{7911665,
author={Nikolaev, Yu. N.},
booktitle={2016 2nd International Conference on Industrial Engineering, Applications and Manufacturing (ICIEAM)},
title={Aspects of assessment of organizational and technical reliability and design of construction processes with target reliability level using computer-aided technologies},
year={2016},
volume={},
number={},
pages={1-4},
abstract={This article concentrates on the aspects of assessment of reliability of organizational and technical decisions in construction processes, using computer-aided technologies. The methodical approach and algorithm of the software module solving the problem of evaluation of organizational and technical reliability of construction and design processes with a given level of reliability are presented in this article. A special feature of the approach is separation of the sample values of a random value (initial for determining the intensity and duration of the construction process - time rates per unit volume of works or performance) into two parts of values: those satisfying the conditions of the construction process on scheduled date and unsatisfying ones. This allows, in respect of the appropriate value for the initial design parameter, calculating the probability that rates or performance, and therefore the corresponding values of intensity and duration of the construction process at the end of implementation of the construction process time would not be more or less than the design values. This approach reveals a possibility of constructing algorithm to solve a set task by means of computer technology presented in the article. Based on the proposed algorithm, a software module was developed with the Technologist software package in order to solve problems of designing of building production on variant and probabilistic basis.},
keywords={Reliability engineering;Software reliability;Buildings;Productivity;Algorithm design and analysis;modeling;computer technologies;algorithms for designing of construction operations on probabilistic basis;assessment of organizational and technical reliability},
doi={10.1109/ICIEAM.2016.7911665},
ISSN={},
month={May},}
@INPROCEEDINGS{48059,
author={Cooper, R.},
booktitle={[1989] Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Volume II: Software Track},
title={Persistent languages facilitate the implementation of software version management},
year={1989},
volume={2},
number={},
pages={56-65 vol.2},
abstract={The use of persistent programming languages to construct tools for maintaining the complex modular structure of large-scale application programs transforms the problem into a database maintenance problem. The application construction environment can be considered to be a database of software libraries, and standard database techniques can be used to handle the modules. The persistent language PS-Algol provides a good basis for manipulating such libraries, as it has the appropriate graphics facilities, first-class procedures, delayed binding, delayed type-checking, strong type-checking and a compiler callable at run-time. It is shown how these features help by concentrating on two issues: module version management and the control over the binding together of two modules. Some simple facilities for managing a software database are outlined, and implementation techniques equally applicable to more sophisticated systems are described.<>},
keywords={Application software;Software libraries;Spatial databases;Delay;Computer languages;Large-scale systems;Modular construction;Software standards;Graphics;Runtime},
doi={10.1109/HICSS.1989.48059},
ISSN={},
month={Jan},}
@INPROCEEDINGS{7789461,
author={Edenhofer, Sarah and Rädler, Simon and Hoß, Manuel and Von Mammen, Sebastian},
booktitle={2016 IEEE 1st International Workshops on Foundations and Applications of Self* Systems (FAS*W)},
title={Self-Organised Construction with Revit},
year={2016},
volume={},
number={},
pages={160-161},
abstract={Due to innovations in software, robotics and 3D printing, self-organised construction is within reach. It bears great potential for the automatic generation of a wide variety of designs, their integration into the built environment, their structural and automatised optimisation, as well as their dynamic adaptation over long periods of time. In this paper, motivated by the latest empirical findings on the construction methods of social insects, we present a software pipeline for the generation of architectural designs based on self-organisation. A probabilistic, grid-based multi-agent system that implements a flexible stigmergy-based behavioural construction model generates three-dimensional structures. Next, the generated structures could be evaluated in terms of their energy efficiency and these results be fed into an optimisation engine to improve the local behaviours of the construction agents. For visualisation and evaluation of the generated designs we utilise the API of the framework Revit 2016, a software for Building Information Modelling (BIM) provided by Autodesk.},
keywords={Buildings;Software;Optimization;Robot kinematics;Pipelines;Algorithm design and analysis;self-organisation;architecture;design;construction;self-organised construction;revit;autodesk;fusion360},
doi={10.1109/FAS-W.2016.44},
ISSN={},
month={Sep.},}
@ARTICLE{9506807,
author={Goens, Andres and Nicolai, Timo and Castrillon, Jeronimo},
journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
title={mpsym: Improving Design-Space Exploration of Clustered Manycores With Arbitrary Topologies},
year={2022},
volume={41},
number={6},
pages={1592-1605},
abstract={With growing numbers of cores, the memory subsystem of manycore architectures increases in complexity. Many modern multicores are designed in a hierarchical fashion, with multiple clusters of processing elements. However, most algorithms for design-space exploration (DSE) of resource allocation in multicores do not consider these complex topologies, which results in poor scaling, or worse, nonfunctioning algorithms. In this article, we present mpsym, a C++ library designed to alleviate this problem in an algorithm-agnostic fashion. Using methods from the computational group theory, we present domain-specific algorithms to improve DSE in hierarchical architecture topologies. We evaluate mpsym on multiple DSE algorithms from the literature. Without modifying the algorithm, our methods improve the execution time by a factor up to $8.6 \times $ on the embedded system synthesis benchmark suite benchmark suite for complex, clustered architecture topologies. Similarly, by pruning the design space, our methods consistently improve the result of the exploration. In particular, the results from a simulated annealing heuristic on the Kalray MPPA3 Coolidge topology are over $30 \times $ better on average, while requiring less time to explore.},
keywords={Computer architecture;Topology;Network topology;Multicore processing;Hardware;Task analysis;Clustering algorithms;Computer aided software engineering;design automation;design-space exploration (DSE);symmetries;system on chip},
doi={10.1109/TCAD.2021.3102512},
ISSN={1937-4151},
month={June},}
@INPROCEEDINGS{9779810,
author={Timperley, Christopher S. and Dürschmid, Tobias and Schmerl, Bradley and Garlan, David and Goues, Claire Le},
booktitle={2022 IEEE 19th International Conference on Software Architecture Companion (ICSA-C)},
title={ROSDiscover: Statically Detecting Run-Time Architecture Misconfigurations in Robotics Systems : Artifact Paper},
year={2022},
volume={},
number={},
pages={56-56},
abstract={This is the replication package for the paper, ROSDiscover: Statically Detecting Run-Time Architecture Mis-configurations in Robotics Systems, which is published at the International Conference on Software Architecture (ICSA), 2022.The artifact contains (a) the tool ROSDiscover, which is a component and connector architecture recovery tool that recovers and checks robotics systems built in the Robot Operating System (ROS) 1; (b) data set of architecture misconfiguration bugs of real-world open-source ROS 1 systems on GitHub; and (c) scripts and instructions for replicating the results produced in the paper that show that it is both possible to accurately recover run-time architectures of ROS 1 systems, and that these architectures can be used to detect misconfiguration bugs that were found in real systems.},
keywords={Connectors;Software architecture;Operating systems;Conferences;Computer bugs;Computer architecture;Robots},
doi={10.1109/ICSA-C54293.2022.00055},
ISSN={2768-4288},
month={March},}
@INPROCEEDINGS{7966906,
author={Gallenmüller, Sebastian and Emmerich, Paul and Schönberger, Rainer and Raumer, Daniel and Carle, Georg},
booktitle={2017 ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS)},
title={Building Fast but Flexible Software Routers},
year={2017},
volume={},
number={},
pages={101-102},
abstract={Creating quick and dirty prototypes is a simple and effective way to demonstrate the feasibility of new ideas in network research. Though, small scale proof-of-concepts may lack the performance needed to apply them to real world test cases. Thanks to powerful packet processing frameworks such as netmap and DPDK, high-performance packet forwarding systems can be implemented in software today. We present MoonRoute, a framework dedicated to developing powerful software routers. It is built on top of DPDK and utilizes a highly parallelized architecture to achieve high performance (see Section 2).MoonRoute offers methods to reuse existing libraries and a scripting interface for easy extensibility (see Section 3). An example implementation based on the MoonRoute framework is carefully evaluated to demonstrate the performance and compare it to other relevant software routers (see Section 4). The entire MoonRoute framework including a reference implementation of a software router is available as free software under MIT license [2]. A technical report featuring details about our architecture and more profiling results is available [1].},
keywords={Software;Libraries;Hardware;Throughput;Buildings;Multicore processing},
doi={10.1109/ANCS.2017.21},
ISSN={},
month={May},}