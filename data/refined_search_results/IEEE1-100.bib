@INPROCEEDINGS{5283525,
author={Xiao, Han and Zhang, Zu-xun and Wang, Qiang and Hu, Hua-liang},
booktitle={2009 Fifth International Conference on Information Assurance and Security},
title={Development of a Java-Oriented Software General Component Library},
year={2009},
volume={2},
number={},
pages={321-325},
abstract={In order to promote the reuse ability of software, the domain engineering-based development method is used. A design architecture and software architecture in domain information system are presented. The paper emphasizes model architecture of domain information system and the design of the general component library. The system implements a general component library to mark, inspect, classify and administrate components. Supported by the JavaBeans, analysis process of component library in UML is described. The general component library is high in class inheritance, low in class coupling, high in class sealing, low in class diversifying, high in efficiency of method reuse and efficiency of class reuse. It provides technical ensure to quickly reconstruct application system.},
keywords={Java;Software libraries;Information systems;Software systems;Remote sensing;Application software;Computer architecture;Unified modeling language;Information security;Internet;domain information system;component;general component library;JavaBean;software reuse;UML},
doi={10.1109/IAS.2009.15},
ISSN={},
month={Aug},}
@INPROCEEDINGS{9548485,
author={Pukas, Andriy and Melnyk, Andriy and Voytyuk, Iryna and Smal, Vitalii and Fenovka, Volodymyr and Pylypiuk, Tetiana},
booktitle={2021 11th International Conference on Advanced Computer Information Technologies (ACIT)},
title={Implementation of Service-Oriented Architecture for Static and Dynamic Objects Interval Modeling Software},
year={2021},
volume={},
number={},
pages={568-571},
abstract={Construction of interval models of static and dynamic systems based on methods of analysis of interval data leads to the formation of common structural elements, based on the specifics of their use for specific subject areas. The use of common structural elements in their software implementation inevitably leads to duplication and redundancy of program code.This problem can be solved by creating a single software package for computer simulation of static and dynamic systems implemented on the algorithms of the bee colony with guaranteed accuracy.This article focuses on the implementation of software architects, which includes requirements analysis, implementation of use cases, as well as information software. The article also describes the specifics of the implementation of service-oriented software architecture, as one of the options for using the developed database of model experiments for use in various subject areas.},
keywords={Analytical models;Software packages;Databases;Software architecture;Object oriented modeling;Computational modeling;Software algorithms;Service-Oriented Architecture;interval modeling;service-oriented interaction;the software package for interval modelling},
doi={10.1109/ACIT52158.2021.9548485},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{5205221,
author={Wang, Yan and Gaspes, Ver√≥nica},
booktitle={2009 Fourth International Conference on Digital Telecommunications},
title={A Domain Specific Approach to Network Software Architecture: Assuring Conformance between Architecture and Code},
year={2009},
volume={},
number={},
pages={127-132},
abstract={Network software is typically organized according to a layered architecture that is well understood. However, writing correct and efficient code that conforms with the architecture still remains a problem. To overcome this problem we propose to use a domain specific language based approach. The architectural constraints are captured in a domain specific notation that can be used as a source for automatic program generation. Conformance with the architecture is thus assured by construction. Knowledge from the domain allows us to generate efficient code. In addition, this approach enforces reuse of both code and designs, one of the major concerns in software architecture. In this paper, we illustrate our approach with PADDLE, a tool that generates packet processing code from packet descriptions. To describe packets we use a domain specific language of dependent types that includes packet overlays. From the description we generate C libraries for packet processing that are easy to integrate with other parts of the code. We include an evaluation of our tool.},
keywords={Software architecture;Computer architecture;Domain specific languages;Protocols;Character generation;Software libraries;Automatic programming;Network synthesis;Context;Cryptography;network software;software architecture;dependent types;program generation},
doi={10.1109/ICDT.2009.31},
ISSN={},
month={July},}
@INPROCEEDINGS{1515396,
author={Po-Chang Liu and Ming-Jyh Tsai and Deng-Jyi Chen},
booktitle={Fourth Annual ACIS International Conference on Computer and Information Science (ICIS'05)},
title={A generic software framework for the software system architecture design and implementation of handset devices},
year={2005},
volume={},
number={},
pages={169-174},
abstract={The traditional approach to develop user interface for handset devices has limited flexibility on the UI requirement changes. Once the UI requirement changed, programmers have to change their handcrafted application once again. This change may occur repeatedly until the UI requirement under consideration is satisfied. Visual-based software construction methodology has been developed. This methodology helps programmers to develop the user interface for handset devices, and allows programmers to migrate their program to new platform quickly. Based on this methodology, we quest for a generic software framework to incorporate the proposed methodology for developing user interface to alleviate the problems mentioned above. From our study, there are some similarities exist among user interface and software framework in different handset devices. In this paper, we propose a generic software framework for the system architecture design of handset devices. Specifically, the software framework generated based on the generic software framework is much easier for maintenance and management compared with the traditional approach. In addition, the software framework that is instantiated from the generic software framework can be incorporated into the visual requirement authoring system for user interface development. Finally, we design and construct a simulator to demonstrate the applicability and usefulness of the software framework generated by the proposed generic software framework.},
keywords={Software systems;Software design;Telephone sets;Programming profession;User interfaces;Application software;Authoring systems;Software libraries;Computer architecture;Software maintenance;UI requirement;UI Design Patterns;Generator;Generic Software Framework},
doi={10.1109/ICIS.2005.9},
ISSN={},
month={July},}
@INPROCEEDINGS{4536999,
author={Wu, Harris and Lan Cao},
booktitle={2008 12th International Conference on Computer Supported Cooperative Work in Design},
title={Supporting case-based design for packaged software implementations},
year={2008},
volume={},
number={},
pages={306-311},
abstract={Design in packaged software implementation (PSI) is the process to solve business problems by customizing and integrating the off-the-shelf software package. PSI experts frequently practice case-based design (CBD) when facing a new problem situation: explore the past design cases, find a similar case, and reuse the design for that case in the new problem situation. The success of CBD depends on a continuous cycle of knowledge creation. This paper presents a theoretical framework of case-based design as an organizational knowledge creation process. Based on this framework, the research proposes an innovative tool to support CBD in packaged software implementations. The fundamental belief is that by utilizing the collective power of a large group of people, better designs can be achieved at lower costs},
keywords={Software design;Software packages;Packaging;Costs;Collaborative software;Enterprise resource planning;Computer aided software engineering;Software tools;Programming;Collaborative tools;with lower risks.;Case-based design;collaborative work;software engineering;software Packages},
doi={10.1109/CSCWD.2008.4536999},
ISSN={},
month={April},}
@INPROCEEDINGS{1619386,
author={Kawamoto, S. and Aoyagi, M. and Ito, Y.},
booktitle={2005 4th International Symposium on Environmentally Conscious Design and Inverse Manufacturing},
title={Eco-Design Guideline for Software Products},
year={2005},
volume={},
number={},
pages={944-946},
abstract={For commercializing environmentally conscious software products, systemization of environmental factors to be followed by a product supplier has been examined. Such environmental consideration factors (eco-design factors) have been selected from the viewpoints of software commercialization activities and product content. For the product content, an eco-design map has been created with environmental objectives, environmental aspects, and implementation measures as three axes. As a result, a total of 39 eco-design factors have been selected, which have been incorporated into each phase of software commercialization. Based on this work, the guideline for reducing the environmental load of software products has been established.},
keywords={Guidelines;Commercialization;Software maintenance;Hardware;Indium tin oxide;Software systems;Product development;Software measurement;Process planning;Production planning;eco-design software;eco-design guideline;eco-design factors;software commercialization},
doi={10.1109/ECODIM.2005.1619386},
ISSN={},
month={Dec},}
@INPROCEEDINGS{9640666,
author={Li, Jianhua},
booktitle={2021 Fifth International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC)},
title={Application of Software Simulation in Guiding Reform of Engineering Project with VR Tools},
year={2021},
volume={},
number={},
pages={606-609},
abstract={BIM is a kind of engineering data model which can integrate all kinds of information in the whole process of construction engineering. It is based on three-dimensional digital technology and provides the basis for collaborative work. It can integrate all kinds of information data and set up simulation model by setting parameters to simulate building entity, construction process and operation situation. Based on the secondary development technology of engineering software, this paper studies API development tools. Through the establishment of parametric family library, this paper develops a rapid modeling method for rapid generation of water conservancy and hydropower project model, and finally realizes the construction schedule simulation by using the cooperation of VR tool related software and NavisWorks software.},
keywords={Training;Schedules;Engineering management;Digital transformation;Hydroelectric power generation;Water conservation;Software;Software Engineering;Virtual Reality;Project Management;Course Guiding;VR System},
doi={10.1109/I-SMAC52330.2021.9640666},
ISSN={2768-0673},
month={Nov},}
@INPROCEEDINGS{6424130,
author={Astudillo, Hern√°n and Vald√©s, Gonzalo and Becerra, Carlos},
booktitle={2012 VI Andean Region International Conference},
title={Empirical Measurement of Automated Recovery of Design Decisions and Structure},
year={2012},
volume={},
number={},
pages={105-108},
abstract={Several notations and techniques have been proposed to capture and represent software architecture decisions and structures. Previous work has suggested that using automated techniques to recover decisions and structures from whichever project artifacts are actually kept may be a reasonable solution, but empirical evaluations of this claim are scarce. This article describes: (1) the TREx design decision and architecture structure recovery technique and tool, (2) precision and recall measures of recovery effectiveness for system structure, and (3) an experimental design to evaluate design decision and structure recovery approaches. An initial experimental evaluation of manual versus tool-supported TREx shows that using the tool increases recall, but yield mixed results on precision: decrease structure recovery precision, but increase decision recovery. Also anecdotic evidence suggest that only Experts were systematically better in recovering decisions without tool-support. A replicable experimental package has been published.},
keywords={Software architecture;Computer architecture;Measurement;Software;Data mining;Instruments;Training;software architecture;software desig},
doi={10.1109/Andescon.2012.33},
ISSN={},
month={Nov},}
@INPROCEEDINGS{9978380,
author={Hoff, Adrian and Gerling, Lea and Seidl, Christoph},
booktitle={2022 Working Conference on Software Visualization (VISSOFT)},
title={Utilizing Software Architecture Recovery to Explore Large-Scale Software Systems in Virtual Reality},
year={2022},
volume={},
number={},
pages={119-130},
abstract={Exploring an unfamiliar large-scale software system is challenging, especially when based solely on source code. While software visualizations help in gaining an overview of a system, they generally neglect architecture knowledge in their representations, e.g., by arranging elements along package structures rather than functional components or locking users in a specific abstraction only slightly above the source code. In this paper, we introduce an automated approach for software architecture recovery and use its results in an immersive 3D virtual reality software visualization to aid accessing and relating architecture knowledge. We further provide a semantic zoom that allows a user to access and relate information both horizontally on the same abstraction level, e.g., by following method calls, and vertically across different abstraction levels, e.g., from a class to its containing component. We evaluate our contribution in a controlled experiment contrasting the usefulness regarding software exploration and comprehension of our concepts with those of the established CityVR visualization and the Eclipse IDE.},
keywords={Visualization;Three-dimensional displays;Software architecture;Source coding;Semantics;Computer architecture;Virtual reality;Software Visualization;Virtual Reality;Software Architecture Recovery;Empirical Software Engineering},
doi={10.1109/VISSOFT55257.2022.00020},
ISSN={2832-6555},
month={Oct},}
@ARTICLE{9269345,
author={Lee, Ki-Seong and Lee, Chan-Gun},
journal={IEEE Access},
title={Identifying Semantic Outliers of Source Code Artifacts and Their Application to Software Architecture Recovery},
year={2020},
volume={8},
number={},
pages={212467-212477},
abstract={Understanding software architecture is essential to software maintenance. There has been much effort to derive software architecture views from source code artifacts. Typically, along with structural information, the semantic information derived from an identifier name and comments are helpful. However, because code vocabulary choice depends on a developer's subjective decision, some source code may have semantically low text quality, leading to an inaccurate architecture recovery. This paper aims to improve the architecture recovery of a software system by identifying and removing the semantic outliers of source code artifacts. Accordingly, we propose a novel measure Conceptual Conformity (CC), which computes the similarity between two latent topic distributions obtained from both the source code and its package. We use CC to identify source code that is not relevant to the package's semantic context and define it as a semantic outlier. Because the semantic outliers may cause inaccurate architecture recovery, we remove them during the recovery process. We apply our approach to three open-source projects. The results demonstrate that, for projects with low recovery performance, removing outliers leads to higher recovery accuracy.},
keywords={Software;Semantics;Computer architecture;Software measurement;Software architecture;Software algorithms;Clustering algorithms;Software architecture recovery;software quality;semantic outlier},
doi={10.1109/ACCESS.2020.3040024},
ISSN={2169-3536},
month={},}
@INPROCEEDINGS{9613561,
author={Yin, Jun and Wen, Jiaxin and Ling, Xian and Yao, Yukun and Wang, Lei and Yang, Yuwang},
booktitle={2021 13th International Conference on Wireless Communications and Signal Processing (WCSP)},
title={Moncode: A Multiscale Network Coding Software Implementation Library},
year={2021},
volume={},
number={},
pages={1-5},
abstract={This paper introduces the Moncode network coding library. Moncode is an open-source C library designed for the software implementation of network coding over heterogeneous platforms. Given the different operation and storage requirements of heterogeneous platforms, Moncode provides a variety of GF(2n) finite field implementation algorithms with different time and space overheads. Moreover, Moncode adopts the hierarchical structure to improve scalability and usability. We tested Moncode over different platforms, and the experimental results show Moncode can adapt to the network coding requirements of various application scenarios.},
keywords={Wireless communication;Scalability;Software algorithms;Signal processing algorithms;Network coding;Signal processing;Libraries;network coding;software implementation library;finite field},
doi={10.1109/WCSP52459.2021.9613561},
ISSN={2472-7628},
month={Oct},}
@INPROCEEDINGS{8779952,
author={Akbulut, Akhan and Perros, Harry G.},
booktitle={2019 9th International Conference on Advanced Computer Information Technologies (ACIT)},
title={Software Versioning with Microservices through the API Gateway Design Pattern},
year={2019},
volume={},
number={},
pages={289-292},
abstract={The microservices architecture is a relatively new approach in implementing service-oriented systems. This cloud-native architectural style enables the implementation of loosely coupled, agile, reuse-oriented, and lightweight services instead of monoliths. It also eliminates vendor and/or technology lock-ins. A modification to a small code segment for monoliths may require the building and deployment of a completely new version of the software. However, the modular form of microservices allows solving software versioning in a polyglot manner. In this paper, we extend the well-known microservice design pattern API gateway with a view to managing the virtual hardware configuration of containers. Specifically, using the proposed approach, the service capacity in the requested version of the service is orchestrated adaptively in compliance with a service-level agreement. In our tests, we found that the proposed version management approach reduced the hosting cost by 27% compared to static or rule-based scaling.},
keywords={Software;Logic gates;Ecosystems;Computer architecture;Containers;Input variables;Manuals;Microservices;Software Versioning;Version Management;API Gateway;Design Pattern;Container Sizing;Scaling},
doi={10.1109/ACITT.2019.8779952},
ISSN={},
month={June},}
@INPROCEEDINGS{7839501,
author={Yu, C.Y. and Ma, J. and Ren, Q. and Zhao, Y.Y.},
booktitle={2016 International Conference on Educational Innovation through Technology (EITT)},
title={Design and Implementation of Software Case Library Supporting Software Capability Training},
year={2016},
volume={},
number={},
pages={96-101},
abstract={Software talents mainly come from university graduates, but the graduates could not meet the need of employers. Practical ability of software talents cultivating has aroused wide concern of the researches and teachers. In this paper, we consider that the software case is the most important factor and proposed SCL (Software Case Library) could provide real and attractive software case in the teaching and students' practical projects. The SCL consists of source and different documents and could adapt different kinds of practical training. We developed a SCL and applied it in Web Programming with 102 students. We have collected the data of the course achievement by questionnaire, face-to-face interview, big project, students' grading for the course. The result indicated that SCL promoted the satisfaction and practical abilities of students.},
keywords={Software;Training;Libraries;Business;Prototypes;Documentation;software case library;project-driven;case teaching;software talents cultivating},
doi={10.1109/EITT.2016.26},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{7285006,
author={Zhang, Shuhua and Yang, Changsong and Jiang, Tao},
booktitle={2015 9th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing},
title={General Construction for the Resources Information Library of Shaanxi Folk Culture and Art},
year={2015},
volume={},
number={},
pages={516-519},
abstract={This paper investigates the establishment philosophy of folk art database to protect Shaanxi folk art. Through researching on the art database contents and creation methods, some fundamental work about the database construction has been accomplished based on the selection of software development platform, overall architecture of the database system and database foundation and software design aspects. To a certain extent, this promotes the protection and development of the Shaanxi folk art. Based on this construction of this database, the cultural resource advantages can be exerted better, the Shaanxi cultural brand can be built, the regional economy will be flourished, and the economics and society will be developed comprehensively.},
keywords={Databases;Art;Software;Servers;Computers;Cultural differences;Computer architecture;folk culture;database;software development;art protection},
doi={10.1109/IMIS.2015.82},
ISSN={},
month={July},}
@INPROCEEDINGS{9782975,
author={Baibichenkov, A R and Titova, G R},
booktitle={2022 VI International Conference on Information Technologies in Engineering Education (Inforino)},
title={Applying Software Packages for Designing the Power Supply System of Temporary Buildings and Constructions},
year={2022},
volume={},
number={},
pages={1-4},
abstract={This article considers various programs for designing power supply systems of temporary buildings and constructions. Examples of calculations of lighting of various objects in the DIALux software package are presented. Conclusions are made about the introduction of various programs to improve the design.},
keywords={Power supplies;Software packages;Databases;Buildings;Lighting;Manuals;Software systems;power supply;temporary buildings and structures;DIALux;AutoCAD;NanoCAD;ETAP;Revit},
doi={10.1109/Inforino53888.2022.9782975},
ISSN={},
month={April},}
@INPROCEEDINGS{10027230,
author={Chen, Li and Song, Yafen and Zhang, Yue and Pei, Guihong},
booktitle={2022 3rd International Conference on Education, Knowledge and Information Management (ICEKIM)},
title={Construction and application of BIM Structural Design course project library based on GSRevit software},
year={2022},
volume={},
number={},
pages={252-255},
abstract={With the development of building informatization and industrialization technology, the prefabricated concrete structures based on information technology has become a hot spot in the construction industry. ‚ÄúBIM Structural Design‚Äù combines BIM Technology and Prefabricated building technology with the course content, and uses GSRevit software to carry out classroom teaching in order to cultivate students' structural design ability. The project teaching method is adopted in the course teaching method, and the project library composed of three different practical projects is reformed and created. In combination with students' learning ability and professional knowledge level, different engineering projects are selected for teaching for students at different levels, which can stimulate students' learning interest and initiative, effectively improve the teaching quality of the course, and enhance students' structural design ability and engineering practice ability.},
keywords={Knowledge engineering;Training;Technological innovation;Prefabricated construction;Databases;Education;Software;BIM;Project Teaching;Structural design;Structural modeling},
doi={10.1109/ICEKIM55072.2022.00063},
ISSN={},
month={Jan},}
@INPROCEEDINGS{1602370,
author={Lungu, M. and Lanza, M. and Girba, T.},
booktitle={Conference on Software Maintenance and Reengineering (CSMR'06)},
title={Package patterns for visual architecture recovery},
year={2006},
volume={},
number={},
pages={10 pp.-196},
abstract={Recovering the architecture is the first step towards reengineering a software system. Many reverse engineering tools use top-down exploration as a way of providing a visual and interactive process for architecture recovery. During the exploration process, the user navigates through various views on the system by choosing from several exploration operations. Although some sequences of these operations lead to views which, from the architectural point of view, are mode relevant than others, current tools do not provide a way of predicting which exploration paths are worth taking and which are not. In this article, we propose a set of package patterns which are used for augmenting the exploration process with information about the worthiness of the various exploration paths. The patterns are defined based on the internal package structure and on the relationships between the package and the other packages in the system. To validate our approach, we verify the relevance of the proposed patterns for real-world systems by analyzing their frequency of occurrence in six open-source software projects},
keywords={Packaging;Computer architecture;Open source software;Software systems;Reverse engineering;Navigation;Pattern analysis;Frequency;Visualization;Informatics;Software exploration;architecture recovery;reverse engineering;program comprehension;visualization},
doi={10.1109/CSMR.2006.39},
ISSN={1534-5351},
month={March},}
@INPROCEEDINGS{5423899,
author={Lin, Cheng-Yen and Wang, Shao-Chung and Hung, Ming-Yu and Hsieh, Kun-Yuan and Lee, Jenq Kuen},
booktitle={2009 International SoC Design Conference (ISOCC)},
title={Software cache support and API design for embedded DSP processor},
year={2009},
volume={},
number={},
pages={161-164},
abstract={In embedded SoC design, memory hierarchies are playing increasingly important roles for system performances. There is a significant latency gap between internal and external memory accesses. The external memory access might downgrade the performance of embedded systems. Application developers must explicitly handle data transfer between external and internal memories. That is a burden for programmers. In this paper, we propose a software cache API to help programmers to ease this problem. The proposed API includes pointwise element access and block version of access to software cache. We also give a detailed description for design and implementation of software cache API. As a case study, the software cache API is implemented on PAC DSP, a high performance DSP aiming for multi-media applications. We evaluate the implementation with UTDSP benchmark suite. The experiment results show that the proposed software cache can efficiently reduce the external memory access times.},
keywords={Embedded software;Digital signal processing;Application software;Software performance;Programming profession;Embedded system;Software design;Delay;Hardware;Performance evaluation;embedded processor;DSP;memory;software cache},
doi={10.1109/SOCDC.2009.5423899},
ISSN={},
month={Nov},}
@INPROCEEDINGS{6615267,
author={Jebreen, Issam},
booktitle={2013 IEEE 4th International Conference on Software Engineering and Service Science},
title={Understanding requirements engineering practices for packaged software implementation},
year={2013},
volume={},
number={},
pages={112-115},
abstract={Requirements engineering approaches are appropriate when software is to be developed from scratch. However, in most organization, new software is now created by integrating functionality from existing software and components or by implementing packaged software. In such cases, it makes little sense to specify requirements in terms of what the software should do - the functionality is already defined in this software. Rather, we argue that it is more appropriate to consider the software requirements from a misalignments perspective - what functions software provides and who needs that functions to do their job and what misalignments between software functions and users' needs. To explore this area, we study cases of PS implementation in two software development companies. Our research design follows an interpretive approach, in which analysis was undertaken using an inductive approach. From an analysis of the cases, we induced a theoretical model explaining the requirement engineering practices (REP) for packaged software implementation.},
keywords={Software;requirement engineering;packaged software implementation},
doi={10.1109/ICSESS.2013.6615267},
ISSN={2327-0594},
month={May},}
@ARTICLE{4267607,
author={Lagos, Maria Ester and Alarcon, Rosa and Nussbaum, Miguel and Capponi, Francisca},
journal={IEEE Software},
title={Interaction-Based Design for Mobile Collaborative-Learning Software},
year={2007},
volume={24},
number={4},
pages={80-89},
abstract={Interaction-based design encapsulates pedagogical expertise and, together with a flexible architecture, facilitates the creation, extension, reuse, and composition of educational software products.},
keywords={Collaborative software;Application software;Protocols;Concrete;Software libraries;Computer architecture;Collaborative work;User interfaces;Software design;Programming;mobile applications;software architectures;software process implementation},
doi={10.1109/MS.2007.111},
ISSN={1937-4194},
month={July},}
@INPROCEEDINGS{7780228,
author={Dong, Sidou and Ren, Aihua and Wang, Xin},
booktitle={2016 Third International Conference on Trustworthy Systems and their Applications (TSA)},
title={The Architecture of OPAL for the Software Process Improvement in High Maturity Level},
year={2016},
volume={},
number={},
pages={73-80},
abstract={As an infrastructure of software enterprise management, organizational process asset library (OPAL) is vital essential to deploy and improve processes of software organizations. Not well managed and maintained OPAL will make more difficulties for software process improvement work. In order to do the process improvement work effectively, the paper proposes OPAL architecture for process improvements, especially for process improvements in high maturity level. This architecture has been used in an actual enterprise for high maturity level process improvement, and it has been illustrated that the architecture is easy for maintenance and extension. This architecture can furnish valuable practices for software enterprises to manage and maintain OPAL.},
keywords={Libraries;Software;Guidelines;Organizations;Standards organizations;organizational process asset library;CMMI;software process improvement;high maturity level processes},
doi={10.1109/TSA.2016.21},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{9965496,
author={Yakovenko, A. L. and Shatrov, M. G. and Golubkov, L. N. and Kazakov, S. S.},
booktitle={2022 Intelligent Technologies and Electronic Devices in Vehicle and Road Transport Complex (TIRVED)},
title={Research of the Possibilities of Predicting the Structure-Borne Noise of a Diesel Engine when Changing its Design Using Modeling in the AVL EXCITE Software},
year={2022},
volume={},
number={},
pages={1-4},
abstract={Modern software systems for modeling noise and vibrations of an internal combustion engine allow us to take into account the design features of its body parts, which improves the quality of vibroacoustic studies. The article presents the methodology and results of modeling the noise of a 4-cylinder diesel engine when changing the design of its oil pan using the AVL EXCITE software package. The difference between the contributions of the surfaces of individual engine parts to the overall level of its sound power for the investigated variants of the oil pan design is shown. Analysis of the results of calculating the structure-borne noise of diesel in nominal mode showed that the change in the design of the oil pan led to a redistribution of the frequency composition of the sound power spectrum: the amplitudes of harmonics in the high frequency range increased, and the overall level increased by 2 dBA.},
keywords={Vibrations;Software packages;Oils;Diesel engines;Predictive models;Valves;Software systems;structure-borne noise;noise from working process;diesel;AVL EXCITE;engine noise},
doi={10.1109/TIRVED56496.2022.9965496},
ISSN={},
month={Nov},}
@INPROCEEDINGS{9973893,
author={Chistyakova, Tamara Balabekovna and Shashikhina, Olga Evgenevna and Plekhanov, Aleksandr Andreevich},
booktitle={2022 4th International Conference on Control Systems, Mathematical Modeling, Automation and Energy Efficiency (SUMMA)},
title={Software Package for Mathematical Modeling of Industrial Scheduling Process},
year={2022},
volume={},
number={},
pages={615-619},
abstract={The report describes a flexible software package for modeling the production planning process to solve the problem of optimizing the preparation of calendar schedules of multiassortment continuous-discrete enterprises characterized by a large range of products, many types and configurations of equipment. Since the number of variants of production schedules increases exponentially with increasing dimensionality of the task, it is relevant to develop a specialized complex of effective optimal planning, insisting on the characteristics of various multi-assortment productions. The development is based on the use of methods of the theory of schedules, optimization and evolutionary calculations, tools for object-oriented development of complex software systems and databases. The proposed software package has various intelligent user interfaces supplemented by databases of products, equipment and technological regulations, a library of objective functions and mathematical optimization methods, a module for expert system configuration, as well as an interactive visualization system of the obtained production plans in the form of a Gantt chart and a tree of optimization problem solutions. Testing of the software package on real industrial data of polymer and metallurgical industries confirmed the effectiveness of solving planning problems using the proposed methods and algorithms. The implementation and use of the proposed software package makes it possible to ensure efficient loading of the enterprise's equipment, reduce the cost of production and simplify the process of making managerial decisions during production planning.},
keywords={Schedules;Job shop scheduling;Software packages;Object oriented modeling;Production planning;Process control;Data visualization;calendar planning;production schedules;software package;discrete-continuous production},
doi={10.1109/SUMMA57301.2022.9973893},
ISSN={},
month={Nov},}
@INPROCEEDINGS{4757132,
author={Yunfei Li and Wei He},
booktitle={2008 3rd International Conference on Sensing Technology},
title={A software design method in the field of industrial control},
year={2008},
volume={},
number={},
pages={379-383},
abstract={It is always a hot issue in the research process of software project to focus on specific field, construct software architecture, find efficient technology of software development, and improve the efficiency and reuse of software development [1,2]. On the basis of software design in the field of industry control, this paper puts forward a design method based on the flow, resource and data. The concepts of flow and resource are defined based on the construction of the software‚Äôs basic architecture. Problems and process of the solutions are expressed as flow; hardware and code used in the flow are shown as resource; data in different levels may have different explanations and structures, because data image realizes the coupling of flow and heterogeneous data in the resource. Because the dependence of software design, designers‚Äô knowledge in specific field and computer ability is reduced, the software characters of versatility and reuse are enhanced.},
keywords={Software design;Industrial control;Hardware;Application software;Computer architecture;Arithmetic;Space technology;Computer industry;Computer science;Software architecture;Industrial Control Software;Field;Software Reuse;Flow;Resource},
doi={10.1109/ICSENST.2008.4757132},
ISSN={2156-8073},
month={Nov},}
@INPROCEEDINGS{7339295,
author={Ran Cai and Hong Gao and Dunxun Liu and Hongbo Guo},
booktitle={2015 International Symposium on Lightning Protection (XIII SIPDA)},
title={A Lightning Electromagn-etic environment evaluation software package based on FDTD - the design and implementation},
year={2015},
volume={},
number={},
pages={65-68},
abstract={The major cause of lightning disaster is the Lightning Electromagnetic Pulse (LEMP). Disaster risk assessment services have been widely used in lightning protection centers of many cities in China for years. At present, electromagnetic environment assessment services are being used more and more at many lightning protection centers in China, with various methods. Most of them adopt an expensive commercial software package which needs 3D modeling of complex structure and high computational costs. This article describes a useful assessment tool based on finite-difference time-domain (FDTD) method focusing on an electromagnetic environment of buildings featured with a simple setup procedure. This software package has been applied in daily evaluation services, filling gaps of the current commercial software, leading to a great potential in this area.},
keywords={Time-domain analysis;Lightning;Finite difference methods;Magnetic fields;Software packages;lightning;lectromagnetic;environment assessment;FDTD;assessment;software},
doi={10.1109/SIPDA.2015.7339295},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{9779698,
author={Konersmann, Marco and Kaplan, Angelika and K√ºhn, Thomas and Heinrich, Robert and Koziolek, Anne and Reussner, Ralf and J√ºrjens, Jan and al-Doori, Mahmood and Boltz, Nicolas and Ehl, Marco and Fuchs, Dominik and Groser, Katharina and Hahner, Sebastian and Keim, Jan and Lohr, Matthias and Saƒülam, Timur and Schulz, Sophie and T√∂berg, Jan-Philipp},
booktitle={2022 IEEE 19th International Conference on Software Architecture (ICSA)},
title={Evaluation Methods and Replicability of Software Architecture Research Objects},
year={2022},
volume={},
number={},
pages={157-168},
abstract={Context: Software architecture (SA) as research area experienced an increase in empirical research, as identified by Galster and Weyns in 2016 [1]. Empirical research builds a sound foundation for the validity and comparability of the research. A current overview on the evaluation and replicability of SA research objects could help to discuss our empirical standards as a community. However, no such current overview exists.Objective: We aim at assessing the current state of practice of evaluating SA research objects and replication artifact provision in full technical conference papers from 2017 to 2021.Method: We first create a categorization of papers regarding their evaluation and provision of replication artifacts. In a systematic literature review (SLR) with 153 papers we then investigate how SA research objects are evaluated and how artifacts are made available.Results: We found that technical experiments (28%) and case studies (29%) are the most frequently used evaluation methods over all research objects. Functional suitability (46% of evaluated properties) and performance (29%) are the most evaluated properties. 17 papers (11%) provide replication packages and 97 papers (63%) explicitly state threats to validity. 17% of papers reference guidelines for evaluations and 14% of papers reference guidelines for threats to validity.Conclusions: Our results indicate that the generalizability and repeatability of evaluations could be improved to enhance the maturity of the field; although, there are valid reasons for contributions to not publish their data. We derive from our findings a set of four proposals for improving the state of practice in evaluating software architecture research objects. Researchers can use our results to find recommendations on relevant properties to evaluate and evaluation methods to use and to identify reusable evaluation artifacts to compare their novel ideas with other research. Reviewers can use our results to compare the evaluation and replicability of submissions with the state of the practice.},
keywords={Systematics;Software architecture;Bibliographies;Conferences;Proposals;Replicability;Standards;software architecture research;meta-research;systematic literature review;evaluation},
doi={10.1109/ICSA53651.2022.00023},
ISSN={},
month={March},}
@INPROCEEDINGS{7016633,
author={Del Grosso, Angelo Mario and Nahli, Ouafae},
booktitle={2014 Third IEEE International Colloquium in Information Science and Technology (CIST)},
title={Towards a flexible open-source software library for multi-layered scholarly textual studies: An Arabic case study dealing with semi-automatic language processing},
year={2014},
volume={},
number={},
pages={285-290},
abstract={This paper presents both the general model and a case study of the Computational and Collaborative Philology Library (CoPhiLib), an ongoing initiative underway at the Institute for Computational Linguistics (ILC) of the National Research Council (CNR), Pisa, Italy. The library, designed and organized as a reusable, abstract and open-source software component, aims at solving the needs of multi-lingual and cross-lingual analysis by exposing common Application Programming Interfaces (APIs). The core modules, coded by the Java programming language, constitute the groundwork of a Web platform designed to deal with textual scholarly needs. The Web application, implemented according to the Java Enterprise specifications, focuses on multi-layered analysis for the study of literary documents and related multimedia sources. This ambitious challenge seeks to obtain the management of textual resources, on the one hand by abstracting from current language, on the other hand by decoupling from the specific requirements of single projects. This goal is achieved thanks to methodologies declared by the ‚Äúagile process‚Äù, and by putting into effect suitable use case modeling, design patterns, and component-based architectures. The reusability and flexibility of the system have been tested on an Arabic case study: the system allows users to choose the morphological engine (such as AraMorph or Al-Khalil), along with linguistic granularity (i.e. with or without declension). Finally, the application enables the construction of annotated resources for further statistical engines (training set).},
keywords={Engines;Abstracts;Unified modeling language;Pragmatics;Object oriented modeling;Java;Computer architecture;API Design;Information Engineering;Design Patterns;Text Processing;Arabic Natural Language Processing},
doi={10.1109/CIST.2014.7016633},
ISSN={2327-1884},
month={Oct},}
@INPROCEEDINGS{9637610,
author={Li, Xinyan and Peng, Zhao and Wang, Hanxi},
booktitle={2021 International Conference on Culture-oriented Science & Technology (ICCST)},
title={Research on Virtual Resource Construction Software of Digital Cultural Center},
year={2021},
volume={},
number={},
pages={590-592},
abstract={With the development of the Internet, digital cultural centers have emerged. The physical cultural center is the physical entity and existence support of the digital cultural center. The digital cultural center is the network presentation and network service form of the physical cultural center. It is a tool platform to expand the public cultural service function of the physical cultural center to the network space. According to the requirements of open construction of immersive cultural service resources, it is necessary to set up an open construction software library of virtual resources in the background of digital culture museum website for the use of open construction of virtual resources. The virtual resource software system is the underlying support for the construction of digital cultural center website and open production of virtual resources, and the embodiment of the openness of digital cultural center. According to the analysis of the production process of the virtual resources, this paper sums up the software framework of the open production of the virtual resources of the digital culture center.},
keywords={Software libraries;Production;Software systems;Internet;Cultural differences;open digital cultural center;AR/VR virtual service resources;open production;three-dimensional scene;software framework},
doi={10.1109/ICCST53801.2021.00128},
ISSN={},
month={Nov},}
@INPROCEEDINGS{7816592,
author={Dong, Sidou and Ren, Aihua and Wang, Xin},
booktitle={2016 21st International Conference on Engineering of Complex Computer Systems (ICECCS)},
title={Application of Organizational Process Asset Library in High Maturity Process Improvement},
year={2016},
volume={},
number={},
pages={223-226},
abstract={To accomplish the organizational business objectives and consistently improve processes, high maturity processes are implemented in numerous software enterprises. Organizational process asset library (OPAL) plays a significant role in the definitions, executions and improvements for software processes. Based on the conceptions of Capability Maturity Model Integration (CMMI) and practical experience, the paper addresses the applications of OPAL on different maturity levels and proposes a structure of OPAL. This structure is implemented in an actual enterprise's OPAL and illustrated that it is beneficial for high maturity level process improvement. This paper can furnish a valuable practice for software enterprises to apply the OPAL in high maturity process improvements.},
keywords={Libraries;Guidelines;Standards;Software;Business;Delays;Databases;organizational process asset library;CMMI;software process improvement;high maturity process areas},
doi={10.1109/ICECCS.2016.039},
ISSN={},
month={Nov},}
@INPROCEEDINGS{8482154,
author={Guskov, G.U. and Namestnikov, A.M. and Yarushkina, N.G.},
booktitle={2018 3rd Russian-Pacific Conference on Computer Technology and Applications (RPC)},
title={The System of Searching Similar Software Projects, Based on the Ontology Constructed by UML Metascheme and Design Patterns},
year={2018},
volume={},
number={},
pages={1-4},
abstract={The description of the system for the searching similar program solutions for software project or module was proposed in this paper. The search is performed under the project architecture in order to abstract from the implementation. The UML meta-scheme is used to represent the project architecture. Design templates are used as generally accepted software design solutions. To perform a search among projects, it is necessary to store UML diagrams with their semantics, ontologies in OWL format are suitable for this. Search can be carried out among projects from public repositories and organizations internal repositories. The initial data for the search are the class diagram of the developing project and the names of the public libraries structural elements. The paper describes the structure and description of ontology on the basis of which the system was build. The rules, nuances and examples of the transformation of the architectural solution into ontology are given. An example of the proposed approach to the problem of finding architectural solutions for integration with the public service API is considered. The paper contains an analysis of the results and directions for further research.},
keywords={Ontologies;Unified modeling language;OWL;Semantics;Software engineering;Software;Java;ontology;software design;UML class diagram;design patterns},
doi={10.1109/RPC.2018.8482154},
ISSN={},
month={Aug},}
@INPROCEEDINGS{7910492,
author={Rodionov, I.N. and Nesterenko, I.V. and Telyshev, D.V and Le, T.G.},
booktitle={2017 IEEE Conference of Russian Young Researchers in Electrical and Electronic Engineering (EIConRus)},
title={Development and implementation of software architecture for data visualization with various medical devices},
year={2017},
volume={},
number={},
pages={63-65},
abstract={The software package capable to provide support of various medical devices has been developed. Architecture of the program is based on the ‚ÄúMode-View-Controller‚Äù pattern, with a passive model. Each module implements the structural pattern ‚ÄúBridge‚Äù. At the expense of it the system of plug-ins is provided. Plug-ins for the ‚ÄúModel‚Äù form the data from various devices. Plugin ‚ÄúView_Qt‚Äù implements a graphical user interface and provides centralized access to data. Data filtering happens at the level of model, but their check is carried out in the controller.},
keywords={Brain modeling;Data models;Software;Computer architecture;Bridges;Biological system modeling;Filtering;biomedical;pattern;rogramming;design;software},
doi={10.1109/EIConRus.2017.7910492},
ISSN={},
month={Feb},}
@INPROCEEDINGS{390746,
author={Pirklbauer, K. and Plosch, R. and Weinreich, R.},
booktitle={Proceedings of IEEE Systems Man and Cybernetics Conference - SMC},
title={Libraries and tools for object-oriented distributed automation software},
year={1993},
volume={4},
number={},
pages={403-408 vol.4},
abstract={Object-oriented programming allows the construction of software component libraries and predefined program structures (application frameworks) that significantly improve software quality and reduce software development time. We claim that, in addition to such libraries, we need tools that both allow the composition of applications using such libraries and offer the possibility to experiment with prototypes of such applications. We present the prototyping tool ProcessBuild, which is based on the application framework ProcessTalk. Both support the implementation of software in the area of process automation, an area that is fairly distinct from the construction of graphic user interfaces, for which such libraries or tools are usually intended.<>},
keywords={Automation;Software libraries;Application software;Software quality;Software prototyping;Prototypes;Object oriented programming;Software tools;Graphics;User interfaces},
doi={10.1109/ICSMC.1993.390746},
ISSN={},
month={Oct},}
@INPROCEEDINGS{7284339,
author={Kiefer, Marc Aurel and Molitorisz, Korbinian and Bieler, Jochen and Tichy, Walter F.},
booktitle={2015 IEEE International Parallel and Distributed Processing Symposium Workshop},
title={Parallelizing a Real-Time Audio Application -- A Case Study in Multithreaded Software Engineering},
year={2015},
volume={},
number={},
pages={405-414},
abstract={Multicore hardware is ubiquitous, but billions of lines of code in performance-critical commodity software are still sequential. Although parallel libraries, design patterns, and best practice guidelines are available, thinking parallel is still a big challenge for many software engineers. In this paper we present a case study on parallelizing commodity software using a commercial real-time audio application with over 700,000 lines of code. In contrast to best practice guidelines, our goal is to investigate what parallelization strategy can effectively be used in data stream-intensive applications. Performing an in-depth analysis of the software architecture and its run-time performance, we locate parallelization potential and propose three different parallelization strategies. We evaluate them with respect to their parallel performance impact. Regarding the application's intrinsic real-time requirement and a very short audio cycle turnaround time, a busy-waiting strategy offers the best audio performance of 327 Œºs per cycle on an eight-core machine. With an efficiency of 99% this is close to the optimal schedule.},
keywords={Instruction sets;Hardware;Real-time systems;Optimal scheduling;Mixers;Software architecture;Software Engineering;Multicore;Parallelization;Study},
doi={10.1109/IPDPSW.2015.32},
ISSN={},
month={May},}
@INPROCEEDINGS{5359438,
author={Ren, Hong-min and Yan, Zhi-ying and Zhang, Jing-zhou},
booktitle={2009 Sixth International Conference on Fuzzy Systems and Knowledge Discovery},
title={Design and Implementation of RAS-Based Open Source Software Repository},
year={2009},
volume={2},
number={},
pages={219-223},
abstract={Open-source software is an enormous treasure of knowledge available to whole mankind which has unique knowledge creation and dissemination mechanisms. In order to promote its usage in China, an open source software repository called OpenCom was designed and implemented as a supporting tool of Shanghai Component Library. OpenCom provides a simple but flexible collaborative platform to describe, store, retrieve, collect and develop open source software. Moreover, OpenCom introduces an extension to Reusable Asset Specification (RAS) to effectively support collaborative creation of knowledge in open source community on the Internet.},
keywords={Open source software;Software libraries;Computer architecture;Software reusability;Software development management;Computer science;Collaborative software;Application software;Knowledge management;Memory;Open Source Software;Software Repository;RAS;Reusable Asset Specification},
doi={10.1109/FSKD.2009.778},
ISSN={},
month={Aug},}
@INPROCEEDINGS{571666,
author={Dugan, J.B. and Venkataraman, B. and Gulati, R.},
booktitle={Annual Reliability and Maintainability Symposium},
title={DIFtree: a software package for the analysis of dynamic fault tree models},
year={1997},
volume={},
number={},
pages={64-70},
abstract={Several advances in fault tree models have been developed as an aid in the analysis of computer systems. Such advances include the ability to model sequence dependencies, the application of fault trees to the analysis of hardware and software fault tolerant systems, the ability to include details of the recovery process in the fault tree solution, and the use of modularization and binary decision diagrams as an aid in solution. In this paper we present a software package (DIFtree) that implements these advances into a single methodology that can solve both dynamic and static fault trees, and which is applicable to the analysis of hardware, software and humanware in complex computer-based systems.},
keywords={Software packages;Fault trees;Failure analysis;Tree graphs;Data structures;Boolean functions;Software tools;Packaging;Binary decision diagrams;Read-write memory},
doi={10.1109/RAMS.1997.571666},
ISSN={0149-144X},
month={Jan},}
@INPROCEEDINGS{6188463,
author={Itsykson, Vladimir and Zozulya, Alexey},
booktitle={2011 7th Central and Eastern European Software Engineering Conference (CEE-SECR)},
title={Automated program transformation for migration to new libraries},
year={2011},
volume={},
number={},
pages={1-7},
abstract={In modern software engineering the task of migration from one system environment to another may arise very often (e.g. software migrating from Windows to Linux or from desktop PC to some mobile platform). This task may be accomplished manually, but this will certainly be not cost- and time-effective and will require additional testing and verification. Therefore various automated techniques aimed to solve this problem seem to be very useful. The article takes into consideration one of such approaches, mainly focused on transferring source code between two library environments. A comprehensive review of related works is presented. The classification of typical library entities having strong impact to software characteristics is defined. Special program annotation language (PanLang) is introduced. The main purpose of this language is to specify library structure and behavior. The key feature of PanLang is the high level of abstraction allowing to take out of consideration the library implementation details. Therefore, PanLang annotation applied to a library is a partial specification. Such a specification may be considered as a Moore FSM. The problem of semantic conformance of source and target libraries' specifications is posed. The conformance is guaranteed if set of execution traces corresponding to source library may be represented as a subset of target's one. In our case the solution of this problem may be reduced to FSM homomorphism detection. Our approach considers using Abstract Semantic Graph (ASG) as a model of source code. Therefore after semantic conformance is proved, special transformation rules may be applied ASG. These rules are based on both source and target partial specifications which guarantee correctness of result software. A simple prototype migration tool based on proposed approach is described. This Java-based tool uses CLang frontend to LLVM for C source code parsing and ASG construction. A number of sample migration tasks were used to prove the method correctness and efficiency. Possible improvements and future researches are also discussed.},
keywords={Libraries;Semantics;Sockets;Linux;Operating systems;Automation;software migration;library's environment;specification of library;function behavior semantic;reengineering;program transformation},
doi={10.1109/CEE-SECR.2011.6188463},
ISSN={},
month={Oct},}
@INPROCEEDINGS{4809263,
author={Tripathi, Vikas and Mahesh, T. Sai Guru and Srivastava, Anurag},
booktitle={2009 IEEE International Advance Computing Conference},
title={Performance and Language Compatibility in Software Pattern Detection},
year={2009},
volume={},
number={},
pages={1639-1643},
abstract={Re documentation and design recovery are two important areas of reverse engineering. Detection of recurring organizations of classes and communicating objects, called software patterns, supports this process. Many approaches to detect software patterns which have been published in the past years suffer from the problems of necessity of reference library, performance and language compatibility. This paper presents a model to solve those problems in software pattern detection. The proposed model solves the problem of necessity of reference library by detecting software patterns using formal concept analysis (FCA). The proposed model solves the problem of performance by using the most efficient algorithm CMCG (Concept-Matrix Based Concepts Generation) for the construction of concept lattice, which is the core data structure of FCA. The proposed model solves the problem of language compatibility by using the language independent meta model called MOOSE for taking the input information. The validity of this model was proved in theory and by experiment.},
keywords={Software performance;Reverse engineering;Software libraries;Gamma ray detection;Gamma ray detectors;Application software;Java;Conference management;Technology management;Engineering management;reverse engineering;software patterns;design recovery;reengineering},
doi={10.1109/IADCC.2009.4809263},
ISSN={},
month={March},}
@INPROCEEDINGS{7044241,
author={Palomera-Arias, Rogelio},
booktitle={2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
title={Developing computer based laboratory exercises for an MEP course in a construction science and management program},
year={2014},
volume={},
number={},
pages={1-6},
abstract={Mechanical, electrical and plumbing systems in buildings are becoming a greater proportion of construction costs and building operating expenses. As such, MEP systems are required content in the curricula of construction programs. The current paper describes the implementation of computer-based laboratory exercises covering plan reading, material quantity take-offs, and basic material and labor estimating for MEP building systems using a commercially available take-off software package. Students were surveyed to assess their understanding of the course subjects at the beginning and the end of the term, and the survey results were used as an indicator of the effectiveness of the laboratory exercises in supporting the learning objectives of the courses. Finally, the paper discusses the advantages and disadvantages of performing the computer-based exercises as opposed to traditional paper-based exercises, and discusses future opportunities to incorporate other software packages, such as Building Information Modeling, into the practical exercises of the MEP courses.},
keywords={Buildings;Materials;Laboratories;Ducts;Computers;Software packages;MEP systems laboratory;computer-based exercises;construction management;quantity take off software},
doi={10.1109/FIE.2014.7044241},
ISSN={2377-634X},
month={Oct},}
@INPROCEEDINGS{1506485,
author={Muthu Ramachandran},
booktitle={IRI -2005 IEEE International Conference on Information Reuse and Integration, Conf, 2005.},
title={Software reuse guidelines},
year={2005},
volume={},
number={},
pages={270-275},
abstract={In this paper, we discuss the general area of software development for reuse and reuse guidelines. We identify, in detail, language-oriented and domain-oriented guidelines whose effective use affects component reusability. This paper also proposes a tool support which can provide advice and can generate reusable components automatically and it is based on domain knowledge (reuse guidelines represented as domain knowledge).},
keywords={Guidelines;Application software;Programming;Productivity;Documentation;Software reusability;Computer languages;Writing;Data structures;Packaging},
doi={10.1109/IRI-05.2005.1506485},
ISSN={},
month={Aug},}
@INPROCEEDINGS{6684793,
author={Naz, Afrin and Casto, Mitchael},
booktitle={2013 IEEE Frontiers in Education Conference (FIE)},
title={Bring best of two worlds in a software engineering class, student outcomes of Accreditation Board of Engineering and Technology (ABET) and information literacy standards of Association of College amp; Research Libraries (ACRL)},
year={2013},
volume={},
number={},
pages={80-86},
abstract={In this collaborative project with librarians, the faculty members of Nelson College of Engineering, West Virginia University Institute of Technology (WVU Tech) identify the importance of information literacy (IL) in accreditation documents and then leverage accreditation guidelines from Accreditation Board of Engineering and Technology (ABET) student outcomes to integrate IL skills from standards of the Science and Technology Section (STS) of the Association of College and Research Libraries (ACRL) into an existing software engineering course. This project was sponsored by West Virginia University Information Literacy Course Enhancement Grant. We included the full range of the university libraries' resources, expertise, and services in course planning and delivery by incorporating different IL units: an introductory talk, special workshops, library sessions and consultations with the librarian throughout the semester. As conducting researches, designing projects, and writing reports are most effective vehicles for students' learning of strategic and rigorous information retrieval and management, the class includes a group software-development project and an individual paper-writing project. We included different data collection and evaluation methods distributed throughout the semester, including Standardized Assessment of Information Literacy Skills (SAILS), a web-based tool to document IL skill levels and to pinpoint areas for improvement.},
keywords={Standards;Educational institutions;Software engineering;Libraries;Ethics;Accreditation;Teamwork;Information Literacy;Software Engineering;ABET outcome;ACRL Standards},
doi={10.1109/FIE.2013.6684793},
ISSN={2377-634X},
month={Oct},}
@INPROCEEDINGS{7962360,
author={Kikas, Riivo and Gousios, Georgios and Dumas, Marlon and Pfahl, Dietmar},
booktitle={2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR)},
title={Structure and Evolution of Package Dependency Networks},
year={2017},
volume={},
number={},
pages={102-112},
abstract={Software developers often include available open-source software packages into their projects to minimize redundant effort. However, adding a package to a project can also introduce risks, which can propagate through multiple levels of dependencies. Currently, not much is known about the structure of open-source package ecosystems of popular programming languages and the extent to which transitive bug propagation is possible. This paper analyzes the dependency network structure and evolution of the JavaScript, Ruby, and Rust ecosystems. The reported results reveal significant differences across language ecosystems. The results indicate that the number of transitive dependencies for JavaScript has grown 60% over the last year, suggesting that developers should look more carefully into their dependencies to understand what exactly is included. The study also reveals that vulnerability to a removal of the most popular package is increasing, yet most other packages have a decreasing impact on vulnerability. The findings of this study can inform the development of dependency management tools.},
keywords={Ecosystems;Computer languages;Computer bugs;Tools;Libraries;Software packages;software evolution;dependency management;software ecosystems;mining software repositories},
doi={10.1109/MSR.2017.55},
ISSN={},
month={May},}
@INPROCEEDINGS{8265837,
author={Jin, Sun and Zedong, Huang and Yuan, Liu},
booktitle={2017 13th IEEE International Conference on Electronic Measurement & Instruments (ICEMI)},
title={Software implementation of corn grain morphology detection based on OpenCV},
year={2017},
volume={},
number={},
pages={412-415},
abstract={Morphological parameters of Corn grain are indexes that always been concerned by researchers in field of crop cultivation and breeding. In this article, Microsoft Visual Studio 2008 was slected as development tools, with the open source computer vision library (OpenCV2.3.1), we combined the image processing with analysis technology, and designed the testing system for morphological of Corn grain. Firstly, we used basler industrial camera to captured image of Corn grain, and pre-processed the image, then ellipsed fitting on the image of corn grain and determined the tip position of corn grain. Finally, output the results. In this paper, Software implementation of corn grain morphology detection based on Open CV can provide some reference for other biomass granule morphology research.},
keywords={Image processing;Computer vision;Fitting;Shape;Instruments;Morphology;Libraries;Open CV: Corn grain : Morphology detection;Software implementation},
doi={10.1109/ICEMI.2017.8265837},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1620104,
author={Shaw, M. and van Vliet, H.},
booktitle={5th Working IEEE/IFIP Conference on Software Architecture (WICSA'05)},
title={Software Architecture Education Session Report},
year={2005},
volume={},
number={},
pages={185-190},
abstract={In the software architecture education session, we discussed four main issues: how to make a software architecture course sufficiently realistic, how to teach non-technical competencies of software architects, the place of such a course in a university curriculum, and how to grow software architects beyond the university. The session resulted in a first sketch of software architecture knowledge areas, and the extent to which these are deemed required for certain classes of software professionals.},
keywords={Software architecture;Software engineering;Computer science;Computer architecture;Guidelines;Computer industry;Information technology;Computer science education;Testing;Libraries},
doi={10.1109/WICSA.2005.63},
ISSN={},
month={Nov},}
@INPROCEEDINGS{9202695,
author={Lee, Jihyun and Kim, Taeyoung and Kang, Sungwon},
booktitle={2020 IEEE 44th Annual Computers, Software, and Applications Conference (COMPSAC)},
title={Recovering Software Product Line Architecture of Product Variants Developed with the Clone-and-Own Approach},
year={2020},
volume={},
number={},
pages={985-990},
abstract={Software products developed with the clone-and-own approach pose difficulties in maintenance. Migrating to software product line can solve this problem. This paper proposes an approach to recover software product line architecture (PLA) from a family of products developed with the clone-and-own approach. The proposed approach decomposes all source code of the family of products and analyses cloned copy classes, cloned modification classes and product-specific classes. From the results, it recovers a PLA. For determining common and variable classes, the proposed approach uses Harmonized Total Constant Commonality Indices of packages or classes of a product line (HTCCIPL). We apply our approach to recover the PLA of the Apo-Games developed with the clone-and-own approach. The results show that our approach recovers the Apo-Games PLA with a set of guidelines that can assist product line engineers in making decisions on commonality and variability of architectural elements of a PLA.},
keywords={Programmable logic arrays;Cloning;Feature extraction;Data mining;Software;Software product lines;Computer architecture;software product line;clone-and-own approach;product line architecture recovery;commonality index},
doi={10.1109/COMPSAC48688.2020.0-143},
ISSN={0730-3157},
month={July},}
@INPROCEEDINGS{8581820,
author={Dimitrienko, Yury I. and Zakharov, Andrey A.},
booktitle={2018 IV International Conference on Information Technologies in Engineering Education (Inforino)},
title={Information Technologies of Development of Preprocessor of SIGMA Software Package for Numerical Modelling in Continuum Mechanics},
year={2018},
volume={},
number={},
pages={1-6},
abstract={The paper covers the area of block-structured adaptive grid generation for finite difference, finite element and finite volume methods. It deals with a problem of development of information technologies and algorithms for generating such grids in complex geometries. Its key idea is to bring together the different existing techniques for computer-aided geometric design of domains, grid generation, grid concentration and grid subdivision. The methods used for a construction of domain geometries, working with block-structured quasi-continuous grids, a subdivision of block-structured adaptive grids into vertex-centered control volumes, generation of ghost nodes and cells, calculation of distances to boundaries are discussed. It is described of the software interfaces of the geometry editor and the mesh generator that were developed in the SIGMA preprocessor. The results of the generation of three-dimensional adaptive grids for the domain of external flow near a hemisphere, flow around a surface of the high-speed aircraft of Falcon HTV-2 type and for the domain of the gap between a wheel and a body of an aircraft are analyzed. The presented methods and algorithms for grid generation have the following advantages: 1. The grids are structured and mesh cells are hexahedra in the entire complex curvilinear computational domain. 2. The grids can be applied for finite difference methods. 3. The grid lines are adjusting with the flow in the whole domain.},
keywords={Geometry;Finite element analysis;Adaptive systems;Finite difference methods;Software packages;Mathematical model;Physics;block-structured adaptive grid;finite difference grid;computer-aided geometric design;complex domain;mesh subdivision;preprocessing},
doi={10.1109/INFORINO.2018.8581820},
ISSN={},
month={Oct},}
@INPROCEEDINGS{7529706,
author={Makowski, Filip and Cichalewski, Wojciech and Napieralski, Andrzej and Killenberg, Martin and Branlard, Julien and Schmidt, Christian and Piotrowski, Adam},
booktitle={2016 MIXDES - 23rd International Conference Mixed Design of Integrated Circuits and Systems},
title={Design and implementation of LLRF station software suite in Distributed Control System used in E-XFEL},
year={2016},
volume={},
number={},
pages={85-88},
abstract={The European XFEL project is a free electron linear particle accelerator located in Hamburg, Germany, currently being developed by DESY and to be launched later this year. The particle accelerator is controlled by RF control system, built as a chain of RF stations bound to cryomodules across the tunnel. Each RF station has a set of additional devices, that are used to control particular parts of the system. The core library for device module handling was designed using Distributed Objected Oriented Control System (DOOCS) framework as a base, and then it was extended by implementing component software pattern design, thus allowing simplified and universal way of handling communication with the hardware, as well as handling other tasks such as data validation and application logic. The library is implemented by using modern C++11/14 standards and utilizing Boost library features where necessary. The server applications utilize the library to provide common device access by using Chimera Tool Kit, as well as other register-based protocols like Simple Network Management Protocol (SNMP). In addition to the core library, two device-specific libraries were created to provide the flexibility of embedding them into third party DOOCS server applications if needed.},
keywords={Servers;Libraries;Software;Hardware;Protocols;Control systems;Radio frequency;software;X-FEL;C++;DOOCS;MTCA.4},
doi={10.1109/MIXDES.2016.7529706},
ISSN={},
month={June},}
@INPROCEEDINGS{5071022,
author={Golden, Elspeth},
booktitle={2009 31st International Conference on Software Engineering - Companion Volume},
title={Early-stage software design for usability},
year={2009},
volume={},
number={},
pages={363-366},
abstract={In this proposal, the author presents work to construct and evaluate a successful approach to explicitly drawing and communicating the connection between usability concerns and software architecture design. This approach for early-stage software design for usability is usability-supporting architecture patterns and their application and design framework, architecture pattern language for usability support (A-PLUS). The proposal will describe an iterative process of testing and revising USAPs to improve their usability and utility as a performance aid for software engineers designing software architectures to support usability concerns.},
keywords={Software design;Usability;Design engineering;Software architecture;User interfaces;Software quality;Software systems;Guidelines;Packaging;Programming},
doi={10.1109/ICSE-COMPANION.2009.5071022},
ISSN={},
month={May},}
@INPROCEEDINGS{9183119,
author={Barbosa, Paulo and Figueiredo, Alex and Souto, Sabrina and Gaeta, Eugenio and Araujo, Eriko and Teixeira, Tiago},
booktitle={2020 IEEE 33rd International Symposium on Computer-Based Medical Systems (CBMS)},
title={An Open Source Software Architecture and Ready-To-Use Components for Health IoT},
year={2020},
volume={},
number={},
pages={374-379},
abstract={This paper presents the definition of a software architecture and implementation as open-source components specially designed for the state-of-art of Health IoT technologies. These activities were conducted through a H2020 project that developed a smart IoT solution for childhood obesity and two contracted Health IoT projects for the leading brazilian clinics in wound treatment. The software components and the guidelines presented in this paper are fully available as github repositories and contributors can find immediate application in Health IoT projects. A survey with contributors in four different countries was conducted about the way the realized software architecture addresses quality requirements for Health IoT. The results shows that the integration of components was the main concern of this team due to the distributed nature of the projects and the implementation of patterns such as API Gateway using open source technologies are very likely to be reused in the future. The initiative continues collecting user's experiences for continuous improvements and research goals.},
keywords={Software architecture;Logic gates;Pediatrics;Computer architecture;Synchronization;Data acquisition;Monitoring;Health IoT;Software Architecture;Open Source},
doi={10.1109/CBMS49503.2020.00077},
ISSN={2372-9198},
month={July},}
@INPROCEEDINGS{8388901,
author={Zhang, Rui and Chen, Jinglong and Chen, Xianjun and Zhan, Yongsong},
booktitle={2017 9th International Conference on Advanced Infocomm Technology (ICAIT)},
title={Design and implementation of data communication module based on plugin mode in configuration software},
year={2017},
volume={},
number={},
pages={127-131},
abstract={A design method of Data Communication Module in Building Energy Saving Configuration Software based on Plug-in Mode is proposed, it can make the system has better reusability and scalability through this method, and improve the efficiency of the entire configuration software. Firstly, this paper introduces the plug-in based software architecture, and on this basis describes the design ideas of data communication module in the Building Energy Saving Configuration Software, then introduced the development process of data communication module. Finally we verify the practical feasibility of the method by testing of plug-in and system.},
keywords={Software;Buildings;Energy consumption;Monitoring;Production facilities;Data communication;Libraries;plugin;building energy saving;configuration software;data communication module},
doi={10.1109/ICAIT.2017.8388901},
ISSN={},
month={Nov},}
@INPROCEEDINGS{9906691,
author={Zatsarinnaya, Yuliya and Kovalev, George and Gainullin, Rustem},
booktitle={2022 International Ural Conference on Electrical Power Engineering (UralCon)},
title={An Automated Software Package Creation for Energy Consumption Accounting},
year={2022},
volume={},
number={},
pages={140-144},
abstract={Modern world market relations put forward rigorous requirements for conditions of information exchange and implementation of automated systems for commercial accounting and sale of thermal and electric energy. Data collection of the amount of energy consumed is often carried out through manual entry of information, that does not exclude probable errors. Besides, errors may occur when data are integrated into internal and external information systems. A software package for household energy consumption metering was worked out. Its architecture is built on a centralized principle; interaction with users is carried out through a web interface. The developed metering software package provides control over the performance, operation mode of main networks and central heating units. It consists of 12 functional blocks; the paper covers the purpose of each of them. The automated software package is designed to obtain thermal energy consumption data, their following processing by means of automatic analysis and automated transfer to the customer billing system.},
keywords={Performance evaluation;Energy consumption;Software packages;Heat engines;Manuals;Object recognition;Thermal energy;software package;electricity market;modernization;accounting;quality;information technology;energy;warmth},
doi={10.1109/UralCon54942.2022.9906691},
ISSN={2768-0797},
month={Sep.},}
@INPROCEEDINGS{5945399,
author={Zhang, Xinyu and Zheng, Li and Lu, Yiqian},
booktitle={2011 Eighth International Conference on Information Technology: New Generations},
title={The Exploration of the Core Asset Library in the Software Product Line},
year={2011},
volume={},
number={},
pages={1082-1083},
abstract={Core asset library is the core component of the software product line. With the background of the Data Processing Oriented Software Product Line, this paper describes the design and implementation of the Core asset Library, researches the key technology and provides the information for software companies.},
keywords={Libraries;Software;Data processing;Data models;Software engineering;Computer architecture;Encapsulation;Core asset library;Component;Software Product Line},
doi={10.1109/ITNG.2011.198},
ISSN={},
month={April},}
@INPROCEEDINGS{5288277,
author={Li, Baoan},
booktitle={2009 Second International Conference on Intelligent Computation Technology and Automation},
title={Construction of Application Software for Enterprise Based on Semantic SOA and Component Oriented Technology},
year={2009},
volume={4},
number={},
pages={294-297},
abstract={The construction of enterprise application software and the dynamic semantic integration based on SOA and component oriented technologies are presented in this paper. After analyzing the EERP (End-to-End Resource Planning) Web service functions and the service requirements in the refinery enterprise in depth, it develops the component libraries and then gives a solution to build the EERP information systems based on semantic SOA and component oriented technologies. Considering of the two aspects about technology and management, this paper investigates the new approach to accomplish the enterprise information system.},
keywords={Application software;Semiconductor optical amplifiers;Service oriented architecture;Management information systems;Information analysis;Enterprise resource planning;Technology planning;Web services;Software libraries;Technology management;Component Oriented;SOA (Service Oriented Architecture);EERP (End-to-End Resource Planning);Semantic SOA},
doi={10.1109/ICICTA.2009.786},
ISSN={},
month={Oct},}
@INPROCEEDINGS{5254111,
author={Konstantopoulos, Dino and Marien, John and Pinkerton, Mike and Braude, Eric},
booktitle={2009 33rd Annual IEEE International Computer Software and Applications Conference},
title={Best Principles in the Design of Shared Software},
year={2009},
volume={2},
number={},
pages={287-292},
abstract={Code reuse has long been a holy grail of Information Technology. When realized, it is manifested either by sharing source code or by sharing binary code. The free software and open source movements promote the sharing of source code. The proprietary world promotes market mechanisms through exclusive rights of ownership to binary code, protected by licenses and copy protection mechanisms. When binary code is shared by many owners in the proprietary world, it is packaged as either software libraries or software frameworks, abstractions in which common binary code providing generic functionality can be leveraged, extended, and specialized. With software libraries, owners write code that calls library code; with software frameworks, owners write callback code that is called by framework code. This paper details benefits and drawbacks of these two types of shared binary code abstractions and suggests best practices, from a practical perspective and concerning large and complex implementations of software frameworks in sizable enterprises.},
keywords={Software design;Binary codes;Open source software;Software libraries;Protection;Information technology;Licenses;Software packages;Packaging;Best practices;software frameworks;software libraries;software reuse;software sharing},
doi={10.1109/COMPSAC.2009.151},
ISSN={0730-3157},
month={July},}
@INPROCEEDINGS{1607324,
author={Gross, K.C. and Urmanov, A. and Votta, L.G. and McMaster, S. and Porter, A.},
booktitle={Third IEEE International Workshop on Engineering of Autonomic & Autonomous Systems (EASE'06)},
title={Towards Dependability in Everyday Software Using Software Telemetry},
year={2006},
volume={},
number={},
pages={9-18},
abstract={Application-level software dependability is difficult to ensure. Thus it's typically used only in custom systems and is achieved using one-of-a-kind, handcrafted solutions. We are interested in understanding whether and how these techniques can be applied to more common, lower-end systems. To this end, we have adapted a condition-based maintenance (CBM) approach called the multivariate state estimation technique (MSET). This approach automatically creates sophisticated statistical models that predict system failure well before failures occur, leading to simpler and more successful recoveries. We have packaged this approach in the Software Dependability Framework (SDF). The SDF consists of instrumentation and data management libraries, a CBM module, performance visualization tools, and a software architecture that supports system designers. Finally, we evaluated our framework on a simple video game application. Our results suggest that we can cheaply and reliably predict impending runtime failures and respond to them in time to improve the system's dependability},
keywords={Telemetry;State estimation;Predictive models;Software packages;Packaging;Instruments;Software libraries;Data visualization;Software architecture;Games},
doi={10.1109/EASE.2006.21},
ISSN={2168-1872},
month={March},}
@INPROCEEDINGS{4483264,
author={Suleiman, Basem},
booktitle={19th Australian Conference on Software Engineering (aswec 2008)},
title={Commercial-Off-The-Shelf Software Development Framework},
year={2008},
volume={},
number={},
pages={690-695},
abstract={Budget and schedule savings are the driving factors for the adoption of commercial-off-the-shelf (COTS) software components by software development organizations. The reliance on COTS components has lead to component-based development (CBD) software systems and introduced changes to the software development process and hence software project management responsibilities and roles. This paper introduces a general framework discussion of essential management aspects for CBD, focusing on COTS. Particularly, stakeholders, requirements, component selection and architecture management issues are discussed from different angles. Some CBD management guidelines and best practices for these aspects are outlined in the conclusion. In addition, CBD management challenges are drawn along with some suggestions in the conclusion section.},
keywords={Programming;Best practices;Software development management;Guidelines;Australia;Project management;Open source software;Computer architecture;Risk management;Application software;Comercial-Off-The-Shelf (COTS);Software Components;Project Management;Component Software Development (CBS)},
doi={10.1109/ASWEC.2008.4483264},
ISSN={2377-5408},
month={March},}
@ARTICLE{6529082,
author={Gremme, Gordon and Steinbiss, Sascha and Kurtz, Stefan},
journal={IEEE/ACM Transactions on Computational Biology and Bioinformatics},
title={GenomeTools: A Comprehensive Software Library for Efficient Processing of Structured Genome Annotations},
year={2013},
volume={10},
number={3},
pages={645-656},
abstract={Genome annotations are often published as plain text files describing genomic features and their subcomponents by an implicit annotation graph. In this paper, we present the GenomeTools, a convenient and efficient software library and associated software tools for developing bioinformatics software intended to create, process or convert annotation graphs. The GenomeTools strictly follow the annotation graph approach, offering a unified graph-based representation. This gives the developer intuitive and immediate access to genomic features and tools for their manipulation. To process large annotation sets with low memory overhead, we have designed and implemented an efficient pull-based approach for sequential processing of annotations. This allows to handle even the largest annotation sets, such as a complete catalogue of human variations. Our object-oriented C-based software library enables a developer to conveniently implement their own functionality on annotation graphs and to integrate it into larger workflows, simultaneously accessing compressed sequence data if required. The careful C implementation of the GenomeTools does not only ensure a light-weight memory footprint while allowing full sequential as well as random access to the annotation graph, but also facilitates the creation of bindings to a variety of script programming languages (like Python and Ruby) sharing the same interface.},
keywords={Bioinformatics;Genomics;Software;Computer languages;Ontologies;Software libraries;Scientific computing, biology and genetics, software engineering, reusable libraries, programming environments},
doi={10.1109/TCBB.2013.68},
ISSN={1557-9964},
month={May},}
@ARTICLE{210607,
author={Diaz-Herrera, J.L.},
journal={IEEE Software},
title={The importance of static structures in software construction},
year={1993},
volume={10},
number={3},
pages={75-87},
abstract={The static structure is the physical organization of a system's functional modules in terms of their structural relations. It is the packaging of the dynamic structure into textually self-contained modules, taking into consideration the construction strategy and how much of module's internal part should be visible to other modules. Hierarchical modular diagrams (HMD), a module-interface-oriented graphics language that develops can specify the structural relations among modules and map design concepts into a hierarchy of program components independently of the implementation language, is described. The application of HMD to manage a real-time system in a library of separately compiled Ada units is described. It is shown that by using HMD in conjunction with modern software engineering languages like Ada, the static structure can be built earlier in the design process. This lets designers evaluate safety-critical issues as well as reusability concerns long before they make safety checks and implementation decisions. More important, engineers can analyze the effect of approaches to incremental construction before committing additional resources.<>},
keywords={Modular construction;Algorithms;Buildings;Joining processes;Packaging;Software systems;Control systems;Design engineering},
doi={10.1109/52.210607},
ISSN={1937-4194},
month={May},}
@INPROCEEDINGS{8102524,
author={Rusnak, Patrik and Rabcan, Jan},
booktitle={2017 15th International Conference on Emerging eLearning Technologies and Applications (ICETA)},
title={The software library used in teaching of multiple-valued logic and logic function},
year={2017},
volume={},
number={},
pages={1-7},
abstract={Multiple-valued logic (MVL) is used in various fields of knowledge such as logic, philosophy, logic circuits design, reliability engineering or artificial intelligence. MVL is generalization of well-known binary logic and unlike binary logic MVL allows operating with a larger number of truth degrees and provides numerous tools for problem formalizing and solving. In order to describe relationships between inputs and the result of certain phenomena in the MVL a mapping of n multi-valued inputs into m-valued output called MVL-function is needed. The MVL-function can be used for example in electrical engineering, computer engineering, logic or reliability engineering. MVL-function is a fundamental element of MVL. Therefore a software library for working with MVL and MVL-functions is needed for implementation of numerous applied problems. The software implementation of demanding process such as symbolic calculations with MVL-functions is hard. New software library for working with MVL and logic functions is introduced in this paper. This software library is programmed in C++ for fast and efficient performance. It can be used for helping student with symbolic calculations of MVL-function or as a support library for complex programs, which need to work with logic function.},
keywords={Logic functions;Software libraries;Reliability engineering;Computer science;Logic design;software library;multiple-valued logic;logic function;direct partial logic derivative},
doi={10.1109/ICETA.2017.8102524},
ISSN={},
month={Oct},}
@INPROCEEDINGS{870467,
author={Birbilis, G. and Koutlis, M. and Kyrimis, K. and Tsironis, G. and Vasiliou, G.},
booktitle={Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium},
title={E-Slate: a software architectural style for end-user programming},
year={2000},
volume={},
number={},
pages={684-687},
abstract={The paper describes E-Slate (http://E-Slate.cti.gr), an exploratory learning environment. It builds on a component based approach, to enable end users to create educational software constructions themselves by wiring components, using the Plug and Synapse metaphors.},
keywords={Programming profession;Educational technology;Wiring;Plugs;Software architecture;Software engineering;Computer architecture;Assembly;Guidelines;Libraries},
doi={10.1145/337180.337521},
ISSN={0270-5257},
month={June},}
@INPROCEEDINGS{9381183,
author={Garc√≠a-Ram√≠rez, Yasmany and Cuenca, Santiago Qui√±ones and Jaramillo, Yandri Lalangui and Cabrera, Bryan Ram√≠rez and Torres, Vinicio Roblez},
booktitle={2020 XV Conferencia Latinoamericana de Tecnologias de Aprendizaje (LACLO)},
title={UTPLPave: an online software package for pavement structural design in roads using AASHTO-1993 methodology},
year={2020},
volume={},
number={},
pages={1-7},
abstract={The pavement structural design of one road is one of the variables that can most influence the cost of construction and maintenance of the pavement. For the design of pavements, one of the most used methodologies in Latin America is the proposal for AASHTO in 1993. Figures, tables, and equations are used in this methodology, which could confuse an inexperienced designer. Therefore, several computer programs have been developed using this methodology, however, they only show the results and not the process to get to these ones. In this context, this study aims to develop software for designing flexible pavements, rigid pavements and overlayer on the flexible pavement, which allows users to observe the procedure carried out by the program. Those individuals programs make up the computational package called UTPLPave, which is a free online version and it was developed using JavaScript libraries in HTML5 and BootStrap. This program can be used as a complementary tool for university education or for updating of knowledge of pavement designers.},
keywords={Asphalt;Roads;Education;Web pages;Tools;Maintenance engineering;Axles;pavement structural design;road;AASHTO 1993;UTPLPave;online software},
doi={10.1109/LACLO50806.2020.9381183},
ISSN={},
month={Oct},}
@INPROCEEDINGS{8491664,
author={Khokhlov, Igor and Jain, Chinmay and Miller-Jacobson, Ben and Heyman, Andrew and Reznik, Leonid and Jacques, Robert St.},
booktitle={2018 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE)},
title={MeetCI: A Computational Intelligence Software Design Automation Framework},
year={2018},
volume={},
number={},
pages={1-8},
abstract={Computational Intelligence (CI) algorithms/techniques are packaged in a variety of disparate frameworks/applications that all vary with respect to specific supported functionality and implementation decisions that drastically change performance. Developers looking to employ different CI techniques are faced with a series of trade-offs in selecting the appropriate library/framework. These include resource consumption, features, portability, interface complexity, ease of parallelization, etc. Considerations such as language compatibility and familiarity with a particular library make the choice of libraries even more difficult. The paper introduces MeetCI, an open source software framework for computational intelligence software design automation that facilitates the application design decisions and their software implementation process. MeetCI abstracts away specific framework details of CI techniques designed within a variety of libraries. This allows CI users to benefit from a variety of current frameworks without investigating the nuances of each library/framework. Using an XML file, developed in accordance with the specifications, the user can design a CI application generically, and utilize various CI software without having to redesign their entire technology stack. Switching between libraries in MeetCI is trivial and accessing the right library to satisfy a user's goals can be done easily and effectively. The paper discusses the framework's use in design of various applications. The design process is illustrated with four different examples from expert systems and machine learning domains, including the development of an expert system for security evaluation, two classification problems and a prediction problem with recurrent neural networks.},
keywords={Libraries;XML;Software;Computational intelligence;Machine learning;Tools;Software algorithms;Software design automation;computational intelligence techniques;computational intelligence libraries},
doi={10.1109/FUZZ-IEEE.2018.8491664},
ISSN={},
month={July},}
@INPROCEEDINGS{7287029,
author={Chaczko, Zenon and Chan, Cheuk Yan and Carrion, Lucia and Alenazy, Wael Mohammad G.},
booktitle={2015 Asia-Pacific Conference on Computer Aided System Engineering},
title={Haptic Middleware Based Software Architecture for Smart Learning},
year={2015},
volume={},
number={},
pages={257-263},
abstract={The software architecture of smart learning environment can be perceived as an environment that is equipped with various audio-visual objects to capture human motion, utterance and gesture, allowing the teacher to deliver lectures to both local and remote audience through the Internet. The interactive objects in such architectural environment are interfaced with simple navigation, depending on operation characteristics, voice, tactile and visual interaction with the aim to improve Human-Machine Interaction. This facilitates effective data acquisition and statistical analysis, in order to assist in decision making by the participants, as well as, apply them in the process of self-assessment. This paper discusses the design and implementation of integrating hap tic technologies into the architecture of smart learning environment by designing components of service oriented software middleware that defines a common gesture framework, and thus allowing multiple hap tic and gesture peripherals to share a within common protocol, as well as, enabling individual device to work as stand-alone entity.},
keywords={Middleware;Hardware;Haptic interfaces;Libraries;Sensors;Education;Software architecture;Smart learning environment;Haptic Middleware},
doi={10.1109/APCASE.2015.52},
ISSN={},
month={July},}
@INPROCEEDINGS{6113343,
author={Shang, Meng and Wang, Haitao and Jiang, Longqiang},
booktitle={2011 International Conference of Information Technology, Computer Engineering and Management Sciences},
title={The Development Process of Component-Based Application Software},
year={2011},
volume={1},
number={},
pages={11-14},
abstract={Component-based software development is an effective and efficient approach to improve productivity and quality of software development. So far, almost all the technologies of software components focus on component description and operation. But the software architecture which takes component as the basic unit has a great progress, and provides a software development process of the top-down through describing its structure and features. In order to improve the efficiency and quality of management information system (MIS), the reusable component technology has been introduced in MIS. Through the description of the structure and features, the reusable components are used in the structure and features of MIS in the development process such as demands analysis, system design, system implementation, system testing, and system maintenance. The result shows that supporting and implementing the assembly of MIS under the platform of component running has improved the stability quality and development efficiency of the existing MIS.},
keywords={Software;Data models;Programming;Maintenance engineering;Libraries;Analytical models;Software architecture;software reuse;management information system},
doi={10.1109/ICM.2011.227},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{8641736,
author={Streit, Franz-Josef and Letras, Martin and Wildermann, Stefan and Hackenberg, Benjamin and Falk, Joachim and Becher, Andreas and Teich, J√ºrgen},
booktitle={2018 International Conference on ReConFigurable Computing and FPGAs (ReConFig)},
title={Model-Based Design Automation of Hardware/Software Co-Designs for Xilinx Zynq PSoCs},
year={2018},
volume={},
number={},
pages={1-8},
abstract={Shorter design cycles in FPGA-based Programmable System-on-Chips (PSoCs) development require a higher level of design automation, which has led to a wide acceptance of model driven engineering. However, design and implementation of applications on such heterogeneous PSoC platforms still demand a comprehensive expertise in hardware/software co-design. Therefore, to keep up with this trend, an automated systematic design flow that couples model-based design and simulation with High-Level Synthesis (HLS) for hybrid hardware and software implementations is necessary. In order to address this issue, the work at hand makes use of the modeling and simulation environment MATLAB/Simulink, a de facto standard in model-based development. Additionally, we present a novel design flow which automatically synthesizes individual hardware/software solutions for Xilinx Zynq PSoCs based on a manual partitioning of blocks. Thereby, the proposed methodology enables control and system engineers to automatically explore different hardware and software implementation variants from a behavioral model. As a case study, we present a JPEG decoder application and investigate design objectives like resource costs and throughput to show the practicability of our approach.},
keywords={Mathematical model;Hardware;Software packages;Matlab;Unified modeling language;Libraries;FPGA;SoC;Hardware/Software Co-Design;Model-Based Engineering},
doi={10.1109/RECONFIG.2018.8641736},
ISSN={2640-0472},
month={Dec},}
@INPROCEEDINGS{4591583,
author={Tang, Shan and Peng, Xin and Lau, Yiming and Zhao, Wenyun and Jiang, Zhixiong},
booktitle={2008 32nd Annual IEEE International Computer Software and Applications Conference},
title={An Adaptive Software Architecture Model Based on Component-Mismatches Detection and Elimination},
year={2008},
volume={},
number={},
pages={369-372},
abstract={Commercial-off-the-shelf components (COTS) are widely reused at present and black-box composition is the unique way to integrate them into the target system. However, various mismatches among components often hamper the integration of COTS. While the existing approaches to modeling software systems often neglect the issue of COTS component-mismatch detection and elimination. Aiming at solving this problem, this paper proposes an adaptive software architecture model. Based on this model, we first analyze and conclude the mismatches among heterogeneous components, and then we propose the corresponding solutions to eliminate these mismatches and provide a seamless integration for COTS components. At the same time, we employ an example of Web-based application system to illustrate the efficiency of our approach.},
keywords={System recovery;Software systems;Connectors;Electronic mail;Servers;Adaptation model;Automata},
doi={10.1109/COMPSAC.2008.13},
ISSN={0730-3157},
month={July},}
@INPROCEEDINGS{8473946,
author={Ghillino, Enrico and Virgillito, Emanuele and Mena, Pablo V. and Scarmozzino, Rob and Stoffer, Remco and Richards, Dwight and Ghiasi, Ali and Ferrari, Alessio and Cantono, Mattia and Carena, Andrea and Curri, Vittorio},
booktitle={2018 20th International Conference on Transparent Optical Networks (ICTON)},
title={The Synopsys Software Environment to Design and Simulate Photonic Integrated Circuits: A Case Study for 400G Transmission},
year={2018},
volume={},
number={},
pages={1-4},
abstract={To afford the dramatic intra- and inter-datacenter traffic growth envisioned for the decade, the IEEE P802.3bs Task Force is targeting the standardization of 200 Gb/s and 400 Gb/s Ethernet. Transceivers adopting this standard will need to substantially reduce cost and power consumption with respect to similar equipment that are currently the state-of-the-art for long-haul networks. The most promising solution for such a challenging objective is offered by integrated photonics, a state-of-the-art technology capable of providing high-speed components and large-scale circuits with high-volume, high-yield, and low-cost manufacturing.Synopsys proposes an integrated software (SW) environment capable of assisting with virtual prototyping and testing of the circuit before proceeding with the physical implementation. It is the integration of the OptSim Circuit tool for schematic-driven photonic integrated circuit (PIC) design, with the PhoeniX OptoDesigner photonic layout tool, and the RSoft Photonic Component Design Suite, thus providing a single modeling solution at the circuit, layout, and device levels of abstraction. In this work, we first present this integrated SW environment, focusing on its potential and usability. Then, we use the APSUNY Silicon Photonics Integrated Circuit Process Design Kit (PDK) library sponsored by AIM Photonics to model a PM-16QAM transceiver with a 400G transmission data rate.},
keywords={Photonics;Layout;Optical transmitters;Integrated circuit modeling;Software;Optical noise;Transceivers;photonic integrated circuits;photonic integration;silicon photonics;photonic design automation;software environment;400G},
doi={10.1109/ICTON.2018.8473946},
ISSN={2161-2064},
month={July},}
@INPROCEEDINGS{4054675,
author={Tsikhanovich, A. and Rousseau, F. and Aboulhamid, E.M. and Bois, G.},
booktitle={2006 Canadian Conference on Electrical and Computer Engineering},
title={Transaction Level Modeling in Hardware/Software System Design using .Net Framework},
year={2006},
volume={},
number={},
pages={140-143},
abstract={Transaction level modeling (TLM) defines several abstraction levels differentiated by the expression degree of functional and temporal details, providing timed or un-timed functional models of the system under design. The construction of the TLM higher abstraction simulation models leads to a better performance/accuracy ratio and in that way enables parallel and efficient hardware and software component development, early validation and verification of the design alternatives. Combining the TLM paradigm and .NET features such as interoperability, object-oriented programming, .NET framework class library, XML support, we demonstrate the fruitfulness of this synergy in hardware/software (Hw/Sw) system codesign},
keywords={Hardware;Software systems;Software design;Object oriented modeling;XML;Computer architecture;Communication system control;Software performance;Object oriented programming;Software libraries;System modeling;Hw/Sw codesign;Transaction Level Modeling;.NET Framework},
doi={10.1109/CCECE.2006.277692},
ISSN={0840-7789},
month={May},}
@INPROCEEDINGS{5783158,
author={Ponomarenko, Andrey and Rubanov, Vladimir},
booktitle={2010 6th Central and Eastern European Software Engineering Conference (CEE-SECR)},
title={Header-driven generation of sanity API tests for shared libraries},
year={2010},
volume={},
number={},
pages={97-102},
abstract={There are thousands of various software libraries being developed in the modern world - completely new libraries emerge as well as new versions of existing ones regularly appear. Unfortunately, developers of many libraries focus on developing functionality of the library itself but neglect ensuring high quality and backward compatibility of application programming interfaces (APIs) provided by their libraries. The best practice to address these aspects is having an automated regression test suite that can be regularly (e.g., nightly) run against the current development version of the library. Such a test suite would ensure early detection of any regressions in the quality or compatibility of the library. But developing a good test suite can cost significant amount of efforts, which becomes an inhibiting factor for library developers when deciding QA policy. That is why many libraries do not have a test suite at all. This paper discusses an approach for low cost automatic generation of basic tests for shared libraries based on the information automatically extracted from the library header files and additional information about semantics of some library data types. Such tests can call APIs of target libraries with some correct parameters and can detect typical problems like crashes ‚Äúout-of-the-box‚Äù. Using this method significantly lowers the barrier for developing an initial version of library tests, which can be then gradually improved with a more powerful test development framework as resources appear. The method is based on analyzing API signatures and type definitions obtained from the library header files and creating parameter initialization sequences through comparison of target function parameter types with other functions' return values or out-parameters (usually, it is necessary to call some function to get a correct parameter value for another function and the initialization sequence of the necessary function calls can be quite long). The paper also describes the structure of a tool that implements the proposed method for automatic generation of basic tests for Linux shared libraries (for C and C++ languages). Results of practical usage of the tool are also presented.},
keywords={Libraries;Linux;Testing;Electronic mail;Navigation;Programming;Electronic publishing;Shared libraries;sanity testing;application programming interface;Linux},
doi={10.1109/CEE-SECR.2010.5783158},
ISSN={},
month={Oct},}
@INPROCEEDINGS{6912290,
author={Rubython, Amanda and Maiden, Neil},
booktitle={2014 IEEE 22nd International Requirements Engineering Conference (RE)},
title={The effect of variability modeling on requirements satisfaction for the configuration and implementation of off-the-shelf software packages},
year={2014},
volume={},
number={},
pages={394-401},
abstract={An industrial experience of the use of a method for discovering customer requirements with which to configure an off-the-shelf software package for implementation is reported. The method uses an adapted form of product variability model to provide common ground between the customer and supplier about requirements and capabilities. An associated decision support software tool guides the supplier and customer through a model-based walkthrough to discover new requirements, based on equivalent capabilities described in the product variability model. We applied the method in the work processes of the commercial provider of a software-based learning management system, and collected quantitative and qualitative data from supplier-customer interactions. Our first experiences with the method led to an increased exposure and expression of customer requirements in the customer-supplier dialogue, compared to the baseline dialogue during software package demonstrations. The paper also reports some first lessons learned to improve the method and adopt its use with other software supplier organizations.},
keywords={Software packages;Webinars;Software tools;Terminology;Adaptation models;Business;software packages;requirements-led configurations;product variability modelling;transcript analysis},
doi={10.1109/RE.2014.6912290},
ISSN={2332-6441},
month={Aug},}
@INPROCEEDINGS{6173401,
author={Li, Chunfang and Liu, Lianzhong and Li, Xiangyu},
booktitle={2012 Second International Conference on Intelligent System Design and Engineering Application},
title={Software Networks of Java Class and Application in Fault Localization},
year={2012},
volume={},
number={},
pages={1117-1120},
abstract={Complex networks are backbones of complex systems. A lot of empirical analysis demonstrates that software is kind of artificial complex systems that expose the small-world effects and follow scale-free degree distribution. Here analyzed is Java class complex networks construction in binary file with BCEL (Byte Code Engineering Library) of Apache Jakarta Project. This method needn't source code to generate networks, so it can extract all java software's inner structure to assist programmer to understand software macroscopic features. Existing lectures almost verified variety of software networks are complex networks, and some investigators have concluded software networks cannot yet produce factual instruction in software engineering. Here we utilize log information in Java networks to diagnose software fault and exception. Experiments show that software networks can not only visualize the software structure, but also really instruct software fault localization.},
keywords={Java;Complex networks;Layout;Software algorithms;Software engineering;Software systems;Complex Networks;Software Networks;Fault Localization;Java},
doi={10.1109/ISdea.2012.403},
ISSN={},
month={Jan},}
@INPROCEEDINGS{5501504,
author={Alnusair, Awny and Zhao, Tian},
booktitle={2010 Seventh International Conference on Information Technology: New Generations},
title={Using Semantic Inference for Software Understanding and Design Recovery},
year={2010},
volume={},
number={},
pages={980-985},
abstract={Software understanding is often refers to the processes and activities undertaken by software engineers to fully comprehend complex software systems. Capturing software design can certainly enable a better environment for software understanding and reuse. This paper extends our previous work on automatic design pattern recovery and details our vision towards a comprehensive environment for software understanding. Our approach utilizes Semantic Web technologies to provide a formal and explicit semantic-based representation of software systems. Through extended case studies and tool evaluations, we show that this software representation enables a detection mechanism that is both effective and usable.},
keywords={Software design;Software systems;Software maintenance;Open source software;Semantic Web;Ontologies;Knowledge representation;Software libraries;Documentation;Software engineering;Design Patterns;Knowledge Representation;Ontology Reasoning;Software Evolution;Semantic Web},
doi={10.1109/ITNG.2010.96},
ISSN={},
month={April},}
@INPROCEEDINGS{9516577,
author={Hua, Shao},
booktitle={2021 International Symposium on Artificial Intelligence and its Application on Media (ISAIAM)},
title={Applications of Cloud Desktop in Library Information System Construction},
year={2021},
volume={},
number={},
pages={60-65},
abstract={As a new technology in the internet era, cloud desktop has been widely used in library information system construction. The applications of cloud desktop can not only enhance the reader experience, improve the service quality, ensure the information security of readers, but also effectively improve the efficiency and level of library management. This paper analyses the hardware and software requirements of the cloud desktop information system of university library, gives the overall architecture of the cloud desktop library information system, and selects the IDV scheme after comparison. IDV scheme has the advantages of smooth operation, good experience, energy saving and environmental protection and provide more convenient and high-quality information service for teachers and students.},
keywords={Authorization;Cloud computing;Energy consumption;Information security;Computer architecture;Media;Libraries;Cloud desktop;Library;Information system},
doi={10.1109/ISAIAM53259.2021.00019},
ISSN={},
month={May},}
@INPROCEEDINGS{6615294,
author={Jebreen, Issam and Wellington, Robert},
booktitle={2013 IEEE 4th International Conference on Software Engineering and Service Science},
title={Understanding requirements engineering practices for packaged software implementation},
year={2013},
volume={},
number={},
pages={229-234},
abstract={Requirements engineering approaches are appropriate when software is to be developed from scratch. However, in most organization, new software is now created by integrating functionality from existing software and components or by implementing packaged software. In such cases, it makes little sense to specify requirements in terms of what the software should do - the functionality is already defined in this software. Rather, we argue that it is more appropriate to consider the software requirements from a misalignments perspective - what functions software provides and who needs that functions to do their job and what misalignments between software functions and users' needs. To explore this area, we study cases of packaged software (PS) implementation in two software development companies. Our research design follows an interpretive approach, in which analysis was undertaken using an inductive approach. From an analysis of the cases, we induced a theoretical model explaining the requirement engineering practices (REP) for PS implementation.},
keywords={Software;requirement engineering;packaged software implementation},
doi={10.1109/ICSESS.2013.6615294},
ISSN={2327-0594},
month={May},}
@INPROCEEDINGS{4115970,
author={Anwei, Chen and Tao, Ji and Ting Cheng, Kenneth Chi and Rong, He and Bo, Zou and Chong, Liu and Zhaoli and Qing, Zhang},
booktitle={2006 International Conference on Power System Technology},
title={Implementation of the International Packaged Customer Service and Marketing Management Software in China},
year={2006},
volume={},
number={},
pages={1-8},
abstract={By taking the first example for implementation of CCS project by a China power corporation, this article provides the analysis of implementation methods, challenges and benefits of international packaged customer service and marketing management software in China in detail from aspects such as implementation planning of CCS system, methodology, technical characteristics, system enhancement for localization and major challenges, solution and benefits etc.},
keywords={Software packages;Packaging;Customer service;Marketing management;Enterprise resource planning;Carbon capture and storage;Voltage transformers;Computer industry;Electronic mail;Companies;Business data processing;Computer architecture;Data acquisition;Data conversion;Information system;Loss measurement;Marketing;Potential transformers;Software;Training},
doi={10.1109/ICPST.2006.321800},
ISSN={},
month={Oct},}
@INPROCEEDINGS{1510097,
author={Sommerville, I.},
booktitle={21st IEEE International Conference on Software Maintenance (ICSM'05)},
title={Software construction by configuration: challenges for software engineering research},
year={2005},
volume={},
number={},
pages={9-},
abstract={In this article the author discusses the problems of software construction by configuration and explains why this is a challenging area for software engineering researchers. The author believes that the software maintenance research community has a key role to play in this research. Although much maintenance research has been focused on code and code analysis, the community has addressed issues of dealing with software without specifications and where the internal workings are not readily understandable. Some maintenance tools and techniques, such as program visualization, point the way to effective support for construction by configuration. The author concludes by setting out a research agenda that allows the research community to play an active part in addressing the 21st century software engineering problems.},
keywords={Software engineering;Application software;Software maintenance;Enterprise resource planning;Computer languages;Programming;Packaging;Java;Service oriented architecture;Acceleration},
doi={10.1109/ICSM.2005.81},
ISSN={1063-6773},
month={Sep.},}
@INPROCEEDINGS{7883179,
author={Cen Pengrui and Wu LingDa and Yang Chao and Yu Ronghuan},
booktitle={2016 7th IEEE International Conference on Software Engineering and Service Science (ICSESS)},
title={A hierarchical Access Control model of software repository based on RBAC},
year={2016},
volume={},
number={},
pages={761-765},
abstract={Analized the task and general form of the software management; pointed out the shortages of the software repository on security. Also introduced the Role-Based Access Control model(RBAC model) which was introduced into the construction of software repository service by combining with the requirement of security management about software repository. A hierarchical access control model based on RBAC was proposed, and it database of the software repository based on RBAC was designed. The effective application of this model in the process of software management can ensure the convenience of software distribution; and meanwhile it can effectively improve the security of the software packages.},
keywords={Software;Computer architecture;Software measurement;Cryptography;Databases;software management;access control;model;security},
doi={10.1109/ICSESS.2016.7883179},
ISSN={2327-0594},
month={Aug},}
@INPROCEEDINGS{5090221,
author={Erickson, Dave},
booktitle={2009 Canadian Conference on Electrical and Computer Engineering},
title={Interoperability across implementation: The libdrdc data standards library},
year={2009},
volume={},
number={},
pages={706-710},
abstract={This paper presents the libdrdc data standards library containing internal nomenclature, definitions, units of measure, coordinate reference frames, and representations for use in autonomous systems research. This library is a configurable, portable C / C++ / object oriented C library developed to be independent of software middleware, system architecture, processor, or operating system. It is designed to use the automatically-tuned linear algebra suite (ATLAS) and basic linear algebra suite (BLAS) and port to firmware and software. The library goal is to unify data collection and representation for various systems and communication protocols and to provide a common application programmer interface (API) for research projects at all scales. The library supports multi-platform development and currently works on Windows, Unix, GNU/Linux, and real-time executive for multiprocessor systems (RTEMS). This library is available online under the Lesser GNU Public License (LGPL) version 2.1.},
keywords={Software libraries;Linear algebra;Measurement standards;Coordinate measuring machines;Measurement units;Software systems;Middleware;Computer architecture;Operating systems;Microprogramming;autonomy;applicaiton programmer interface;automatically tuned linear algebra linear algebra suite;libraries;representations;robotics;software;standards;teleoperation;units of measure;unmanned ground vehicle;ATLAS;API;BLAS;JAUS;ROV;RTEMS;UGV},
doi={10.1109/CCECE.2009.5090221},
ISSN={0840-7789},
month={May},}
@INPROCEEDINGS{5718302,
author={Xie, Zhi-qiang and Qiang, Sheng and Sun, Xiao and Shuai, Wei and Zheng, Rui},
booktitle={2010 Second World Congress on Software Engineering},
title={Development of Simulation and Analysis Software of Temperature Control for Massive Concrete Construction},
year={2010},
volume={1},
number={},
pages={233-236},
abstract={According to the shortage of analysis software for temperature control while massive concrete structures were widely used, the special temperature control aided analysis software (TCAS) was developed. A mature Fortran program was applied with a precise method for pipe cooling calculation added during development. Friendly graphic user interface was developed, by using Microsoft foundation classes (MFC). Open graphics library (OpenGL) was applied for the display of the model and results. TCAS has strong practicality, pertinence and easy operation, comparing with general commercial finite element analysis software. Theory of temperature control for concrete construction and mechanism of major measures for temperature control were analyzed. In particular, various concrete cooling simulation methods were compared and the cooling pipe discrete element method using in this software was introduced in detail. Details on the development process, software modules, and functions of major modules were introduced in this paper. With the help of TCAS, the choice of concrete temperature control measures and designing of temperature control scheme will become simpler and more convenient.},
keywords={Concrete;Cooling;Temperature measurement;Stress;Software;Temperature;concrete;finite element method;temperature control;Object-oriente;mixed programming},
doi={10.1109/WCSE.2010.85},
ISSN={},
month={Dec},}
@INPROCEEDINGS{5283136,
author={Leontie, Eugen and Bloom, Gedare and Narahari, Bhagirath and Simha, Rahul and Zambreno, Joseph},
booktitle={2009 International Conference on Computational Science and Engineering},
title={Hardware Containers for Software Components: A Trusted Platform for COTS-Based Systems},
year={2009},
volume={2},
number={},
pages={830-836},
abstract={Much of modern software development consists of assembling together existing software components and writing the glue code that integrates them into a unified application. The term COTS-based system (CBS) is often used to describe such applications, for which the components assembled are understood to be Commercial-Off-The-Shelf (COTS) components written by a multitude of independent third parties. The manner of assembly in CBS includes full-source components that are integrated at compile-time, pure-binary libraries incorporated at load-time, and plugins that are loaded into the application at execution time by the user.Because components have access to system resources, applications may crash due to faulty components or may be compromised by malicious components. In this paper, we ask the question: can hardware support the development and deployment of CBS by providing applications with a trusted platform for managing components and their interactions?We present an architecture that places each CBS component in a hardware-enforced container. The hardware then detects improper usage of system resources (unauthorized memory accesses or denial-of-service) and enables applications to undertake a hardware-supervised recovery procedure. Furthermore, the hardware also maintains a violation record to enable developers to recreate the violation for the purpose of debugging and further development. Taken together, the purpose of the architecture we propose is to enable executing untrusted CBS code on trusted hardware.},
keywords={Hardware;Containers;Application software;Assembly systems;Programming;Writing;Libraries;Computer crashes;Computer crime;Debugging;Memory protection;isolation;fine-grained protection;software security;architectural support for security},
doi={10.1109/CSE.2009.56},
ISSN={},
month={Aug},}
@INPROCEEDINGS{9366257,
author={Lin, Chun-Chang and Zhao, Zi-Chi and Chou, Yuan-Hsiu and Tung, Sheng-Han and Wu, Sheng-Min and Wang, Kun-Chi},
booktitle={2020 IEEE 2nd International Conference on Architecture, Construction, Environment and Hydraulics (ICACEH)},
title={BIM-Based Risk Analysis in Bridge Engineering},
year={2020},
volume={},
number={},
pages={60-63},
abstract={In recent years, although there has been a significant decline in construction occupational disasters, construction and labor safety planning are still the focus of the government's vigorous promotion. According to the data from the Institute of Labor and Occupational Safety and Health of the Ministry of Labor, the construction industry has the highest occupational accident rate per thousand people, indicating that construction occupational safety still needs to be greatly improved. BIM has been widely used in construction projects. Its visibility, coordination, and simulation characteristics should be able to find construction hazards that are relatively invisible on general 2D construction drawings. Thus, this study uses BIM to assist in analyzing the construction risks of the bridge and researches on construction activities of relatively high risks with a bridge project as an example, to reduce the risks that may occur during actual construction activities. The research results indicate that the weight of each part of the main bridge tower is obtained by the BIM model, and the crane is selected after the rated load is calculated. This process prevents the weight of hanging objects from exceeding the rated load of the crane, thereby reducing the possibility of objects flying off from the crane. Two software packages, namely SketchUp and Fuzor, are used to simulate the movement line of the crane and the gyration radius of a hanging operation in advance. This process reduces (1) the risk of collision between cranes due to an overlap of their gyration radii and (2) the risk of collision between the crane and construction personnel who enter into the gyration radius during hanging operations.},
keywords={Bridges;Visualization;Cranes;Occupational safety;Three-dimensional displays;Poles and towers;Hazards;Building information modeling;Risk analysis;Bridge engineering},
doi={10.1109/ICACEH51803.2020.9366257},
ISSN={},
month={Dec},}
@INPROCEEDINGS{4608009,
author={Bing Zhang and Rubo Zhang},
booktitle={2008 International Conference on Information and Automation},
title={An Agent-oriented fuzzy evaluation model for evaluating software process modeling methods},
year={2008},
volume={},
number={},
pages={270-274},
abstract={In order to help developers choose suitable modeling method according to specific modeling environment and requirement for achieving the best modeling effect, it is significant to make reasonable evaluation for software process modeling methods. Agent-oriented fuzzy evaluation model for evaluating software process modeling methods is discussed in the paper. Firstly, the software architecture of fuzzy evaluation is presented and optimized by using the design pattern and multi-agent technology. Secondly, the unit structure of agent is put forward and the composition principle of the unit structure is analyzed in details. Finally, the design and implementation of agent-oriented fuzzy evaluation model are discussed by giving a four-table combined implementation template and the implementation algorithms. The proposed agent-oriented fuzzy evaluation model has feasibility and engineering practical value.},
keywords={Indexes;Libraries;Biological system modeling;Software;Algorithm design and analysis;Object oriented modeling;Construction industry},
doi={10.1109/ICINFA.2008.4608009},
ISSN={},
month={June},}
@INPROCEEDINGS{4913075,
author={Limsoonthrakul, Somphop and Dailey, Matthew N. and Srisupundit, Methee and Tongphu, Suwan and Parnichkun, Manukid},
booktitle={2008 IEEE International Conference on Robotics and Biomimetics},
title={A modular system architecture for autonomous robots based on blackboard and publish-subscribe mechanisms},
year={2009},
volume={},
number={},
pages={633-638},
abstract={We present a system software architecture for mobile robots such as autonomous vehicles. The system achieves the goals of flexibility, maintainability, testability, and modifiability through a decoupled software architecture based on an asynchronous publish-subscribe mechanism and a blackboard object handling synchronized access to shared data. We report on two implementations using the proposed generic architecture and the POSIX real time API. The first implementation is for an autonomous vehicle using waypoint-based navigation, and the second implementation uses the same high-level modules but replaces the low-level hardware interfaces with a virtual reality simulation. Our experiments and an evaluation indicate that the architecture is suitable for a wide variety of control algorithms and supports the construction of testable, maintainable, and modifiable autonomous robot vehicles at low cost in terms of real-time performance.},
keywords={Publish-subscribe;Mobile robots;Computer architecture;Remotely operated vehicles;System software;Software testing;System testing;Software architecture;Navigation;Hardware;Software Architecture;Real Time Systems;Decoupling;Mobile Robot Control;Autonomous Vehicles},
doi={10.1109/ROBIO.2009.4913075},
ISSN={},
month={Feb},}
@ARTICLE{4135384,
author={Lee, Chang-Chun and Liu, Hsing-Chih and Chiang, Kuo-Ning},
journal={IEEE Transactions on Components and Packaging Technologies},
title={3-D Structure Design and Reliability Analysis of Wafer Level Package With Stress Buffer Mechanism},
year={2007},
volume={30},
number={1},
pages={110-118},
abstract={With the present trend of multifunction and minimizing of size, the conventional electronic package type no longer meets the requirement of the new-generation products. Consequently, new type packaging, based on the wafer level packages (WLPs) and chip scale packages (CSPs) technology are being developed to achieve these requirements, as well as long term reliability. Novel wafer-level chip scale packages (WLCSP) with a stress buffer layer and bubble-like plate (Fig. 1) are proposed in this research to improve the solder joint fatigue life. The thermal stress caused by the coefficient of thermal expansion mismatch can be significantly reduced, and the reliability of the WLP could be substantially enhanced by this new design. In order to realize the relationship of the solder joint fatigue life, stress buffer layer and bubble-like plate, a finite element parametric analysis applying software ANSYS is utilized. In additions, the methodology based on the finite element method (FEM) used in the study has been verified by the relative experiments in our previous researches. The design parameters include the thickness of the stress buffer layer, thickness, bending angle and standoff height of the different types of bubble-like plate. The results of the FEM analysis reveal that the stress buffer layer and bubble-like plate can relax the thermal stresses of solder joints and enhance the package reliability. Besides, the peeling stress between stress buffer layer and two different types of bubble-like plates is discussed, and the stress state of the leadframe is also analyzed in this research. Furthermore, the findings of this research can be used as the guideline for advanced WLCSP design},
keywords={Wafer scale integration;Thermal stresses;Electronic packaging thermal management;Buffer layers;Chip scale packaging;Electronics packaging;Soldering;Fatigue;Thermal expansion;Finite element methods;Bubble-like stress buffer layer;chip scale packages (CSP);finite element method (FEM);reliability;simulation;wafer level packages (WLP)},
doi={10.1109/TCAPT.2007.892083},
ISSN={1557-9972},
month={March},}
@ARTICLE{385970,
author={Shaw, M. and DeLine, R. and Klein, D.V. and Ross, T.L. and Young, D.M. and Zelesnik, G.},
journal={IEEE Transactions on Software Engineering},
title={Abstractions for software architecture and tools to support them},
year={1995},
volume={21},
number={4},
pages={314-335},
abstract={Architectures for software use rich abstractions and idioms to describe system components, the nature of interactions among the components, and the patterns that guide the composition of components into systems. These abstractions are higher level than the elements usually supported by programming languages and tools. They capture packaging and interaction issues as well as computational functionality. Well-established (if informal) patterns guide the architectural design of systems. We sketch a model for defining architectures and present an implementation of the basic level of that model. Our purpose is to support the abstractions used in practice by software designers. The implementation provides a testbed for experiments with a variety of system construction mechanisms. It distinguishes among different types of components and different ways these components can interact. It supports abstract interactions such as data flow and scheduling on the same footing as simple procedure call. It can express and check appropriate compatibility restrictions and configuration constraints. It accepts existing code as components, incurring no runtime overhead after initialization. It allows easy incorporation of specifications and associated analysis tools developed elsewhere. The implementation provides a base for extending the notation and validating the model.<>},
keywords={Software architecture;Computer languages;Computer architecture;Software engineering;Computer science;Software design;Software tools;Packaging;System testing;Scheduling},
doi={10.1109/32.385970},
ISSN={1939-3520},
month={April},}
@ARTICLE{1589282,
author={Hatlo, M. and James, F. and Mato, P. and Moneta, L. and Winkler, M. and Zsenei, A.},
journal={IEEE Transactions on Nuclear Science},
title={Developments of mathematical software libraries for the LHC experiments},
year={2005},
volume={52},
number={6},
pages={2818-2822},
abstract={This paper describes the activities performed by a working group formed with the objective to support and develop mathematical software for the high energy physics experiments of the large hadron collider (LHC). The goal is to share common mathematical libraries between the experiments and the LHC computing grid application area projects. We present the various library components and their design, with particular emphasis on fitting and minimization, describing the new object oriented implementation in C++ of the MINUIT minimization package},
keywords={Software libraries;Large Hadron Collider;Grid computing;Packaging;Software packages;Random number generation;Seals;Software tools;Data analysis;Collaborative software;Large hadron collider (LHC) computing grid (LCG);mathematical library;SEAL},
doi={10.1109/TNS.2005.860152},
ISSN={1558-1578},
month={Dec},}
@INPROCEEDINGS{8525130,
author={Smirnova, Olga V. and Zin Aung, Kyaw},
booktitle={2018 IEEE International Conference "Quality Management, Transport and Information Security, Information Technologies" (IT&QM&IS)},
title={The Adaptation of Information Modeling Software for the Metal Truss Bridges Design and Utilize Bridges},
year={2018},
volume={},
number={},
pages={491-494},
abstract={The article describes the actual problem of using information models of construction objects put into operation. At this stage, there is a need for special software, which should be connected with the finished information model. It is proposed to use the application programming interface Open API, integrating the necessary algorithms of calculation and analysis into the system to make the process of updating the information model more efficient. The variants of the new dialog boxes created with the Tekla Open API are shown, which illustrate the possibilities of this approach to correct information models of bridges created in the Tekla program.},
keywords={Fasteners;Solid modeling;Bridges;Adaptation models;Metals;Software;Computational modeling;Information model;truss;section;metal bridge;Open API interface;adaptation},
doi={10.1109/ITMQIS.2018.8525130},
ISSN={},
month={Sep.},}
@INPROCEEDINGS{9385211,
author={Voloshkina, Elena and Efimenko, Volodymyr and Zhukova, Olena and Chernyshev, Denis and Korduba, Iryna and Shovkivska, Viktoriia},
booktitle={2021 IEEE 16th International Conference on the Experience of Designing and Application of CAD Systems (CADSM)},
title={Visual Modeling of the Landslide Slopes Stress-Strain State for the Computer-Aided Design of Retaining Wall Structures},
year={2021},
volume={},
number={},
pages={5/1-5/5},
abstract={The report authors have developed a LANDSLIP software package for visual modeling and landslide slopes stress-strain state calculation in JAVA programming language. It has various modifications (flat and spatial versions, various calculation models etc.). The user interacts with the LANDSLIP by means of visual modeling on the Graphics User Interface. The user does not interact with all other LANDSLIP objects, they are completely controlled by the Graphics User Interface. It creates all other objects, modifies, uses, and, if necessary, removes them. The interaction between the user and the Graphics User Interface is performed via the menu system. Using the graphical editor menu, the user can create objects to describe the landslide structure and manipulate the additional sliding surfaces, groundwater lines set and program functions responsible for mathematical calculations and design documentation preparation. The LANDSLIP software package is equipped with interfaces that facilitate collecting data from the MicroStation environment, digital map, and geological database. The geological cross-sections are automatically created, and geotechnical soil parameters are evaluated. The software enables the stability analysis of any slopes or scarps using various calculation methods. It ensures wide opportunities to predict, evaluate and combat natural threats. The LANDSLIP software package results reliability was verified by comparative calculations via similar Canadian SLOPE/W software package at the design office of the ‚ÄúTur√≥w‚Äù brown coal mine in Poland. The results differences are within the acceptable limits and depend on the peculiarities of initial-boundary conditions input in various graphic editors, various calculation models, etc.},
keywords={Visualization;Solid modeling;Software packages;Computational modeling;Geology;Terrain factors;Stability analysis;visual modeling;stress-strain state;landslide hazard slopes;computer-aided design;landslide protection structures},
doi={10.1109/CADSM52681.2021.9385211},
ISSN={2572-7591},
month={Feb},}
@INPROCEEDINGS{9320398,
author={Hukerikar, Saurabh and Engelmann, Christian},
booktitle={2020 IEEE 25th Pacific Rim International Symposium on Dependable Computing (PRDC)},
title={PLEXUS: A Pattern-Oriented Runtime System Architecture for Resilient Extreme-Scale High-Performance Computing Systems},
year={2020},
volume={},
number={},
pages={31-39},
abstract={For high-performance computing (HPC) system designers and users, meeting the myriad challenges of next-generation exascale supercomputing systems requires rethinking their approach to application and system software design. Among these challenges, providing resiliency and stability to the scientific applications in the presence of high fault rates requires new approaches to software architecture and design. As HPC systems become increasingly complex, they require intricate solutions for detection and mitigation for various modes of faults and errors that occur in these large-scale systems, as well as solutions for failure recovery. These resiliency solutions often interact with and affect other system properties, including application scalability, power and energy efficiency. Therefore, resilience solutions for HPC systems must be thoughtfully engineered and deployed. In previous work, we developed the concept of resilience design patterns, which consist of templated solutions based on well-established techniques for detection, mitigation and recovery. In this paper, we use these patterns as the foundation to propose new approaches to designing runtime systems for HPC systems. The instantiation of these patterns within a runtime system enables flexible and adaptable end-to-end resiliency solutions for HPC environments. The paper describes the architecture of the runtime system, named Plexus, and the strategies for dynamically composing and adapting pattern instances under runtime control. This runtime-based approach enables actively balancing the cost-benefit trade-off between performance overhead and protection coverage of the resilience solutions. Based on a prototype implementation of PLEXUS, we demonstrate the resiliency and performance gains achieved by the pattern-based runtime system for a parallel linear solver application.},
keywords={Resilience;Runtime;Libraries;Computer architecture;Systems architecture;Government;Scalability;resilience;runtime systems;high-performance computing;exascale computing;software patterns},
doi={10.1109/PRDC50213.2020.00014},
ISSN={2473-3105},
month={Dec},}
@INPROCEEDINGS{5070716,
author={Bonar, Adrian},
booktitle={2009 Sixth International Conference on Information Technology: New Generations},
title={The Design of a System for Testing Database-Centric Software Applications Using Database Surrogates},
year={2009},
volume={},
number={},
pages={779-783},
abstract={This paper presents the design of a system for testing database-centric software applications using surrogate databases. Traditional testing approaches, such as using test bed databases and using stub code or mock objects, are often either difficult to implement and manage, or do not provide entirely effective verification of the functionality of the application under test. Testing database-centric applications using database surrogates addresses these issues. A database surrogate is a data source, such as an XML file, which has the same structure as the backend database of the application under test. Database surrogates can be easier to implement and manage than actual test bed databases, but provide a mechanism for thoroughly testing the functionality of the application under test. The essence of the surrogate database testing system is to create a very lightweight library which provides an interface which is independent of the actual physical implementation of the underlying data source.},
keywords={Databases;Software testing;System testing;Application software;Automatic testing;XML;Programming environments;Software libraries;Data engineering;Production;Automatic testing;programming environments;software libraries;software quality;software testing},
doi={10.1109/ITNG.2009.83},
ISSN={},
month={April},}
@INPROCEEDINGS{1245312,
author={Brukman, O. and Dolev, S. and Kolodner, E.K.},
booktitle={Proceedings 2003 Symposium on Security and Privacy},
title={Self-stabilizing autonomic recoverer for eventual Byzantine software},
year={2003},
volume={},
number={},
pages={20-29},
abstract={We suggest to model software package flaws (bugs) by assuming eventual Byzantine behavior of the package. In particular, the package has been tested by the manufacturer for limited length scenarios when started in a predefined initial state; the behavior beyond the tested scenario may be Byzantine. Restarts (reboots) are useful for recovering such systems. We suggest a general yet practical framework and paradigm, based on a theoretical foundation, for the monitoring and restarting of systems. An autonomic recoverer that monitors and restarts the system is proposed, where: the autonomic recoverer is designed to handle different tasks given specific task requirements in the form of predicates and actions. DAG subsystem hierarchy structure is used by a consistency monitoring procedure in order to achieve gracious recovery. The existence and correct functionality of the autonomic recovery is guaranteed by the use of a kernel resident (anchor) process, and the design of the process to be self-stabilizing. The autonomic recoverer uses new scheme for liveness assurance via online monitoring that complements known schemes for online ensuring safety.},
keywords={Computer bugs;Safety;Computer industry;Software testing;Software systems;Software packages;Packaging;Monitoring;Fault tolerant systems;Computer science},
doi={10.1109/SWSTE.2003.1245312},
ISSN={},
month={Nov},}
@ARTICLE{7962183,
author={Xu, Ming and He, Yanchao and Yu, Kai},
journal={IEEE Transactions on Aerospace and Electronic Systems},
title={A Software Architecture Design for Autonomous Formation Flying Control},
year={2017},
volume={53},
number={6},
pages={2950-2962},
abstract={Based on currently developed on-board platforms, this paper proposes a software architecture for orbiting spacecraft for autonomously establishing formation, station-keeping, and reconfiguring maneuvers. Components of the software architecture include orbital prediction (OP), orbital control (OC), and relative navigation (RN); these not only meet the constraining requirements of attitude control, thermal control, thrusters, and the ground-based operator, but also have a minimal impact on the on-board data handling (OBDH) system. All of the OP, OC, and RN algorithms are packaged as a subroutine (OPCNS) called by the OBDH system at regular intervals. The in-advance control instruction set (CIS) is temporarily stored in random access memory to be read by OPCNS as a formal argument, rather than in any fixed space of read only memory. The simplified general perturbations 4 method is introduced to perform a specific time interval of OP based on filtered relative measurements of RN. The relative-orbital-element (ROE) control method is employed to create in-advance instructions, depending on whether or not the predicted ROEs trigger the threshold values of any maneuver and then to allocate these instructions into the CIS following the proposed relationship rules between all of the ROEs and the ground control instruction. To tolerate the temporary divergence of the RN filter after any orbital maneuver, an ROE-based unscented Kalman filter is enhanced by using the control instruction in current execution to accelerate the co- nvergence. A 3-craft formation scenario for interferometric synthetic aperture radar measurements is used to validate all of the functions of the proposed software architecture.},
keywords={Space vehicles;Software architecture;Attitude control;Extraterrestrial measurements;Navigation;Software;Frequency control;formation flying;software implementation;autonomous orbital control;in-advance control instruction;temporary storage in RAM},
doi={10.1109/TAES.2017.2721658},
ISSN={1557-9603},
month={Dec},}
@ARTICLE{9229119,
author={Huang, Yin-Peng and Tsai, Ting-Yen and Chen, Ting-Hao and Chueh, Chuan-Bor and Tsai, You-Nan and Chang, Yu-Wei and Wu, Yi-Chung and Chen, Hung-Wen and Tsai, Meng-Tsan and Hung, Yi-Ping and Lee, Hsiang-Chieh},
journal={IEEE Access},
title={A Generic Framework for Fourier-Domain Optical Coherence Tomography Imaging: Software Architecture and Hardware Implementations},
year={2020},
volume={8},
number={},
pages={191726-191736},
abstract={Fourier-domain optical coherence tomography (FD-OCT), including spectral-domain OCT (SD-OCT) and swept-source OCT (SS-OCT), allows the volumetric imaging of the tissue architecture with a faster speed and higher detection sensitivity than does time-domain OCT. Although the hardware implementations of SD-OCT and SS-OCT are different, these technologies share very similar signal processing steps for image reconstruction. In this study, we developed hardware implementations and software architectures to design a generic framework for FD-OCT. For SD-OCT systems, an external synchronization approach was used to realize a data acquisition schematic similar to that used in SS-OCT by carefully managing the timing clocks in the detection unit and for the waveform generation. In addition, by utilizing modules and factory concepts, a software engine can be developed that supports various acquisition devices and software operations or image processing functions with high operation flexibility while maintaining its robustness. Data processing and data saving were optimized using the parallel computing method with the OpenMP library and by leveraging the parallelism within the acquired data, respectively.},
keywords={Clocks;Cameras;Hardware;Data acquisition;Engines;Synchronization;Biomedical optical imaging;medical diagnostic imaging;data acquisition;biophotonics;software architecture;parallel processing},
doi={10.1109/ACCESS.2020.3032105},
ISSN={2169-3536},
month={},}
@INPROCEEDINGS{6903191,
author={Lee, Sunghoon and Lee, Sanghee and Lim, Sumi and Jung, Jiyoung and Choi, Sangho and Kim, Neunghoe and Lee, Jung-Been},
booktitle={2014 IEEE 38th International Computer Software and Applications Conference Workshops},
title={An API Design Process in Terms of Usability: A Case Study on Building More Usable APIs for Smart TV Platform},
year={2014},
volume={},
number={},
pages={567-571},
abstract={Products are released based on various platforms. An Application programing interface (API) is important to develop platform based applications effectively. Previously, we had some difficulties in developing applications using our platform APIs. Their name was ambiguous, and their functions were not primitive, and even their documentation was not enough to refer to. Therefore, we had to maintain our platform APIs. In this paper, we propose an API design process and API evaluation guidelines. "API Analysts" elicit functions from requirement documents. "API designer" design APIs for the functions following the guidelines. "Technical writers" produce documentation for the APIs. "API reviewers" evaluate the APIs and API documentation conforming to the proposed guidelines. Proposed process made our platform APIs more convenient to use for developing applications.},
keywords={Documentation;Guidelines;Usability;Measurement;Terminology;Androids;applicaton programming interface;api;software;usability;requirements;process;platform product},
doi={10.1109/COMPSACW.2014.95},
ISSN={},
month={July},}
@INPROCEEDINGS{4682338,
author={Lee, Chongwon and Lee, Byungjeong and Wu, Chisu},
booktitle={2008 Third International Conference on Convergence and Hybrid Information Technology},
title={Prioritizing Checklists for the Decision Support of Quality Evaluation Based on External Multiple Characteristics of Software},
year={2008},
volume={2},
number={},
pages={773-778},
abstract={Since observing every aspect of external software behavior is almost impossible, it is crucial to designate an adequate range for quality evaluation such as an adequate number of quality checklists or product quality metrics. In this paper, a repository accumulating the quality checklists and metrics having dependency relationships with external characteristics of software is suggested. The repository is created and maintained with the prior sample data of software defects or evaluation records. In the repository, multiple external characteristics of software are mapped as nodes to affect and determine the priority ranks of quality checklists. The advantage of the repository is the easy extension of inference mechanism. When the feedback is sent back from the quality certifier and stakeholders, the inference mechanism is extended to reflect the new sample data without separate training upon its own structure of nodes network.},
keywords={Software quality;Software packages;Packaging;Certification;Inference mechanisms;Computer science;Software maintenance;Feedback;Guidelines;Information technology;quality checklists;decision support;external characteristics of software},
doi={10.1109/ICCIT.2008.122},
ISSN={},
month={Nov},}
@INPROCEEDINGS{8488214,
author={Aijun, Fang and Bulega, Tonny E. and Shoulei, Ding},
booktitle={2018 10th International Conference on Communication Software and Networks (ICCSN)},
title={The Box of Virtual Middleboxes Design and Implementation in Software Defined Networking},
year={2018},
volume={},
number={},
pages={579-583},
abstract={The purpose of this paper is to introduce a box of packages containing application models of virtual middleboxes based hypervisor technology and to propose a standard container (box) program with a virtual appliance. The net element of physical hardware is the virtual middleboxes applying virtual appliance of open virtualization format (OVF) package for business application service. It is software-defined networking (SDN) based on network management theory, NFV implementation, and cloud computing service concept. It addresses flexible, elastic, and on-demand self-service of the out-of-the-box service platform. Applications packaged with operating system in the virtual appliance are pre-configured software stack. They can be loaded into virtual middleboxes anywhere, enabling flexible rapid distribution and deployment to meet customized user needs. In this study, the virtual appliance container is x86-based server hardware with installed hypervisor virtualization platform.},
keywords={Virtualization;Hardware;Containers;Middleboxes;Virtual machine monitors;Standards;Servers;virtual middleboxes;open virtualization format;virtual appliances;network virtualization;software-defined network},
doi={10.1109/ICCSN.2018.8488214},
ISSN={2472-8489},
month={July},}
@INPROCEEDINGS{9482484,
author={Chesnokov, Andrei and Mikhailov, Vitalii and Dolmatov, Ivan},
booktitle={2021 1st International Conference on Technology Enhanced Learning in Higher Education (TELE)},
title={Learning Activities for Mastering Flexible Roof Constructions},
year={2021},
volume={},
number={},
pages={165-170},
abstract={Flexible roofs become an integral part of modern building constructions. Being widely used for public buildings, they have great potential in the field of industrial construction as well. Flexible roofs, however, possess complex structural behavior. They require deep understanding of the key concepts by designers and project managers, who implement them into a real life. Civil engineering and architectural specializations need to incorporate flexible constructions into the academic activity. It will ensure competitiveness of prospective specialists in the job market. Active learning approach is considered for mastering flexible roof structures. Prototyping is an essential tool for long-term memorization of the key concepts. Modern computer technologies and specialized software packages, however, gradually displace laboratory modeling. Structural deformability, geometrically nonlinear behavior, preliminary stressing and equilibrium structural shape can be easily grasped by means of computer simulation and numerical investigation of exemplary constructions.},
keywords={Software packages;Shape;Computational modeling;Force;Process control;Tools;Stability analysis;active learning;professional competence;computer simulation;cable and membrane constructions},
doi={10.1109/TELE52840.2021.9482484},
ISSN={},
month={June},}
@INPROCEEDINGS{9538711,
author={Sadeghifam, Aidin Nobahar and Joo, Meheron Selowara and Mohd Pauzi, Nurul Noraziemah and Namini, Seyed Saeed Banihashemi},
booktitle={2021 International Conference on Green Energy, Computing and Sustainable Technology (GECOST)},
title={Energy Retrofitting and Thermal Comfort Improvement of the Public Buildings in Malaysia},
year={2021},
volume={},
number={},
pages={1-5},
abstract={Sustainability and environmental matters are two important discussion topics at present. Some other important issues, e.g. the use of energy, are related to sustainability matters. In order for a country to develop and grow economically, energy is a significant element that is mostly used in buildings and the problem is that they waste the energy especially in public buildings such as libraries. As a result, analyzing and retrofitting energy consumption in public buildings is the purpose of the present research. It will be done by applying Building Information Modeling (BIM) software with the aim of reaching comfort level and energy management. BIM software was applied in a case study and with the help of the energy analysis software then the analysis was carried out. Improving the efficiency of energy consumption was made possible, through identifying and changing the present patterns of energy usage. With the aim of changing the materials, internal design and the building's comfort level, a practical method was suggested in this case study which resulted in a safe temperature for books, a comfortable temperature for users, in addition to energy preservation of up to 25%.},
keywords={Temperature measurement;Energy consumption;Green buildings;Buildings;Energy measurement;Software;Libraries;sustainability;energy;BIM software;comfort level;public buildings},
doi={10.1109/GECOST52368.2021.9538711},
ISSN={},
month={July},}
@INPROCEEDINGS{1649184,
author={Balos, K. and Zielinski, K. and Wojtas, K. and Wasilewski, L.},
booktitle={2nd International Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities, 2006. TRIDENTCOM 2006.},
title={Software tool construction for deployment of JMX services in distributed testbeds},
year={2006},
volume={},
number={},
pages={11 pp.-470},
abstract={The paper presents a practical approach to construction of a software tool, which will be suitable for deployment of Java components in distributed and heterogeneous testbeds. Requirements of such a system are identified, and a suitable architecture, which is scalable and allows the installation and starting Java applications on chosen computational nodes, is proposed. The modular architecture of the constructed system is based on JMX (Java management extensions), which require packaging each Java component as an MBean and providing a deployment descriptor for it in the form of an XML MLet file. Such an approach can be applied to building a lightweight framework for Java applications and services using only one Java virtual machine per computational node, where each component is installed and started in the same JVM, thus limiting valuable resource consumption. This approach cannot be useful for end-user applications without additional services allowing it to control and manage the deployed modules. Some of them include standard JMX services, such as the MLet service (for dynamic loading), while some have to be developed specifically for the purpose of operating in distributed testbeds. A detailed discussion of the system requirements, architecture of the implemented system called JIMS, built on the top of JMX core components are presented in this paper.},
keywords={Software tools;Software testing;Java;Computer architecture;Application software;Computer applications;Packaging machines;XML;Buildings;Virtual machining},
doi={10.1109/TRIDNT.2006.1649184},
ISSN={},
month={March},}